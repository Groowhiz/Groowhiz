PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

  [1m[36mOauthProvider Load (1.0ms)[0m  [1mSELECT "oauth_providers".* FROM "oauth_providers"[0m
PG::UndefinedTable: ERROR:  relation "oauth_providers" does not exist
LINE 1: SELECT "oauth_providers".* FROM "oauth_providers"
                                        ^
: SELECT "oauth_providers".* FROM "oauth_providers"
PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

  [1m[35mCatarseSettingsDb::Setting Load (0.9ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 1: SELECT  "settings".* FROM "settings"  WHERE "settings"."name...
                                  ^
: SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

  [1m[36m (23.6ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (7.1ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to InitialSchema (20121226120921)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (299.0ms)[0m  [1m--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: pg_trgm; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pg_trgm WITH SCHEMA public;

--
-- Name: unaccent; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS unaccent WITH SCHEMA public;

SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: active_admin_comments; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE active_admin_comments (
    id integer NOT NULL,
    resource_id integer NOT NULL,
    resource_type character varying(255) NOT NULL,
    author_id integer,
    author_type character varying(255),
    body text,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    namespace character varying(255)
);


--
-- Name: admin_notes_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE admin_notes_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: admin_notes_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE admin_notes_id_seq OWNED BY active_admin_comments.id;


--
-- Name: institutional_videos; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE institutional_videos (
    id integer NOT NULL,
    title character varying(255),
    description text,
    video_url character varying(255),
    visible boolean,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


--
-- Name: advert_videos_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE advert_videos_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: advert_videos_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE advert_videos_id_seq OWNED BY institutional_videos.id;


--
-- Name: backers; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE backers (
    id integer NOT NULL,
    project_id integer NOT NULL,
    user_id integer NOT NULL,
    reward_id integer,
    value numeric NOT NULL,
    confirmed boolean DEFAULT false NOT NULL,
    confirmed_at timestamp without time zone,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    anonymous boolean DEFAULT false,
    key text,
    requested_refund boolean DEFAULT false,
    refunded boolean DEFAULT false,
    credits boolean DEFAULT false,
    notified_finish boolean DEFAULT false,
    payment_method text,
    payment_token text,
    payment_id character varying(255),
    payer_name text,
    payer_email text,
    payer_document text,
    address_street text,
    address_number text,
    address_complement text,
    address_neighbourhood text,
    address_zip_code text,
    address_city text,
    address_state text,
    address_phone_number text,
    payment_choice text,
    payment_service_fee numeric,
    CONSTRAINT backers_value_positive CHECK ((value >= (0)::numeric))
);


--
-- Name: categories; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE categories (
    id integer NOT NULL,
    name text NOT NULL,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    CONSTRAINT categories_name_not_blank CHECK ((length(btrim(name)) > 0))
);


--
-- Name: projects; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE projects (
    id integer NOT NULL,
    name text NOT NULL,
    user_id integer NOT NULL,
    category_id integer NOT NULL,
    goal numeric NOT NULL,
    expires_at timestamp without time zone NOT NULL,
    about text NOT NULL,
    headline text NOT NULL,
    video_url text NOT NULL,
    image_url text,
    short_url text,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    can_finish boolean DEFAULT false,
    finished boolean DEFAULT false,
    about_html text,
    visible boolean DEFAULT false,
    rejected boolean DEFAULT false,
    recommended boolean DEFAULT false,
    home_page_comment text,
    successful boolean DEFAULT false,
    permalink character varying(255),
    video_thumbnail text,
    state character varying(255),
    online_days integer DEFAULT 0,
    CONSTRAINT projects_about_not_blank CHECK ((length(btrim(about)) > 0)),
    CONSTRAINT projects_headline_length_within CHECK (((length(headline) >= 1) AND (length(headline) <= 140))),
    CONSTRAINT projects_headline_not_blank CHECK ((length(btrim(headline)) > 0)),
    CONSTRAINT projects_video_url_not_blank CHECK ((length(btrim(video_url)) > 0))
);


--
-- Name: backers_by_category; Type: VIEW; Schema: public; Owner: -
--

CREATE OR REPLACE VIEW backers_by_category AS 
 SELECT to_char(p.expires_at, 'yyyy'::text) AS year, c.name AS category, sum(b.value) AS total_backed, count(DISTINCT b.user_id) AS total_backers
   FROM backers b
   JOIN projects p ON p.id = b.project_id
   JOIN categories c ON c.id = p.category_id
  WHERE b.confirmed
  GROUP BY to_char(p.expires_at, 'yyyy'::text), c.name
  ORDER BY to_char(p.expires_at, 'yyyy'::text), c.name;

--
-- Name: backers_by_payment_choice; Type: VIEW; Schema: public; Owner: -
--

CREATE OR REPLACE VIEW backers_by_payment_choice AS 
 SELECT to_char(p.expires_at, 'yyyy-mm'::text) AS month, backers.payment_method, backers.payment_choice, sum(backers.value) AS total_backed, sum(backers.value) / bbm.total_month_backed AS payment_choice_ratio, sum(
        CASE
            WHEN backers.refunded THEN backers.value
            ELSE NULL::numeric
        END) AS total_refunded, sum(
        CASE
            WHEN backers.refunded THEN backers.value
            ELSE NULL::numeric
        END) / bbm.total_month_backed AS refunded_ratio
   FROM projects p
   JOIN backers ON backers.project_id = p.id
   JOIN ( SELECT to_char(b2.created_at, 'yyyy-mm'::text) AS b2month, sum(b2.value) AS total_month_backed
      FROM backers b2
     WHERE b2.confirmed
     GROUP BY to_char(b2.created_at, 'yyyy-mm'::text)) bbm ON bbm.b2month = to_char(backers.created_at, 'yyyy-mm'::text)
  WHERE backers.confirmed
  GROUP BY to_char(p.expires_at, 'yyyy-mm'::text), bbm.total_month_backed, backers.payment_method, backers.payment_choice
  ORDER BY to_char(p.expires_at, 'yyyy-mm'::text), backers.payment_method, backers.payment_choice;

--
-- Name: backers_by_project; Type: VIEW; Schema: public; Owner: -
--

CREATE OR REPLACE VIEW backers_by_project AS 
 SELECT backers.project_id, sum(backers.value) AS total_backed, max(backers.value) AS max_backed, count(DISTINCT backers.user_id) AS total_backers
   FROM backers
  WHERE backers.confirmed
  GROUP BY backers.project_id;

--
-- Name: users; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE users (
    id integer NOT NULL,
    primary_user_id integer,
    provider text NOT NULL,
    uid text NOT NULL,
    email text,
    name text,
    nickname text,
    bio text,
    image_url text,
    newsletter boolean DEFAULT false,
    project_updates boolean DEFAULT false,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    admin boolean DEFAULT false,
    full_name text,
    address_street text,
    address_number text,
    address_complement text,
    address_neighbourhood text,
    address_city text,
    address_state text,
    address_zip_code text,
    phone_number text,
    credits numeric DEFAULT 0,
    locale text DEFAULT 'pt'::text NOT NULL,
    cpf text,
    encrypted_password character varying(128) DEFAULT ''::character varying NOT NULL,
    reset_password_token character varying(255),
    reset_password_sent_at timestamp without time zone,
    remember_created_at timestamp without time zone,
    sign_in_count integer DEFAULT 0,
    current_sign_in_at timestamp without time zone,
    last_sign_in_at timestamp without time zone,
    current_sign_in_ip character varying(255),
    last_sign_in_ip character varying(255),
    twitter character varying(255),
    facebook_link character varying(255),
    other_link character varying(255),
    uploaded_image text,
    CONSTRAINT users_bio_length_within CHECK (((length(bio) >= 0) AND (length(bio) <= 140))),
    CONSTRAINT users_provider_not_blank CHECK ((length(btrim(provider)) > 0)),
    CONSTRAINT users_uid_not_blank CHECK ((length(btrim(uid)) > 0))
);


--
-- Name: backers_by_state; Type: VIEW; Schema: public; Owner: -
--

CREATE OR REPLACE VIEW backers_by_state AS 
 SELECT to_char(p.expires_at, 'yyyy'::text) AS year, NULLIF(u.address_state, ''::text) AS state, sum(b.value) AS total_backed, count(DISTINCT b.user_id) AS total_backers
   FROM backers b
   JOIN projects p ON b.project_id = p.id
   JOIN users u ON u.id = b.user_id
  WHERE b.confirmed
  GROUP BY to_char(p.expires_at, 'yyyy'::text), NULLIF(u.address_state, ''::text)
  ORDER BY to_char(p.expires_at, 'yyyy'::text), NULLIF(u.address_state, ''::text);

--
-- Name: backers_by_year; Type: VIEW; Schema: public; Owner: -
--

CREATE OR REPLACE VIEW backers_by_year AS 
 SELECT to_char(p.expires_at, 'yyyy'::text) AS year, sum(backers.value) AS total_backed, count(DISTINCT backers.user_id) AS total_backers, count(DISTINCT 
        CASE
            WHEN backers.reward_id IS NULL THEN backers.user_id
            ELSE NULL::integer
        END) AS total_backers_without_reward, count(DISTINCT 
        CASE
            WHEN backers.reward_id IS NULL THEN backers.user_id
            ELSE NULL::integer
        END)::numeric / count(DISTINCT backers.user_id)::numeric AS backers_without_reward_ratio, max(backers.value) AS maximum_back
   FROM backers
   JOIN projects p ON backers.project_id = p.id
  WHERE backers.confirmed
  GROUP BY to_char(p.expires_at, 'yyyy'::text);

--
-- Name: backers_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE backers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: backers_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE backers_id_seq OWNED BY backers.id;


--
-- Name: categories_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE categories_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: categories_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE categories_id_seq OWNED BY categories.id;


--
-- Name: comments; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE comments (
    id integer NOT NULL,
    title text,
    comment text NOT NULL,
    comment_html text,
    commentable_id integer NOT NULL,
    commentable_type character varying(255) NOT NULL,
    user_id integer NOT NULL,
    project_update boolean DEFAULT false,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    CONSTRAINT comments_comment_not_blank CHECK ((length(btrim(comment)) > 0))
);


--
-- Name: comments_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE comments_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: comments_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE comments_id_seq OWNED BY comments.id;


--
-- Name: configurations; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE configurations (
    id integer NOT NULL,
    name text NOT NULL,
    value text,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    CONSTRAINT configurations_name_not_blank CHECK ((length(btrim(name)) > 0))
);


--
-- Name: configurations_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE configurations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: configurations_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE configurations_id_seq OWNED BY configurations.id;


--
-- Name: curated_pages; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE curated_pages (
    id integer NOT NULL,
    name character varying(255),
    description text,
    analytics_id character varying(255),
    logo character varying(255),
    video_url character varying(255),
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    permalink character varying(255),
    visible boolean DEFAULT false,
    site_url character varying(255)
);


--
-- Name: curated_pages_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE curated_pages_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: curated_pages_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE curated_pages_id_seq OWNED BY curated_pages.id;


--
-- Name: notification_types; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE notification_types (
    id integer NOT NULL,
    name text NOT NULL,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


--
-- Name: notification_types_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE notification_types_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: notification_types_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE notification_types_id_seq OWNED BY notification_types.id;


--
-- Name: notifications; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE notifications (
    id integer NOT NULL,
    user_id integer NOT NULL,
    project_id integer,
    dismissed boolean DEFAULT false NOT NULL,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    notification_type_id integer NOT NULL,
    backer_id integer,
    update_id integer
);


--
-- Name: notifications_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE notifications_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: notifications_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE notifications_id_seq OWNED BY notifications.id;


--
-- Name: oauth_providers; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE oauth_providers (
    id integer NOT NULL,
    name text NOT NULL,
    key text NOT NULL,
    secret text NOT NULL,
    scope text,
    "order" integer,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    strategy text,
    path text,
    CONSTRAINT oauth_providers_key_not_blank CHECK ((length(btrim(key)) > 0)),
    CONSTRAINT oauth_providers_name_not_blank CHECK ((length(btrim(name)) > 0)),
    CONSTRAINT oauth_providers_secret_not_blank CHECK ((length(btrim(secret)) > 0))
);


--
-- Name: oauth_providers_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE oauth_providers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: oauth_providers_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE oauth_providers_id_seq OWNED BY oauth_providers.id;


--
-- Name: payment_logs; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE payment_logs (
    id integer NOT NULL,
    backer_id integer,
    status integer,
    amount double precision,
    payment_status integer,
    moip_id integer,
    payment_method integer,
    payment_type character varying(255),
    consumer_email character varying(255),
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


--
-- Name: payment_logs_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE payment_logs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: payment_logs_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE payment_logs_id_seq OWNED BY payment_logs.id;


--
-- Name: payment_notifications; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE payment_notifications (
    id integer NOT NULL,
    backer_id integer NOT NULL,
    extra_data text,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


--
-- Name: payment_notifications_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE payment_notifications_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: payment_notifications_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE payment_notifications_id_seq OWNED BY payment_notifications.id;


--
-- Name: paypal_payments; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE paypal_payments (
    data text,
    hora text,
    fusohorario text,
    nome text,
    tipo text,
    status text,
    moeda text,
    valorbruto text,
    tarifa text,
    liquido text,
    doe_mail text,
    parae_mail text,
    iddatransacao text,
    statusdoequivalente text,
    statusdoendereco text,
    titulodoitem text,
    iddoitem text,
    valordoenvioemanuseio text,
    valordoseguro text,
    impostosobrevendas text,
    opcao1nome text,
    opcao1valor text,
    opcao2nome text,
    opcao2valor text,
    sitedoleilao text,
    iddocomprador text,
    urldoitem text,
    datadetermino text,
    iddaescritura text,
    iddafatura text,
    "idtxn_dereferência" text,
    numerodafatura text,
    numeropersonalizado text,
    iddorecibo text,
    saldo text,
    enderecolinha1 text,
    enderecolinha2_distrito_bairro text,
    cidade text,
    "estado_regiao_território_prefeitura_republica" text,
    cep text,
    pais text,
    numerodotelefoneparacontato text,
    extra text
);


--
-- Name: paypal_pending; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW paypal_pending AS
    SELECT string_agg((b.id)::text, ','::text) AS string_agg FROM (backers b JOIN paypal_payments p ON ((lower(p.doe_mail) = b.payer_email))) WHERE ((((b.payment_method = 'PayPal'::text) AND (p.status = 'Concluído'::text)) AND (NOT b.confirmed)) AND (to_number(p.valorbruto, '9,99'::text) = b.value));


--
-- Name: project_totals; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW project_totals AS
    SELECT backers.project_id, sum(backers.value) AS pledged, count(*) AS total_backers FROM backers WHERE (backers.confirmed = true) GROUP BY backers.project_id;


--
-- Name: projects_by_category; Type: VIEW; Schema: public; Owner: -
--

CREATE OR REPLACE VIEW projects_by_category AS 
 SELECT to_char(p.expires_at, 'yyyy'::text) AS year, c.name AS category, count(*) AS total_projects, count(NULLIF(p.successful, false)) AS successful_projects
   FROM projects p
   JOIN categories c ON c.id = p.category_id
  WHERE p.finished
  GROUP BY to_char(p.expires_at, 'yyyy'::text), c.name
  ORDER BY to_char(p.expires_at, 'yyyy'::text), c.name;

--
-- Name: projects_by_state; Type: VIEW; Schema: public; Owner: -
--

CREATE OR REPLACE VIEW projects_by_state AS 
 SELECT to_char(p.expires_at, 'yyyy'::text) AS year, NULLIF(btrim(u.address_state), ''::text) AS uf, count(*) AS total_projects, count(NULLIF(p.successful, false)) AS successful_projects
   FROM projects p
   JOIN users u ON u.id = p.user_id
  WHERE p.finished
  GROUP BY to_char(p.expires_at, 'yyyy'::text), NULLIF(btrim(u.address_state), ''::text)
  ORDER BY to_char(p.expires_at, 'yyyy'::text), NULLIF(btrim(u.address_state), ''::text);

--
-- Name: total_backed_ranges; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE total_backed_ranges (
    name text NOT NULL,
    lower numeric,
    upper numeric
);


--
-- Name: projects_by_total_backed_ranges; Type: VIEW; Schema: public; Owner: -
--

CREATE OR REPLACE VIEW projects_by_total_backed_ranges AS 
 SELECT tbr.lower, tbr.upper, count(*) AS count, count(*)::numeric / (( SELECT count(*) AS count
           FROM backers_by_project))::numeric AS ratio
   FROM backers_by_project bp
   JOIN total_backed_ranges tbr ON bp.total_backed >= tbr.lower AND bp.total_backed <= tbr.upper
  GROUP BY tbr.lower, tbr.upper
  ORDER BY tbr.lower;

--
-- Name: projects_by_year; Type: VIEW; Schema: public; Owner: -
--

CREATE OR REPLACE VIEW projects_by_year AS 
 SELECT to_char(p.expires_at, 'yyyy'::text) AS year, count(*) AS total_projects, count(NULLIF(p.successful, false)) AS successful_projects, sum(
        CASE
            WHEN p.successful THEN b.total_backed
            ELSE NULL::numeric
        END) AS successful_total_backed, max(b.total_backed) AS max_total_backed, max(b.max_backed) AS max_backed, max(b.total_backers) AS max_total_backers
   FROM projects p
   LEFT JOIN backers_by_project b ON b.project_id = p.id
  WHERE p.finished
  GROUP BY to_char(p.expires_at, 'yyyy'::text)
  ORDER BY to_char(p.expires_at, 'yyyy'::text);


--
-- Name: projects_curated_pages; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE projects_curated_pages (
    id integer NOT NULL,
    project_id integer,
    curated_page_id integer,
    description text,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    description_html text
);


--
-- Name: projects_curated_pages_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE projects_curated_pages_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: projects_curated_pages_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE projects_curated_pages_id_seq OWNED BY projects_curated_pages.id;


--
-- Name: projects_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE projects_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: projects_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE projects_id_seq OWNED BY projects.id;


--
-- Name: projects_managers; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE projects_managers (
    user_id integer,
    project_id integer
);


--
-- Name: recurring_backers_by_year; Type: VIEW; Schema: public; Owner: -
--

CREATE OR REPLACE VIEW recurring_backers_by_year AS 
 SELECT bby.year, trb.total_recurring_backed, bby.total_backed, trb.total_recurring_backed / bby.total_backed AS recurring_backed_ratio, trb.total_recurring_backers, bby.total_backers, trb.total_recurring_backers / bby.total_backers::numeric AS recurring_backers_ratio
   FROM ( SELECT rb.year, sum(rb.total_recurring_backed) AS total_recurring_backed, sum(rb.total_recurring_backers) AS total_recurring_backers
           FROM ( SELECT to_char(backers.created_at, 'yyyy'::text) AS year, sum(backers.value) AS total_recurring_backed, count(DISTINCT backers.user_id) AS total_recurring_backers
                   FROM backers
                  WHERE backers.confirmed
                  GROUP BY to_char(backers.created_at, 'yyyy'::text), backers.user_id
                 HAVING count(*) > 1) rb
          GROUP BY rb.year) trb
   JOIN backers_by_year bby USING (year);

--
-- Name: reward_ranges; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE reward_ranges (
    name text NOT NULL,
    lower numeric,
    upper numeric
);


--
-- Name: rewards; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE rewards (
    id integer NOT NULL,
    project_id integer NOT NULL,
    minimum_value numeric NOT NULL,
    maximum_backers integer,
    description text NOT NULL,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    CONSTRAINT rewards_maximum_backers_positive CHECK ((maximum_backers >= 0)),
    CONSTRAINT rewards_minimum_value_positive CHECK ((minimum_value >= (0)::numeric))
);


--
-- Name: rewards_by_range; Type: VIEW; Schema: public; Owner: -
--

CREATE OR REPLACE VIEW rewards_by_range AS 
 SELECT rr.name AS range, count(*) AS count, count(*)::numeric / (( SELECT count(*) AS count
           FROM backers
          WHERE backers.confirmed AND backers.reward_id IS NOT NULL))::numeric AS ratio
   FROM reward_ranges rr
   JOIN rewards r ON r.minimum_value >= rr.lower AND r.minimum_value <= rr.upper
   JOIN backers b ON b.reward_id = r.id
  WHERE b.confirmed
  GROUP BY rr.name, rr.lower
  ORDER BY rr.lower;


--
-- Name: rewards_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE rewards_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: rewards_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE rewards_id_seq OWNED BY rewards.id;

--
-- Name: states; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE states (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    acronym character varying(255) NOT NULL,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    CONSTRAINT states_acronym_not_blank CHECK ((length(btrim((acronym)::text)) > 0)),
    CONSTRAINT states_name_not_blank CHECK ((length(btrim((name)::text)) > 0))
);


--
-- Name: states_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE states_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: states_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE states_id_seq OWNED BY states.id;


--
-- Name: static_contents; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE static_contents (
    id integer NOT NULL,
    title character varying(255),
    body text,
    body_html text,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


--
-- Name: static_contents_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE static_contents_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: static_contents_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE static_contents_id_seq OWNED BY static_contents.id;


--
-- Name: statistics; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW statistics AS
    SELECT (SELECT count(*) AS count FROM users WHERE (users.primary_user_id IS NULL)) AS total_users, backers_totals.total_backs, backers_totals.total_backers, backers_totals.total_backed, projects_totals.total_projects, projects_totals.total_projects_success, projects_totals.total_projects_online FROM (SELECT count(*) AS total_backs, count(DISTINCT backers.user_id) AS total_backers, sum(backers.value) AS total_backed FROM backers WHERE backers.confirmed) backers_totals, (SELECT count(*) AS total_projects, count(CASE WHEN projects.successful THEN 1 ELSE NULL::integer END) AS total_projects_success, count(CASE WHEN ((projects.finished = false) AND (projects.expires_at >= now())) THEN 1 ELSE NULL::integer END) AS total_projects_online FROM projects WHERE projects.visible) projects_totals;


--
-- Name: unsubscribes; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE unsubscribes (
    id integer NOT NULL,
    user_id integer NOT NULL,
    notification_type_id integer NOT NULL,
    project_id integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


--
-- Name: unsubscribes_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE unsubscribes_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: unsubscribes_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE unsubscribes_id_seq OWNED BY unsubscribes.id;


--
-- Name: updates; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE updates (
    id integer NOT NULL,
    user_id integer NOT NULL,
    project_id integer NOT NULL,
    title text,
    comment text NOT NULL,
    comment_html text NOT NULL,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


--
-- Name: updates_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE updates_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: updates_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE updates_id_seq OWNED BY updates.id;


--
-- Name: user_totals; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW user_totals AS
    SELECT b.user_id AS id, b.user_id, sum(b.value) AS sum, count(*) AS count, sum(CASE WHEN (((NOT p.finished) OR p.successful) AND (NOT b.credits)) THEN (0)::numeric WHEN ((p.finished AND (NOT p.successful)) AND ((b.requested_refund AND (NOT b.credits)) OR (b.credits AND (NOT b.requested_refund)))) THEN (0)::numeric WHEN (((p.finished AND (NOT p.successful)) AND (NOT b.credits)) AND (NOT b.requested_refund)) THEN b.value ELSE (b.value * ((-1))::numeric) END) AS credits FROM (backers b JOIN projects p ON ((b.project_id = p.id))) WHERE (b.confirmed = true) GROUP BY b.user_id;


--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE users_id_seq OWNED BY users.id;


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY active_admin_comments ALTER COLUMN id SET DEFAULT nextval('admin_notes_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY backers ALTER COLUMN id SET DEFAULT nextval('backers_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY categories ALTER COLUMN id SET DEFAULT nextval('categories_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY comments ALTER COLUMN id SET DEFAULT nextval('comments_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY configurations ALTER COLUMN id SET DEFAULT nextval('configurations_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY curated_pages ALTER COLUMN id SET DEFAULT nextval('curated_pages_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY institutional_videos ALTER COLUMN id SET DEFAULT nextval('advert_videos_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY notification_types ALTER COLUMN id SET DEFAULT nextval('notification_types_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY notifications ALTER COLUMN id SET DEFAULT nextval('notifications_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY oauth_providers ALTER COLUMN id SET DEFAULT nextval('oauth_providers_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY payment_logs ALTER COLUMN id SET DEFAULT nextval('payment_logs_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY payment_notifications ALTER COLUMN id SET DEFAULT nextval('payment_notifications_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY projects ALTER COLUMN id SET DEFAULT nextval('projects_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY projects_curated_pages ALTER COLUMN id SET DEFAULT nextval('projects_curated_pages_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY rewards ALTER COLUMN id SET DEFAULT nextval('rewards_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY states ALTER COLUMN id SET DEFAULT nextval('states_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY static_contents ALTER COLUMN id SET DEFAULT nextval('static_contents_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY unsubscribes ALTER COLUMN id SET DEFAULT nextval('unsubscribes_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY updates ALTER COLUMN id SET DEFAULT nextval('updates_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY users ALTER COLUMN id SET DEFAULT nextval('users_id_seq'::regclass);


--
-- Name: admin_notes_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY active_admin_comments
    ADD CONSTRAINT admin_notes_pkey PRIMARY KEY (id);


--
-- Name: advert_videos_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY institutional_videos
    ADD CONSTRAINT advert_videos_pkey PRIMARY KEY (id);


--
-- Name: backers_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY backers
    ADD CONSTRAINT backers_pkey PRIMARY KEY (id);


--
-- Name: categories_name_unique; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY categories
    ADD CONSTRAINT categories_name_unique UNIQUE (name);


--
-- Name: categories_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY categories
    ADD CONSTRAINT categories_pkey PRIMARY KEY (id);


--
-- Name: comments_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY comments
    ADD CONSTRAINT comments_pkey PRIMARY KEY (id);


--
-- Name: configurations_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY configurations
    ADD CONSTRAINT configurations_pkey PRIMARY KEY (id);


--
-- Name: curated_pages_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY curated_pages
    ADD CONSTRAINT curated_pages_pkey PRIMARY KEY (id);


--
-- Name: notification_types_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY notification_types
    ADD CONSTRAINT notification_types_pkey PRIMARY KEY (id);


--
-- Name: notifications_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY notifications
    ADD CONSTRAINT notifications_pkey PRIMARY KEY (id);


--
-- Name: oauth_providers_name_unique; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY oauth_providers
    ADD CONSTRAINT oauth_providers_name_unique UNIQUE (name);


--
-- Name: oauth_providers_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY oauth_providers
    ADD CONSTRAINT oauth_providers_pkey PRIMARY KEY (id);


--
-- Name: payment_logs_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY payment_logs
    ADD CONSTRAINT payment_logs_pkey PRIMARY KEY (id);


--
-- Name: payment_notifications_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY payment_notifications
    ADD CONSTRAINT payment_notifications_pkey PRIMARY KEY (id);


--
-- Name: projects_curated_pages_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY projects_curated_pages
    ADD CONSTRAINT projects_curated_pages_pkey PRIMARY KEY (id);


--
-- Name: projects_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY projects
    ADD CONSTRAINT projects_pkey PRIMARY KEY (id);


--
-- Name: reward_ranges_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY reward_ranges
    ADD CONSTRAINT reward_ranges_pkey PRIMARY KEY (name);


--
-- Name: rewards_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY rewards
    ADD CONSTRAINT rewards_pkey PRIMARY KEY (id);


--
-- Name: states_acronym_unique; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY states
    ADD CONSTRAINT states_acronym_unique UNIQUE (acronym);


--
-- Name: states_name_unique; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY states
    ADD CONSTRAINT states_name_unique UNIQUE (name);


--
-- Name: states_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY states
    ADD CONSTRAINT states_pkey PRIMARY KEY (id);


--
-- Name: static_contents_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY static_contents
    ADD CONSTRAINT static_contents_pkey PRIMARY KEY (id);


--
-- Name: total_backed_ranges_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY total_backed_ranges
    ADD CONSTRAINT total_backed_ranges_pkey PRIMARY KEY (name);


--
-- Name: unsubscribes_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY unsubscribes
    ADD CONSTRAINT unsubscribes_pkey PRIMARY KEY (id);


--
-- Name: updates_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY updates
    ADD CONSTRAINT updates_pkey PRIMARY KEY (id);


--
-- Name: users_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: users_provider_uid_unique; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_provider_uid_unique UNIQUE (provider, uid);


--
-- Name: index_active_admin_comments_on_author_type_and_author_id; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_active_admin_comments_on_author_type_and_author_id ON active_admin_comments USING btree (author_type, author_id);


--
-- Name: index_active_admin_comments_on_namespace; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_active_admin_comments_on_namespace ON active_admin_comments USING btree (namespace);


--
-- Name: index_backers_on_confirmed; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_backers_on_confirmed ON backers USING btree (confirmed);


--
-- Name: index_backers_on_key; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_backers_on_key ON backers USING btree (key);


--
-- Name: index_backers_on_project_id; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_backers_on_project_id ON backers USING btree (project_id);


--
-- Name: index_backers_on_reward_id; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_backers_on_reward_id ON backers USING btree (reward_id);


--
-- Name: index_backers_on_user_id; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_backers_on_user_id ON backers USING btree (user_id);


--
-- Name: index_categories_on_name; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_categories_on_name ON categories USING btree (name);


--
-- Name: index_comments_on_commentable_id; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_comments_on_commentable_id ON comments USING btree (commentable_id);


--
-- Name: index_comments_on_commentable_type; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_comments_on_commentable_type ON comments USING btree (commentable_type);


--
-- Name: index_comments_on_user_id; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_comments_on_user_id ON comments USING btree (user_id);


--
-- Name: index_confirmed_backers_on_project_id; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_confirmed_backers_on_project_id ON backers USING btree (project_id) WHERE confirmed;


--
-- Name: index_curated_pages_on_permalink; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_curated_pages_on_permalink ON curated_pages USING btree (permalink);


--
-- Name: index_notification_types_on_name; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE UNIQUE INDEX index_notification_types_on_name ON notification_types USING btree (name);


--
-- Name: index_notifications_on_update_id; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_notifications_on_update_id ON notifications USING btree (update_id);


--
-- Name: index_projects_on_category_id; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_projects_on_category_id ON projects USING btree (category_id);


--
-- Name: index_projects_on_name; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_projects_on_name ON projects USING btree (name);


--
-- Name: index_projects_on_permalink; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE UNIQUE INDEX index_projects_on_permalink ON projects USING btree (permalink);


--
-- Name: index_projects_on_user_id; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_projects_on_user_id ON projects USING btree (user_id);


--
-- Name: index_rewards_on_project_id; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_rewards_on_project_id ON rewards USING btree (project_id);


--
-- Name: index_unsubscribes_on_notification_type_id; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_unsubscribes_on_notification_type_id ON unsubscribes USING btree (notification_type_id);


--
-- Name: index_unsubscribes_on_project_id; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_unsubscribes_on_project_id ON unsubscribes USING btree (project_id);


--
-- Name: index_unsubscribes_on_user_id; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_unsubscribes_on_user_id ON unsubscribes USING btree (user_id);


--
-- Name: index_updates_on_project_id; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_updates_on_project_id ON updates USING btree (project_id);


--
-- Name: index_users_on_email; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_users_on_email ON users USING btree (email);


--
-- Name: index_users_on_name; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_users_on_name ON users USING btree (name);


--
-- Name: index_users_on_primary_user_id_and_provider; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_users_on_primary_user_id_and_provider ON users USING btree (primary_user_id, provider);


--
-- Name: index_users_on_reset_password_token; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE UNIQUE INDEX index_users_on_reset_password_token ON users USING btree (reset_password_token);


--
-- Name: index_users_on_uid; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX index_users_on_uid ON users USING btree (uid);


--
-- Name: users_email; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE UNIQUE INDEX users_email ON users USING btree (email) WHERE (provider = 'devise'::text);


--
-- Name: backers_project_id_reference; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY backers
    ADD CONSTRAINT backers_project_id_reference FOREIGN KEY (project_id) REFERENCES projects(id);


--
-- Name: backers_reward_id_reference; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY backers
    ADD CONSTRAINT backers_reward_id_reference FOREIGN KEY (reward_id) REFERENCES rewards(id);


--
-- Name: backers_user_id_reference; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY backers
    ADD CONSTRAINT backers_user_id_reference FOREIGN KEY (user_id) REFERENCES users(id);


--
-- Name: comments_user_id_reference; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY comments
    ADD CONSTRAINT comments_user_id_reference FOREIGN KEY (user_id) REFERENCES users(id);


--
-- Name: notifications_backer_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY notifications
    ADD CONSTRAINT notifications_backer_id_fk FOREIGN KEY (backer_id) REFERENCES backers(id);


--
-- Name: notifications_notification_type_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY notifications
    ADD CONSTRAINT notifications_notification_type_id_fk FOREIGN KEY (notification_type_id) REFERENCES notification_types(id);


--
-- Name: notifications_project_id_reference; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY notifications
    ADD CONSTRAINT notifications_project_id_reference FOREIGN KEY (project_id) REFERENCES projects(id);


--
-- Name: notifications_update_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY notifications
    ADD CONSTRAINT notifications_update_id_fk FOREIGN KEY (update_id) REFERENCES updates(id);


--
-- Name: notifications_user_id_reference; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY notifications
    ADD CONSTRAINT notifications_user_id_reference FOREIGN KEY (user_id) REFERENCES users(id);


--
-- Name: payment_notifications_backer_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY payment_notifications
    ADD CONSTRAINT payment_notifications_backer_id_fk FOREIGN KEY (backer_id) REFERENCES backers(id);


--
-- Name: projects_category_id_reference; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY projects
    ADD CONSTRAINT projects_category_id_reference FOREIGN KEY (category_id) REFERENCES categories(id);


--
-- Name: projects_user_id_reference; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY projects
    ADD CONSTRAINT projects_user_id_reference FOREIGN KEY (user_id) REFERENCES users(id);


--
-- Name: rewards_project_id_reference; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY rewards
    ADD CONSTRAINT rewards_project_id_reference FOREIGN KEY (project_id) REFERENCES projects(id);


--
-- Name: unsubscribes_notification_type_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY unsubscribes
    ADD CONSTRAINT unsubscribes_notification_type_id_fk FOREIGN KEY (notification_type_id) REFERENCES notification_types(id);


--
-- Name: unsubscribes_project_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY unsubscribes
    ADD CONSTRAINT unsubscribes_project_id_fk FOREIGN KEY (project_id) REFERENCES projects(id);


--
-- Name: unsubscribes_user_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY unsubscribes
    ADD CONSTRAINT unsubscribes_user_id_fk FOREIGN KEY (user_id) REFERENCES users(id);


--
-- Name: updates_project_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY updates
    ADD CONSTRAINT updates_project_id_fk FOREIGN KEY (project_id) REFERENCES projects(id);


--
-- Name: updates_user_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY updates
    ADD CONSTRAINT updates_user_id_fk FOREIGN KEY (user_id) REFERENCES users(id);


--
-- Name: users_primary_user_id_reference; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_primary_user_id_reference FOREIGN KEY (primary_user_id) REFERENCES users(id);

--
-- PostgreSQL database dump complete
--
[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20121226120921"]]
  [1m[36m (12.5ms)[0m  [1mCOMMIT[0m
Migrating to UserTotalsBackToStateMachine (20121227012003)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (3.1ms)[0m  [1m      CREATE OR REPLACE VIEW user_totals AS
      SELECT
        b.user_id as id,
        b.user_id,
        sum(b.value) AS sum,
        count(*) AS count,
        sum(CASE
          -- I've backed a successful (or unfinished) project with money
          WHEN (p.state <> 'failed') AND NOT b.credits THEN 0
          -- I've backed a failed project with money and asked for refund xor I've backed a failed project with credits
          WHEN p.state = 'failed' AND ((b.requested_refund AND NOT b.credits) OR (b.credits AND NOT b.requested_refund)) THEN 0
          -- I've backed a failed project with money and did not ask for refund
          WHEN p.state = 'failed' AND NOT b.credits AND NOT b.requested_refund THEN b.value
          -- I've backed a successful project with credits
          ELSE b.value * (-1)::numeric
        END) AS credits
      FROM
        backers b
        JOIN projects p ON (b.project_id = p.id)
      WHERE b.confirmed = true
      GROUP BY b.user_id;
[0m
  [1m[35mSQL (1.9ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20121227012003"]]
  [1m[36m (2.0ms)[0m  [1mCOMMIT[0m
Migrating to StatisticsBackToStateMachine (20121227012324)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (1.8ms)[0m  [1m      CREATE OR REPLACE VIEW statistics AS
      SELECT
        (SELECT count(*) FROM users WHERE primary_user_id IS NULL) AS total_users,
        total_backs,
        total_backers,
        total_backed,
        total_projects,
        total_projects_success,
        total_projects_online
      FROM
        (
          SELECT count(*) AS total_backs, 
            count(DISTINCT user_id) AS total_backers, 
            sum(value) AS total_backed 
          FROM backers WHERE confirmed
        ) AS backers_totals,

        (
          SELECT 
            count(*) AS total_projects, 
            count(CASE WHEN state = 'successful' THEN 1 ELSE NULL END) AS total_projects_success, 
            count(CASE WHEN state = 'online' THEN 1 ELSE NULL END) AS total_projects_online 
          FROM projects WHERE state NOT IN ('draft', 'rejected')
        ) AS projects_totals
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20121227012324"]]
  [1m[36m (1.4ms)[0m  [1mCOMMIT[0m
Migrating to AddOnlineDateToProjects (20121230111351)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.2ms)[0m  [1mALTER TABLE "projects" ADD COLUMN "online_date" timestamp[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20121230111351"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
Migrating to UpdateProjectsToStateMachineAgain (20130102180139)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (2.9ms)[0m  [1m
      UPDATE projects 
        SET finished = true
        WHERE 
          finished = false AND visible = true AND expires_at <= current_timestamp - '5 days'::interval;
    [0m
  [1m[35m (0.5ms)[0m  
      UPDATE projects p
        SET state = (
              CASE
                WHEN p.finished = true AND p.successful = true THEN 'successful'
                WHEN p.finished = true AND p.successful = false THEN 'failed'
                WHEN p.finished = false AND p.visible = true THEN 'online'
                WHEN coalesce(p.visible, false) = false  THEN 'draft'
              END
            );
    
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130102180139"]]
  [1m[35m (0.6ms)[0m  COMMIT
Migrating to AddMoipLoginToUsers (20130104005632)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "users" ADD COLUMN "moip_login" character varying(255)
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130104005632"]]
  [1m[35m (2.7ms)[0m  COMMIT
Migrating to AddHowKnowAndMoreLinksToProjects (20130104104501)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "projects" ADD COLUMN "how_know" text
  [1m[36m (0.6ms)[0m  [1mALTER TABLE "projects" ADD COLUMN "more_links" text[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130104104501"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
Migrating to AddFirstBackersToProjects (20130105123546)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "projects" ADD COLUMN "first_backers" text[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130105123546"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
Migrating to AddUploadedImageToProjects (20130110191750)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "projects" ADD COLUMN "uploaded_image" character varying(255)[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130110191750"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
Migrating to AlterProjectsDropVideoUrlConstraint (20130117205659)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.8ms)[0m  [1m
    ALTER TABLE projects ALTER video_url DROP NOT NULL;
    ALTER TABLE projects DROP CONSTRAINT projects_video_url_not_blank;
    [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130117205659"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
Migrating to FixStatisticsView (20130118193907)
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36m (3.8ms)[0m  [1m CREATE OR REPLACE VIEW statistics AS
   SELECT ( SELECT count(*) AS count
           FROM users
          WHERE users.primary_user_id IS NULL) AS total_users, backers_totals.total_backs, backers_totals.total_backers, backers_totals.total_backed, projects_totals.total_projects, projects_totals.total_projects_success, projects_totals.total_projects_online
   FROM ( SELECT count(*) AS total_backs, count(DISTINCT backers.user_id) AS total_backers, sum(backers.value) AS total_backed
           FROM backers
          WHERE backers.confirmed) backers_totals, ( SELECT count(*) AS total_projects, count(
                CASE
                    WHEN projects.state::text = 'successful'::text THEN 1
                    ELSE NULL::integer
                END) AS total_projects_success, count(
                CASE
                    WHEN projects.state IN ('online', 'successful') AND projects.expires_at >= current_timestamp THEN 1
                    ELSE NULL::integer
                END) AS total_projects_online
           FROM projects
          WHERE projects.state::text <> ALL (ARRAY['draft'::character varying, 'rejected'::character varying]::text[])) projects_totals;
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130118193907"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
Migrating to CreateBackerReports (20130121162447)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (2.4ms)[0m  [1mCREATE VIEW "backer_reports" AS 
    SELECT 
      b.project_id,
      u.name, 
      b.value,
      r.minimum_value,
      r.description,
      b.payment_method,
      b.payment_choice,
      b.payment_service_fee,
      b.key,
      b.created_at::date,
      b.confirmed_at::date,
      u.email,
      b.payer_email,
      b.payer_name,
      u.cpf,
      u.address_street,
      u.address_complement,
      u.address_number,
      u.address_neighbourhood,
      u.address_city,
      u.address_state,
      u.address_zip_code,
      b.requested_refund,
      b.refunded
    FROM 
      backers b
      JOIN users u ON u.id = b.user_id
      LEFT JOIN rewards r ON r.id = b.reward_id
    WHERE
      b.confirmed;
    [0m
  [1m[35mSQL (1.0ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130121162447"]]
  [1m[36m (2.2ms)[0m  [1mCOMMIT[0m
Migrating to FixProjectsStates (20130121204224)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.8ms)[0m  [1m
    UPDATE projects SET state = 'waiting_funds' WHERE state IN ('successful', 'online') AND current_timestamp BETWEEN expires_at and expires_at + '4 day'::interval;
    UPDATE projects SET state = 'online' WHERE state = 'successful' AND current_timestamp < expires_at;
    [0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130121204224"]]
  [1m[36m (2.3ms)[0m  [1mCOMMIT[0m
Migrating to FixStatistcsAgain (20130121212325)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (1.5ms)[0m  [1m CREATE OR REPLACE VIEW statistics AS
   SELECT ( SELECT count(*) AS count
           FROM users
          WHERE users.primary_user_id IS NULL) AS total_users, backers_totals.total_backs, backers_totals.total_backers, backers_totals.total_backed, projects_totals.total_projects, projects_totals.total_projects_success, projects_totals.total_projects_online
   FROM ( SELECT count(*) AS total_backs, count(DISTINCT backers.user_id) AS total_backers, sum(backers.value) AS total_backed
           FROM backers
          WHERE backers.confirmed) backers_totals, ( SELECT count(*) AS total_projects, count(
                CASE
                    WHEN projects.state::text = 'successful'::text THEN 1
                    ELSE NULL::integer
                END) AS total_projects_success, count(
                CASE
                    WHEN projects.state = 'online' THEN 1
                    ELSE NULL::integer
                END) AS total_projects_online
           FROM projects
          WHERE projects.state::text <> ALL (ARRAY['draft'::character varying, 'rejected'::character varying]::text[])) projects_totals;
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130121212325"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
Migrating to AddCpfToBackerReport (20130131121553)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (2.7ms)[0m  [1mDROP VIEW "backer_reports"[0m
  [1m[35m (5.1ms)[0m  CREATE VIEW "backer_reports" AS 
    SELECT 
      b.project_id,
      u.name, 
      b.value,
      r.minimum_value,
      r.description,
      b.payment_method,
      b.payment_choice,
      b.payment_service_fee,
      b.key,
      b.created_at::date,
      b.confirmed_at::date,
      u.email,
      b.payer_email,
      b.payer_name,
      coalesce(b.payer_document, u.cpf) as cpf,
      u.address_street,
      u.address_complement,
      u.address_number,
      u.address_neighbourhood,
      u.address_city,
      u.address_state,
      u.address_zip_code,
      b.requested_refund,
      b.refunded
    FROM 
      backers b
      JOIN users u ON u.id = b.user_id
      LEFT JOIN rewards r ON r.id = b.reward_id
    WHERE
      b.confirmed;
    
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130131121553"]]
  [1m[35m (2.4ms)[0m  COMMIT
Migrating to RemoveCuratedPages (20130201200604)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (1.0ms)[0m  DROP TABLE "curated_pages"
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130201200604"]]
  [1m[35m (2.5ms)[0m  COMMIT
Migrating to RemoveProjectsManagers (20130201202648)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.5ms)[0m  DROP TABLE "projects_managers"
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130201202648"]]
  [1m[35m (0.9ms)[0m  COMMIT
Migrating to RemoveActiveAdminComments (20130201202829)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (1.5ms)[0m  DROP TABLE "active_admin_comments"
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130201202829"]]
  [1m[35m (1.1ms)[0m  COMMIT
Migrating to RemoveInstitutionalVideos (20130201205659)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.9ms)[0m  DROP TABLE "institutional_videos"
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130201205659"]]
  [1m[35m (1.2ms)[0m  COMMIT
Migrating to CreateBackerReportsForProjectOwner (20130204192704)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (2.9ms)[0m  CREATE VIEW "backer_reports_for_project_owners" AS 
    SELECT
      b.project_id,
      r.id as reward_id,
      r.description as reward_description,
      b.confirmed_at::date,
      b.value as back_value,
      (b.value* (SELECT value::numeric FROM configurations WHERE name = 'catarse_fee') ) as service_fee,
      u.email as user_email,
      b.payer_email as payer_email,
      b.payment_method,
      coalesce(b.address_street, u.address_street) as street,
      coalesce(b.address_complement, u.address_complement) as complement,
      coalesce(b.address_number, u.address_number) as address_number,
      coalesce(b.address_neighbourhood, u.address_neighbourhood) as neighbourhood,
      coalesce(b.address_city, u.address_city) as city,
      coalesce(b.address_state, u.address_state) as state,
      coalesce(b.address_zip_code, u.address_zip_code) as zip_code
    FROM
      backers b
    JOIN users u ON u.id = b.user_id
    LEFT JOIN rewards r ON r.id = b.reward_id
    WHERE
      b.confirmed;
    
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130204192704"]]
  [1m[35m (2.2ms)[0m  COMMIT
Migrating to RemoveCreditsFromUsers (20130205143533)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "users" DROP "credits"
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130205143533"]]
  [1m[35m (2.1ms)[0m  COMMIT
Migrating to FixViewBackerReportsForProjectOwner (20130206121758)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (2.6ms)[0m  
    CREATE OR REPLACE VIEW backer_reports_for_project_owners AS
    SELECT
      b.project_id,
      coalesce(r.id, 0) as reward_id,
      r.description as reward_description,
      b.confirmed_at::date,
      b.value as back_value,
      (b.value* (SELECT value::numeric FROM configurations WHERE name = 'catarse_fee') ) as service_fee,
      u.email as user_email,
      b.payer_email as payer_email,
      b.payment_method,
      coalesce(b.address_street, u.address_street) as street,
      coalesce(b.address_complement, u.address_complement) as complement,
      coalesce(b.address_number, u.address_number) as address_number,
      coalesce(b.address_neighbourhood, u.address_neighbourhood) as neighbourhood,
      coalesce(b.address_city, u.address_city) as city,
      coalesce(b.address_state, u.address_state) as state,
      coalesce(b.address_zip_code, u.address_zip_code) as zip_code
    FROM
      backers b
    JOIN users u ON u.id = b.user_id
    LEFT JOIN rewards r ON r.id = b.reward_id
    WHERE
      b.confirmed;
    
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130206121758"]]
  [1m[35m (2.3ms)[0m  COMMIT
Migrating to AddNameEnToCategories (20130211174609)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "categories" ADD COLUMN "name_en" character varying(255)
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130211174609"]]
  [1m[35m (0.6ms)[0m  COMMIT
Migrating to RenameNameToNamePt (20130212145115)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "categories" RENAME COLUMN "name" TO "name_pt"
  [1m[36m (6.2ms)[0m  [1m
           SELECT distinct i.relname, d.indisunique, d.indkey, pg_get_indexdef(d.indexrelid), t.oid,
                  m.amname, pg_get_expr(d.indpred, t.oid) as conditions, pg_get_expr(d.indexprs, t.oid) as expression,
                  d.indclass
           FROM pg_class t
           INNER JOIN pg_index d ON t.oid = d.indrelid
           INNER JOIN pg_class i ON d.indexrelid = i.oid
           INNER JOIN pg_am m ON i.relam = m.oid
           WHERE i.relkind = 'i'
             AND d.indisprimary = 'f'
             AND t.relname = 'categories'
             AND i.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
          ORDER BY i.relname
[0m
  [1m[35mColumns for index categories_name_unique on categories (1.3ms)[0m                SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16478

  [1m[36mOp classes for index categories_name_unique on categories (0.6ms)[0m  [1m              SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (3126)
[0m
  [1m[35mColumns for index index_categories_on_name on categories (0.8ms)[0m                SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16478

  [1m[36mOp classes for index index_categories_on_name on categories (0.6ms)[0m  [1m              SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (3126)
[0m
  [1m[35m (0.4ms)[0m  ALTER INDEX "index_categories_on_name" RENAME TO "index_categories_on_name_pt"
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130212145115"]]
  [1m[35m (0.7ms)[0m  COMMIT
Migrating to ChangePermalinkToNotNull (20130213184141)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (1.2ms)[0m      UPDATE projects SET permalink = regexp_replace(unaccent(lower(trim(name))), '[^\w]|[ªº]', '-', 'gi') 
    WHERE NULLIF(trim(permalink), '') is NULL AND (SELECT count(*) < 2 FROM projects p2 
      WHERE regexp_replace(unaccent(lower(trim(p2.name))), '[^\w]|[ªº]', '-', 'gi') = regexp_replace(unaccent(lower(trim(projects.name))), '[^\w]|[ªº]', '-', 'gi'));
    UPDATE projects SET permalink = projects.id::text || '-' || regexp_replace(unaccent(lower(trim(name))), '[^\w]|[ªº]', '-', 'gi') WHERE NULLIF(trim(permalink), '') is NULL;

  [1m[36m (0.9ms)[0m  [1mALTER TABLE "projects" ALTER COLUMN "permalink" TYPE text[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "projects" ALTER "permalink" SET NOT NULL
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130213184141"]]
  [1m[35m (0.7ms)[0m  COMMIT
Migrating to CreateUsersOauthProviders (20130218201312)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (1.4ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'users_oauth_providers'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36m (0.8ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'users_oauth_providers'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (7.6ms)[0m  CREATE TABLE "users_oauth_providers" ("id" serial primary key, "oauth_provider_id" integer NOT NULL, "user_id" integer NOT NULL, "uid" text NOT NULL, "created_at" timestamp, "updated_at" timestamp, CONSTRAINT fk_users_oauth_providers_oauth_provider_id FOREIGN KEY ("oauth_provider_id") REFERENCES "oauth_providers" ("id"), CONSTRAINT fk_users_oauth_providers_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id")) 
  [1m[36m (2.9ms)[0m  [1mCREATE INDEX "fk__users_oauth_providers_oauth_provider_id" ON "users_oauth_providers" ("oauth_provider_id")[0m
  [1m[35m (3.8ms)[0m  CREATE INDEX "fk__users_oauth_providers_user_id" ON "users_oauth_providers" ("user_id")
  [1m[36m (2.5ms)[0m  [1mCREATE UNIQUE INDEX "index_users_oauth_providers_on_uid_and_oauth_provider_id" ON "users_oauth_providers" ("uid", "oauth_provider_id")[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130218201312"]]
  [1m[36m (3.1ms)[0m  [1mCOMMIT[0m
Migrating to MigrateUserDataToUsersOathProviders (20130218201751)
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36m (1.8ms)[0m  [1m    INSERT INTO users_oauth_providers (oauth_provider_id, user_id, uid, created_at, updated_at)
    SELECT (SELECT id FROM oauth_providers op WHERE op.path = users.provider), id, uid, now(), now() FROM users 
    WHERE EXISTS (SELECT true FROM oauth_providers op WHERE op.path = users.provider);
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130218201751"]]
  [1m[36m (2.3ms)[0m  [1mCOMMIT[0m
Migrating to RenameUsersOathProviders (20130221171018)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (1.4ms)[0m  [1mDROP TABLE "users_oauth_providers"[0m
  [1m[35m (0.7ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'authorizations'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36m (0.6ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'authorizations'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (6.7ms)[0m  CREATE TABLE "authorizations" ("id" serial primary key, "oauth_provider_id" integer NOT NULL, "user_id" integer NOT NULL, "uid" text NOT NULL, "created_at" timestamp, "updated_at" timestamp, CONSTRAINT fk_authorizations_oauth_provider_id FOREIGN KEY ("oauth_provider_id") REFERENCES "oauth_providers" ("id"), CONSTRAINT fk_authorizations_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id")) 
  [1m[36m (2.7ms)[0m  [1mCREATE INDEX "fk__authorizations_oauth_provider_id" ON "authorizations" ("oauth_provider_id")[0m
  [1m[35m (2.8ms)[0m  CREATE INDEX "fk__authorizations_user_id" ON "authorizations" ("user_id")
  [1m[36m (3.9ms)[0m  [1mCREATE UNIQUE INDEX "index_authorizations_on_uid_and_oauth_provider_id" ON "authorizations" ("uid", "oauth_provider_id")[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130221171018"]]
  [1m[36m (2.6ms)[0m  [1mCOMMIT[0m
Migrating to PopulateAuthorizations (20130221172840)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (1.3ms)[0m  [1m    INSERT INTO authorizations (oauth_provider_id, user_id, uid, created_at, updated_at)
    SELECT (SELECT id FROM oauth_providers op WHERE op.path = users.provider), id, uid, now(), now() FROM users 
    WHERE EXISTS (SELECT true FROM oauth_providers op WHERE op.path = users.provider);
[0m
  [1m[35mSQL (1.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130221172840"]]
  [1m[36m (2.4ms)[0m  [1mCOMMIT[0m
Migrating to RemoveStaticContents (20130221175717)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.6ms)[0m  [1mDROP TABLE "static_contents"[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130221175717"]]
  [1m[36m (2.2ms)[0m  [1mCOMMIT[0m
Migrating to UpdateOauthProviderNameToLower (20130221184144)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1mUPDATE oauth_providers SET name = lower(name);[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130221184144"]]
  [1m[36m (2.1ms)[0m  [1mCOMMIT[0m
Migrating to RecreateStatisticsWithNewUsers (20130221185532)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (1.9ms)[0m  [1m    CREATE OR REPLACE VIEW statistics AS
     SELECT (SELECT count(*) AS count
           FROM users) AS total_users, 
    backers_totals.total_backs, backers_totals.total_backers, 
    backers_totals.total_backed, projects_totals.total_projects, 
    projects_totals.total_projects_success, 
    projects_totals.total_projects_online
   FROM ( SELECT count(*) AS total_backs, 
            count(DISTINCT backers.user_id) AS total_backers, 
            sum(backers.value) AS total_backed
           FROM backers
          WHERE backers.confirmed) backers_totals, 
    ( SELECT count(*) AS total_projects, 
            count(
                CASE
                    WHEN projects.state::text = 'successful'::text THEN 1
                    ELSE NULL::integer
                END) AS total_projects_success, 
            count(
                CASE
                    WHEN projects.state::text = 'online'::text THEN 1
                    ELSE NULL::integer
                END) AS total_projects_online
           FROM projects
          WHERE projects.state::text <> ALL (ARRAY['draft'::character varying::text, 'rejected'::character varying::text])) projects_totals;
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130221185532"]]
  [1m[36m (2.1ms)[0m  [1mCOMMIT[0m
Migrating to RemoveSecondaryUsers (20130221201732)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.9ms)[0m  [1m
      UPDATE users SET email = 
        (SELECT email FROM users su WHERE su.primary_user_id = users.id AND email IS NOT NULL LIMIT 1) 
      WHERE 
        email IS NULL AND primary_user_id IS NULL
        AND (SELECT count(*) FROM users su WHERE su.primary_user_id = users.id AND email IS NOT NULL) > 0[0m
  [1m[35m (0.7ms)[0m  
      UPDATE users SET name = 
        (SELECT name FROM users su WHERE su.primary_user_id = users.id AND name IS NOT NULL LIMIT 1) 
      WHERE 
        name IS NULL AND primary_user_id IS NULL
        AND (SELECT count(*) FROM users su WHERE su.primary_user_id = users.id AND name IS NOT NULL) > 0
  [1m[36m (0.7ms)[0m  [1m
      UPDATE users SET nickname = 
        (SELECT nickname FROM users su WHERE su.primary_user_id = users.id AND nickname IS NOT NULL LIMIT 1) 
      WHERE 
        nickname IS NULL AND primary_user_id IS NULL
        AND (SELECT count(*) FROM users su WHERE su.primary_user_id = users.id AND nickname IS NOT NULL) > 0[0m
  [1m[35m (0.7ms)[0m  
      UPDATE users SET bio = 
        (SELECT bio FROM users su WHERE su.primary_user_id = users.id AND bio IS NOT NULL LIMIT 1) 
      WHERE 
        bio IS NULL AND primary_user_id IS NULL
        AND (SELECT count(*) FROM users su WHERE su.primary_user_id = users.id AND bio IS NOT NULL) > 0
  [1m[36m (1.0ms)[0m  [1m
      UPDATE users SET image_url = 
        (SELECT image_url FROM users su WHERE su.primary_user_id = users.id AND image_url IS NOT NULL LIMIT 1) 
      WHERE 
        image_url IS NULL AND primary_user_id IS NULL
        AND (SELECT count(*) FROM users su WHERE su.primary_user_id = users.id AND image_url IS NOT NULL) > 0[0m
  [1m[35m (1.7ms)[0m  
      UPDATE users SET newsletter = 
        (SELECT newsletter FROM users su WHERE su.primary_user_id = users.id AND newsletter IS NOT NULL LIMIT 1) 
      WHERE 
        newsletter IS NULL AND primary_user_id IS NULL
        AND (SELECT count(*) FROM users su WHERE su.primary_user_id = users.id AND newsletter IS NOT NULL) > 0
  [1m[36m (1.0ms)[0m  [1m
      UPDATE users SET project_updates = 
        (SELECT project_updates FROM users su WHERE su.primary_user_id = users.id AND project_updates IS NOT NULL LIMIT 1) 
      WHERE 
        project_updates IS NULL AND primary_user_id IS NULL
        AND (SELECT count(*) FROM users su WHERE su.primary_user_id = users.id AND project_updates IS NOT NULL) > 0[0m
  [1m[35m (0.8ms)[0m  
      UPDATE users SET full_name = 
        (SELECT full_name FROM users su WHERE su.primary_user_id = users.id AND full_name IS NOT NULL LIMIT 1) 
      WHERE 
        full_name IS NULL AND primary_user_id IS NULL
        AND (SELECT count(*) FROM users su WHERE su.primary_user_id = users.id AND full_name IS NOT NULL) > 0
  [1m[36m (1.0ms)[0m  [1m
      UPDATE users SET address_street = 
        (SELECT address_street FROM users su WHERE su.primary_user_id = users.id AND address_street IS NOT NULL LIMIT 1) 
      WHERE 
        address_street IS NULL AND primary_user_id IS NULL
        AND (SELECT count(*) FROM users su WHERE su.primary_user_id = users.id AND address_street IS NOT NULL) > 0[0m
  [1m[35m (0.7ms)[0m  
      UPDATE users SET address_number = 
        (SELECT address_number FROM users su WHERE su.primary_user_id = users.id AND address_number IS NOT NULL LIMIT 1) 
      WHERE 
        address_number IS NULL AND primary_user_id IS NULL
        AND (SELECT count(*) FROM users su WHERE su.primary_user_id = users.id AND address_number IS NOT NULL) > 0
  [1m[36m (0.7ms)[0m  [1m
      UPDATE users SET address_complement = 
        (SELECT address_complement FROM users su WHERE su.primary_user_id = users.id AND address_complement IS NOT NULL LIMIT 1) 
      WHERE 
        address_complement IS NULL AND primary_user_id IS NULL
        AND (SELECT count(*) FROM users su WHERE su.primary_user_id = users.id AND address_complement IS NOT NULL) > 0[0m
  [1m[35m (1.0ms)[0m  
      UPDATE users SET address_neighbourhood = 
        (SELECT address_neighbourhood FROM users su WHERE su.primary_user_id = users.id AND address_neighbourhood IS NOT NULL LIMIT 1) 
      WHERE 
        address_neighbourhood IS NULL AND primary_user_id IS NULL
        AND (SELECT count(*) FROM users su WHERE su.primary_user_id = users.id AND address_neighbourhood IS NOT NULL) > 0
  [1m[36m (0.8ms)[0m  [1m
      UPDATE users SET address_city = 
        (SELECT address_city FROM users su WHERE su.primary_user_id = users.id AND address_city IS NOT NULL LIMIT 1) 
      WHERE 
        address_city IS NULL AND primary_user_id IS NULL
        AND (SELECT count(*) FROM users su WHERE su.primary_user_id = users.id AND address_city IS NOT NULL) > 0[0m
  [1m[35m (0.7ms)[0m  
      UPDATE users SET address_state = 
        (SELECT address_state FROM users su WHERE su.primary_user_id = users.id AND address_state IS NOT NULL LIMIT 1) 
      WHERE 
        address_state IS NULL AND primary_user_id IS NULL
        AND (SELECT count(*) FROM users su WHERE su.primary_user_id = users.id AND address_state IS NOT NULL) > 0
  [1m[36m (0.4ms)[0m  [1m
      UPDATE users SET address_zip_code = 
        (SELECT address_zip_code FROM users su WHERE su.primary_user_id = users.id AND address_zip_code IS NOT NULL LIMIT 1) 
      WHERE 
        address_zip_code IS NULL AND primary_user_id IS NULL
        AND (SELECT count(*) FROM users su WHERE su.primary_user_id = users.id AND address_zip_code IS NOT NULL) > 0[0m
  [1m[35m (0.8ms)[0m  
      UPDATE users SET phone_number = 
        (SELECT phone_number FROM users su WHERE su.primary_user_id = users.id AND phone_number IS NOT NULL LIMIT 1) 
      WHERE 
        phone_number IS NULL AND primary_user_id IS NULL
        AND (SELECT count(*) FROM users su WHERE su.primary_user_id = users.id AND phone_number IS NOT NULL) > 0
  [1m[36m (0.8ms)[0m  [1m
      UPDATE users SET locale = 
        (SELECT locale FROM users su WHERE su.primary_user_id = users.id AND locale IS NOT NULL LIMIT 1) 
      WHERE 
        locale IS NULL AND primary_user_id IS NULL
        AND (SELECT count(*) FROM users su WHERE su.primary_user_id = users.id AND locale IS NOT NULL) > 0[0m
  [1m[35m (0.7ms)[0m  
      UPDATE users SET cpf = 
        (SELECT cpf FROM users su WHERE su.primary_user_id = users.id AND cpf IS NOT NULL LIMIT 1) 
      WHERE 
        cpf IS NULL AND primary_user_id IS NULL
        AND (SELECT count(*) FROM users su WHERE su.primary_user_id = users.id AND cpf IS NOT NULL) > 0
  [1m[36m (1.4ms)[0m  [1m
      UPDATE users SET twitter = 
        (SELECT twitter FROM users su WHERE su.primary_user_id = users.id AND twitter IS NOT NULL LIMIT 1) 
      WHERE 
        twitter IS NULL AND primary_user_id IS NULL
        AND (SELECT count(*) FROM users su WHERE su.primary_user_id = users.id AND twitter IS NOT NULL) > 0[0m
  [1m[35m (0.7ms)[0m  
      UPDATE users SET facebook_link = 
        (SELECT facebook_link FROM users su WHERE su.primary_user_id = users.id AND facebook_link IS NOT NULL LIMIT 1) 
      WHERE 
        facebook_link IS NULL AND primary_user_id IS NULL
        AND (SELECT count(*) FROM users su WHERE su.primary_user_id = users.id AND facebook_link IS NOT NULL) > 0
  [1m[36m (0.7ms)[0m  [1m
      UPDATE users SET other_link = 
        (SELECT other_link FROM users su WHERE su.primary_user_id = users.id AND other_link IS NOT NULL LIMIT 1) 
      WHERE 
        other_link IS NULL AND primary_user_id IS NULL
        AND (SELECT count(*) FROM users su WHERE su.primary_user_id = users.id AND other_link IS NOT NULL) > 0[0m
  [1m[35m (0.7ms)[0m  
      UPDATE users SET uploaded_image = 
        (SELECT uploaded_image FROM users su WHERE su.primary_user_id = users.id AND uploaded_image IS NOT NULL LIMIT 1) 
      WHERE 
        uploaded_image IS NULL AND primary_user_id IS NULL
        AND (SELECT count(*) FROM users su WHERE su.primary_user_id = users.id AND uploaded_image IS NOT NULL) > 0
  [1m[36m (1.1ms)[0m  [1m
      UPDATE users SET moip_login = 
        (SELECT moip_login FROM users su WHERE su.primary_user_id = users.id AND moip_login IS NOT NULL LIMIT 1) 
      WHERE 
        moip_login IS NULL AND primary_user_id IS NULL
        AND (SELECT count(*) FROM users su WHERE su.primary_user_id = users.id AND moip_login IS NOT NULL) > 0[0m
  [1m[35m (4.2ms)[0m  
    DROP INDEX index_authorizations_on_uid_and_oauth_provider_id;
    INSERT INTO authorizations (oauth_provider_id, user_id, uid, created_at, updated_at)
    SELECT DISTINCT a.oauth_provider_id, su.primary_user_id, a.uid, current_timestamp, current_timestamp
    FROM authorizations a JOIN users su ON a.user_id = su.id
    WHERE su.primary_user_id IS NOT NULL 
      AND NOT EXISTS (
        SELECT true 
        FROM authorizations a2 
        WHERE a2.user_id = su.primary_user_id AND a2.oauth_provider_id = a.oauth_provider_id);
    DELETE FROM authorizations WHERE user_id IN (SELECT id FROM users WHERE primary_user_id IS NOT NULL);
    CREATE UNIQUE INDEX index_authorizations_on_uid_and_oauth_provider_id ON authorizations (uid, oauth_provider_id);
    
  [1m[36m (1.0ms)[0m  [1m
    UPDATE backers SET user_id = (SELECT primary_user_id FROM users WHERE id = backers.user_id)
    WHERE backers.user_id IN (SELECT id FROM users WHERE primary_user_id IS NOT NULL)
    [0m
  [1m[35m (0.9ms)[0m  
    UPDATE notifications SET user_id = (SELECT primary_user_id FROM users WHERE id = notifications.user_id)
    WHERE notifications.user_id IN (SELECT id FROM users WHERE primary_user_id IS NOT NULL)
    
  [1m[36m (0.8ms)[0m  [1m
    UPDATE projects SET user_id = (SELECT primary_user_id FROM users WHERE id = projects.user_id)
    WHERE projects.user_id IN (SELECT id FROM users WHERE primary_user_id IS NOT NULL)
    [0m
  [1m[35m (0.8ms)[0m  
    UPDATE unsubscribes SET user_id = (SELECT primary_user_id FROM users WHERE id = unsubscribes.user_id)
    WHERE unsubscribes.user_id IN (SELECT id FROM users WHERE primary_user_id IS NOT NULL)
    
  [1m[36m (0.7ms)[0m  [1m
    UPDATE updates SET user_id = (SELECT primary_user_id FROM users WHERE id = updates.user_id)
    WHERE updates.user_id IN (SELECT id FROM users WHERE primary_user_id IS NOT NULL)
    [0m
  [1m[35m (1.5ms)[0m  DROP TABLE comments;
  [1m[36m (0.7ms)[0m  [1mDELETE FROM users WHERE primary_user_id IS NOT NULL[0m
  [1m[35mSQL (1.4ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130221201732"]]
  [1m[36m (1.5ms)[0m  [1mCOMMIT[0m
Migrating to AddStateInscriptionToUser (20130222163633)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "users" ADD COLUMN "state_inscription" character varying(255)[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130222163633"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
Migrating to UpdateUserEmailsFromBackers (20130225135512)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.9ms)[0m  [1m
     UPDATE users 
     SET 
      email = (SELECT b.payer_email FROM backers b WHERE b.user_id = users.id AND b.payer_email IS NOT NULL LIMIT 1) 
     WHERE 
      email IS NULL 
      AND id IN (SELECT user_id FROM backers WHERE payer_email IS NOT NULL);
    [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130225135512"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
Migrating to AlterUserDropProviderUidConstraints (20130225141802)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.9ms)[0m  [1m
    ALTER TABLE users ALTER provider DROP NOT NULL;
    ALTER TABLE users ALTER uid DROP NOT NULL;
    [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130225141802"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
Migrating to AddUniqueIndexToConfiguration (20130228141234)
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36m (3.1ms)[0m  [1mCREATE UNIQUE INDEX "index_configurations_on_name" ON "configurations" ("name")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130228141234"]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
Migrating to CreateChannelProfiles (20130304193806)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (10.0ms)[0m  [1mCREATE TABLE "channel_profiles" ("id" serial primary key, "name" character varying(255) NOT NULL, "description" character varying(255), "permalink" character varying(255), "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (2.5ms)[0m  CREATE UNIQUE INDEX "index_channel_profiles_on_permalink" ON "channel_profiles" ("permalink")
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130304193806"]]
  [1m[35m (2.3ms)[0m  COMMIT
Migrating to CreateVersions (20130307074614)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (6.2ms)[0m  CREATE TABLE "versions" ("id" serial primary key, "item_type" character varying(255) NOT NULL, "item_id" integer NOT NULL, "event" character varying(255) NOT NULL, "whodunnit" character varying(255), "object" text, "created_at" timestamp) 
  [1m[36m (2.7ms)[0m  [1mCREATE INDEX "index_versions_on_item_type_and_item_id" ON "versions" ("item_type", "item_id")[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130307074614"]]
  [1m[36m (2.2ms)[0m  [1mCOMMIT[0m
Migrating to AddReindexVersionsToRewards (20130307090153)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.3ms)[0m  [1mALTER TABLE "rewards" ADD COLUMN "reindex_versions" timestamp[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130307090153"]]
  [1m[36m (1.9ms)[0m  [1mCOMMIT[0m
Migrating to AddUserNameOnBackerReportForProjectOwner (20130308200907)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (1.8ms)[0m  [1mDROP VIEW "backer_reports_for_project_owners"[0m
  [1m[35m (4.6ms)[0m  
    CREATE OR REPLACE VIEW backer_reports_for_project_owners AS
    SELECT
      b.project_id,
      coalesce(r.id, 0) as reward_id,
      r.description as reward_description,
      b.confirmed_at::date,
      b.value as back_value,
      (b.value* (SELECT value::numeric FROM configurations WHERE name = 'catarse_fee') ) as service_fee,
      u.email as user_email,
      u.name as user_name,
      b.payer_email as payer_email,
      b.payment_method,
      coalesce(b.address_street, u.address_street) as street,
      coalesce(b.address_complement, u.address_complement) as complement,
      coalesce(b.address_number, u.address_number) as address_number,
      coalesce(b.address_neighbourhood, u.address_neighbourhood) as neighbourhood,
      coalesce(b.address_city, u.address_city) as city,
      coalesce(b.address_state, u.address_state) as state,
      coalesce(b.address_zip_code, u.address_zip_code) as zip_code
    FROM
      backers b
    JOIN users u ON u.id = b.user_id
    LEFT JOIN rewards r ON r.id = b.reward_id
    WHERE
      b.confirmed;
    
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130308200907"]]
  [1m[35m (2.6ms)[0m  COMMIT
Migrating to DropUidAndProviderConstraintOnUsers (20130311191444)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.5ms)[0m  
    ALTER TABLE users DROP CONSTRAINT users_provider_uid_unique;
    
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130311191444"]]
  [1m[35m (2.3ms)[0m  COMMIT
Migrating to RemoveUnnecessaryUserIndexes (20130311192846)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (1.6ms)[0m  
    DROP INDEX IF EXISTS users_email;
    DROP INDEX IF EXISTS index_users_on_primary_user_id_and_provider;
    DROP INDEX IF EXISTS index_users_on_uid;
    ALTER TABLE users DROP CONSTRAINT IF EXISTS users_provider_not_blank;
    ALTER TABLE users DROP CONSTRAINT IF EXISTS users_uid_not_blank;
    
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130311192846"]]
  [1m[35m (2.7ms)[0m  COMMIT
Migrating to FixDuplicateEmails (20130312001021)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (4.8ms)[0m  
    CREATE TEMP TABLE target AS SELECT min(id) id, email FROM users WHERE trim(email) <> '' GROUP BY email HAVING count(*) > 1;
    CREATE TEMP TABLE source AS SELECT id, email FROM users WHERE email IN (SELECT email FROM target) AND id NOT IN (SELECT id FROM target);
    UPDATE backers SET user_id = (SELECT t.id FROM target t JOIN source s ON s.email = t.email WHERE s.id = backers.user_id)
    WHERE user_id IN (SELECT id FROM source);
    UPDATE authorizations SET user_id = (SELECT t.id FROM target t JOIN source s ON s.email = t.email WHERE s.id = authorizations.user_id)
    WHERE user_id IN (SELECT id FROM source);
    UPDATE notifications SET user_id = (SELECT t.id FROM target t JOIN source s ON s.email = t.email WHERE s.id = notifications.user_id)
    WHERE user_id IN (SELECT id FROM source);
    UPDATE projects SET user_id = (SELECT t.id FROM target t JOIN source s ON s.email = t.email WHERE s.id = projects.user_id)
    WHERE user_id IN (SELECT id FROM source);
    UPDATE unsubscribes SET user_id = (SELECT t.id FROM target t JOIN source s ON s.email = t.email WHERE s.id = unsubscribes.user_id)
    WHERE user_id IN (SELECT id FROM source);
    UPDATE updates SET user_id = (SELECT t.id FROM target t JOIN source s ON s.email = t.email WHERE s.id = updates.user_id)
    WHERE user_id IN (SELECT id FROM source);
    DELETE FROM users WHERE id IN (SELECT id FROM source);
    DROP TABLE source;
    DROP TABLE target;
    
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130312001021"]]
  [1m[35m (2.3ms)[0m  COMMIT
Migrating to RenameChannelsProfilesToChannels (20130313032607)
  [1m[36m (0.8ms)[0m  [1mBEGIN[0m
  [1m[35m (0.9ms)[0m  ALTER TABLE "channel_profiles" RENAME TO "channels"
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "channel_profiles_id_seq" RENAME TO "channels_id_seq"[0m
  [1m[35m (0.7ms)[0m  ALTER INDEX "channel_profiles_pkey" RENAME TO "channels_pkey"
  [1m[36m (1.5ms)[0m  [1m
           SELECT distinct i.relname, d.indisunique, d.indkey, pg_get_indexdef(d.indexrelid), t.oid,
                  m.amname, pg_get_expr(d.indpred, t.oid) as conditions, pg_get_expr(d.indexprs, t.oid) as expression,
                  d.indclass
           FROM pg_class t
           INNER JOIN pg_index d ON t.oid = d.indrelid
           INNER JOIN pg_class i ON d.indexrelid = i.oid
           INNER JOIN pg_am m ON i.relam = m.oid
           WHERE i.relkind = 'i'
             AND d.indisprimary = 'f'
             AND t.relname = 'channels'
             AND i.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
          ORDER BY i.relname
[0m
  [1m[35mColumns for index index_channel_profiles_on_permalink on channels (1.4ms)[0m                SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 17010

  [1m[36mOp classes for index index_channel_profiles_on_permalink on channels (0.3ms)[0m  [1m              SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (3126)
[0m
  [1m[35m (0.3ms)[0m  ALTER INDEX "index_channel_profiles_on_permalink" RENAME TO "index_channels_on_permalink"
  [1m[36m (1.3ms)[0m  [1m
           SELECT distinct i.relname, d.indisunique, d.indkey, pg_get_indexdef(d.indexrelid), t.oid,
                  m.amname, pg_get_expr(d.indpred, t.oid) as conditions, pg_get_expr(d.indexprs, t.oid) as expression,
                  d.indclass
           FROM pg_class t
           INNER JOIN pg_index d ON t.oid = d.indrelid
           INNER JOIN pg_class i ON d.indexrelid = i.oid
           INNER JOIN pg_am m ON i.relam = m.oid
           WHERE i.relkind = 'i'
             AND d.indisprimary = 'f'
             AND t.relname = 'channels'
             AND i.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
          ORDER BY i.relname
[0m
  [1m[35mColumns for index index_channels_on_permalink on channels (0.6ms)[0m                SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 17010

  [1m[36mOp classes for index index_channels_on_permalink on channels (0.2ms)[0m  [1m              SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (3126)
[0m
  [1m[35m (0.7ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'channels'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130313032607"]]
  [1m[35m (2.3ms)[0m  COMMIT
Migrating to CreateChannelsProjects (20130313034356)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.7ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'channels_projects'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36m (0.6ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'channels_projects'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (5.2ms)[0m  CREATE TABLE "channels_projects" ("id" serial primary key, "channel_id" integer, "project_id" integer, CONSTRAINT fk_channels_projects_channel_id FOREIGN KEY ("channel_id") REFERENCES "channels" ("id"), CONSTRAINT fk_channels_projects_project_id FOREIGN KEY ("project_id") REFERENCES "projects" ("id")) 
  [1m[36m (3.2ms)[0m  [1mCREATE UNIQUE INDEX "index_channels_projects_on_channel_id_and_project_id" ON "channels_projects" ("channel_id", "project_id")[0m
  [1m[35m (2.9ms)[0m  CREATE INDEX "index_channels_projects_on_project_id" ON "channels_projects" ("project_id")
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130313034356"]]
  [1m[35m (2.3ms)[0m  COMMIT
Migrating to CreateChannelsTrustees (20130319131919)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.8ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'channels_trustees'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36m (0.3ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'channels_trustees'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (6.7ms)[0m  CREATE TABLE "channels_trustees" ("id" serial primary key, "user_id" integer, "channel_id" integer, CONSTRAINT fk_channels_trustees_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id"), CONSTRAINT fk_channels_trustees_channel_id FOREIGN KEY ("channel_id") REFERENCES "channels" ("id")) 
  [1m[36m (4.6ms)[0m  [1mCREATE UNIQUE INDEX "index_channels_trustees_on_user_id_and_channel_id" ON "channels_trustees" ("user_id", "channel_id")[0m
  [1m[35m (3.0ms)[0m  CREATE INDEX "index_channels_trustees_on_channel_id" ON "channels_trustees" ("channel_id")
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130319131919"]]
  [1m[35m (2.8ms)[0m  COMMIT
Migrating to AddTwitterAndFacebookAndEmailToChannels (20130410181958)
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "channels" ADD COLUMN "twitter" character varying(255)
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "channels" ADD COLUMN "facebook" character varying(255)[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "channels" ADD COLUMN "email" character varying(255)
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130410181958"]]
  [1m[35m (2.2ms)[0m  COMMIT
Migrating to AddImageToChannels (20130410190247)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "channels" ADD COLUMN "image" character varying(255)
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130410190247"]]
  [1m[35m (2.3ms)[0m  COMMIT
Migrating to AddWebsiteToChannels (20130410191240)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "channels" ADD COLUMN "website" character varying(255)
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130410191240"]]
  [1m[35m (2.1ms)[0m  COMMIT
Migrating to CreateChannelsSubscribers (20130411193016)
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35m (0.7ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'channels_subscribers'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36m (0.7ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'channels_subscribers'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (4.7ms)[0m  CREATE TABLE "channels_subscribers" ("id" serial primary key, "user_id" integer NOT NULL, "channel_id" integer NOT NULL, CONSTRAINT fk_channels_subscribers_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id"), CONSTRAINT fk_channels_subscribers_channel_id FOREIGN KEY ("channel_id") REFERENCES "channels" ("id")) 
  [1m[36m (3.5ms)[0m  [1mCREATE INDEX "fk__channels_subscribers_user_id" ON "channels_subscribers" ("user_id")[0m
  [1m[35m (2.5ms)[0m  CREATE INDEX "fk__channels_subscribers_channel_id" ON "channels_subscribers" ("channel_id")
  [1m[36m (2.7ms)[0m  [1mCREATE UNIQUE INDEX "index_channels_subscribers_on_user_id_and_channel_id" ON "channels_subscribers" ("user_id", "channel_id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130411193016"]]
  [1m[36m (2.2ms)[0m  [1mCOMMIT[0m
Migrating to AddStateToBackers (20130419184530)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.8ms)[0m  [1mALTER TABLE "backers" ADD COLUMN "state" character varying(255)[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130419184530"]]
  [1m[36m (1.9ms)[0m  [1mCOMMIT[0m
Migrating to AddNotificationTypeDraftChannel (20130422071805)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.6ms)[0m  [1m
    INSERT INTO notification_types (name, created_at, updated_at) VALUES ('new_draft_project_channel', now(), now())
    [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130422071805"]]
  [1m[36m (2.0ms)[0m  [1mCOMMIT[0m
Migrating to AddNotificationTypeProjectReceivedChannel (20130422072051)
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36m (1.1ms)[0m  [1m
    INSERT INTO notification_types (name, created_at, updated_at) VALUES ('project_received_channel', now(), now())
    [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130422072051"]]
  [1m[36m (1.9ms)[0m  [1mCOMMIT[0m
Migrating to UpdateUserTotalToBackerStateMachine (20130423162359)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (1.9ms)[0m  [1m      CREATE OR REPLACE VIEW user_totals AS 
      SELECT 
        b.user_id as id,
        b.user_id, 
        sum(b.value) AS sum, 
        count(*) AS count,
        sum(CASE 
          -- I've backed a successful (or unfinished) project with money
          WHEN (p.state <> 'failed') AND NOT b.credits THEN 0 
          -- I've backed a failed project with credits
          WHEN p.state = 'failed' AND b.credits THEN 0
          -- I've backed a failed project with money and asked for refund xor I've backed a failed project with credits
          WHEN p.state = 'failed' AND ((b.state='requested_refund' AND NOT b.credits) OR (b.credits AND NOT b.state='requested_refund')) THEN 0           
          -- I've backed a failed project with money and did not ask for refund
          WHEN p.state = 'failed' AND NOT b.credits AND b.state = 'confirmed' THEN b.value 
          -- I've backed a successful project with credits
          ELSE b.value * (-1)::numeric
        END) AS credits
      FROM 
        backers b
        JOIN projects p ON (b.project_id = p.id)
      WHERE b.state = 'confirmed'
      GROUP BY b.user_id;
[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130423162359"]]
  [1m[36m (2.1ms)[0m  [1mCOMMIT[0m
Migrating to AddBackerStateMachineIntoStatistics (20130424173128)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (1.8ms)[0m  [1m    CREATE OR REPLACE VIEW statistics AS
     SELECT (SELECT count(*) AS count
           FROM users) AS total_users, 
    backers_totals.total_backs, backers_totals.total_backers, 
    backers_totals.total_backed, projects_totals.total_projects, 
    projects_totals.total_projects_success, 
    projects_totals.total_projects_online
   FROM ( SELECT count(*) AS total_backs, 
            count(DISTINCT backers.user_id) AS total_backers,
            sum(backers.value) AS total_backed
           FROM backers
          WHERE backers.state <> ALL(ARRAY['pending'::character varying::text, 'canceled'::character varying::text])) backers_totals, 
    ( SELECT count(*) AS total_projects, 
            count(
                CASE
                    WHEN projects.state::text = 'successful'::text THEN 1
                    ELSE NULL::integer
                END) AS total_projects_success, 
            count(
                CASE
                    WHEN projects.state::text = 'online'::text THEN 1
                    ELSE NULL::integer
                END) AS total_projects_online
           FROM projects
          WHERE projects.state::text <> ALL (ARRAY['draft'::character varying::text, 'rejected'::character varying::text])) projects_totals;
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130424173128"]]
  [1m[36m (2.9ms)[0m  [1mCOMMIT[0m
Migrating to AddRowOrderToRewards (20130426204503)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "rewards" ADD COLUMN "row_order" integer[0m
  [1m[35m (0.4ms)[0m  UPDATE rewards SET row_order = rewards.minimum_value;
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130426204503"]]
  [1m[35m (0.6ms)[0m  COMMIT
Migrating to RenameCategories (20130429142823)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.6ms)[0m  
    UPDATE categories SET name_pt = 'Gastronomia', name_en = 'Gastronomy' WHERE name_pt = 'Comida';
    UPDATE categories SET name_pt = 'Ciência e Tecnologia', name_en = 'Science & Technology' WHERE name_pt = 'Tecnologia';
    
  [1m[36mSQL (1.5ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130429142823"]]
  [1m[35m (1.3ms)[0m  COMMIT
Migrating to AddNewCategories (20130429144749)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (1.3ms)[0m  
    INSERT INTO categories (name_pt, name_en, created_at, updated_at) VALUES ('Mobilidade e Transporte', 'Mobility & Transportation', now(), now());
    INSERT INTO categories (name_pt, name_en, created_at, updated_at) VALUES ('Meio Ambiente', 'Environment', now(), now());
    INSERT INTO categories (name_pt, name_en, created_at, updated_at) VALUES ('Negócios Sociais', 'Social Business', now(), now());
    INSERT INTO categories (name_pt, name_en, created_at, updated_at) VALUES ('Educação', 'Education', now(), now());
    INSERT INTO categories (name_pt, name_en, created_at, updated_at) VALUES ('Filmes de Ficção', 'Fiction Films', now(), now());
    INSERT INTO categories (name_pt, name_en, created_at, updated_at) VALUES ('Filmes Documentários', 'Documentary Films', now(), now());
    INSERT INTO categories (name_pt, name_en, created_at, updated_at) VALUES ('Filmes Universitários', 'Experimental Films', now(), now());
    
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130429144749"]]
  [1m[35m (0.6ms)[0m  COMMIT
Migrating to MoveProjectsToArtAndRemoveOldCategories (20130429153115)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.9ms)[0m  
      UPDATE projects SET category_id = (SELECT id FROM categories WHERE name_pt = 'Arte') WHERE category_id = (SELECT id FROM categories WHERE name_pt = 'Feito à mão');
      UPDATE projects SET category_id = (SELECT id FROM categories WHERE name_pt = 'Arte') WHERE category_id = (SELECT id FROM categories WHERE name_pt = 'Graffiti');
      DELETE FROM categories WHERE name_pt = 'Feito à mão';
      DELETE FROM categories WHERE name_pt = 'Graffiti';
    
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130429153115"]]
  [1m[35m (0.6ms)[0m  COMMIT
Migrating to AddLayoutToNotificationType (20130430203333)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (10.7ms)[0m  ALTER TABLE "notification_types" ADD COLUMN "layout" text DEFAULT 'email' NOT NULL
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130430203333"]]
  [1m[35m (2.4ms)[0m  COMMIT
Migrating to AddAnonymousToReportsToProjectOwner (20130502175814)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.9ms)[0m  DROP VIEW "backer_reports_for_project_owners"
  [1m[36m (3.2ms)[0m  [1m
    CREATE OR REPLACE VIEW backer_reports_for_project_owners AS
    SELECT
      b.project_id,
      coalesce(r.id, 0) as reward_id,
      r.description as reward_description,
      b.confirmed_at::date,
      b.value as back_value,
      (b.value* (SELECT value::numeric FROM configurations WHERE name = 'catarse_fee') ) as service_fee,
      u.email as user_email,
      u.name as user_name,
      b.payer_email as payer_email,
      b.payment_method,
      coalesce(b.address_street, u.address_street) as street,
      coalesce(b.address_complement, u.address_complement) as complement,
      coalesce(b.address_number, u.address_number) as address_number,
      coalesce(b.address_neighbourhood, u.address_neighbourhood) as neighbourhood,
      coalesce(b.address_city, u.address_city) as city,
      coalesce(b.address_state, u.address_state) as state,
      coalesce(b.address_zip_code, u.address_zip_code) as zip_code,
      b.anonymous
    FROM
      backers b
    JOIN users u ON u.id = b.user_id
    LEFT JOIN rewards r ON r.id = b.reward_id
    WHERE
      b.confirmed;
    [0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130502175814"]]
  [1m[36m (2.3ms)[0m  [1mCOMMIT[0m
Migrating to UpdateBackersStateMachine (20130505013655)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (2.5ms)[0m  [1m      update backers b
        set state= 
        (
          case         
           -- when backer is via user credit
           when b.confirmed and b.credits then 'confirmed'            
           -- when backer is confirmed and user not requested refund and not is refunded and credits too
           when b.confirmed and not b.requested_refund and not b.refunded and not b.credits then 'confirmed'
           -- when backer is confirmed and user requested refund but is not refunded yet and not credits
           when b.confirmed and b.requested_refund and not b.refunded and not b.credits then 'requested_refund'
           -- when backer is refunded and not credits
           when b.confirmed and b.refunded and not b.credits then 'refunded'
           -- when backer is not confirmed but user already pass into payment gateway
           when not b.confirmed and b.payment_token is not null and ( 
             case 
               when lower(b.payment_choice) = 'debitobancario' then
                 date(current_timestamp) <= date(b.created_at + interval '1 days')
               when lower(b.payment_choice) = 'cartaodecredito' then
                 date(current_timestamp) <= date(b.created_at + interval '1 days')
               else
                 date(current_timestamp) <= date(b.created_at + interval '5 days')
               end
           ) then 'waiting_confirmation'
           else 'pending'
          end       
        )
[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130505013655"]]
  [1m[36m (2.1ms)[0m  [1mCOMMIT[0m
Migrating to UpdateBackerReportsToProjectOwnerViewToBackerStateMachine (20130506191243)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (1.1ms)[0m  [1mDROP VIEW "backer_reports_for_project_owners"[0m
  [1m[35m (2.7ms)[0m        CREATE OR REPLACE VIEW backer_reports_for_project_owners AS
      SELECT
        b.project_id,
        coalesce(r.id, 0) as reward_id,
        r.description as reward_description,
        b.confirmed_at::date,
        b.value as back_value,
        (b.value* (SELECT value::numeric FROM configurations WHERE name = 'catarse_fee') ) as service_fee,
        u.email as user_email,
        u.name as user_name,
        b.payer_email as payer_email,
        b.payment_method,
        coalesce(b.address_street, u.address_street) as street,
        coalesce(b.address_complement, u.address_complement) as complement,
        coalesce(b.address_number, u.address_number) as address_number,
        coalesce(b.address_neighbourhood, u.address_neighbourhood) as neighbourhood,
        coalesce(b.address_city, u.address_city) as city,
        coalesce(b.address_state, u.address_state) as state,
        coalesce(b.address_zip_code, u.address_zip_code) as zip_code
      FROM
        backers b
      JOIN users u ON u.id = b.user_id
      LEFT JOIN rewards r ON r.id = b.reward_id
      WHERE
        b.state = 'confirmed';        

  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130506191243"]]
  [1m[35m (2.2ms)[0m  COMMIT
Migrating to UpdateBackerReportsToBackerStateMachine (20130506191508)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.8ms)[0m  DROP VIEW "backer_reports"
  [1m[36m (2.4ms)[0m  [1mCREATE VIEW "backer_reports" AS       SELECT 
        b.project_id,
        u.name, 
        b.value,
        r.minimum_value,
        r.description,
        b.payment_method,
        b.payment_choice,
        b.payment_service_fee,
        b.key,
        b.created_at::date,
        b.confirmed_at::date,
        u.email,
        b.payer_email,
        b.payer_name,
        coalesce(b.payer_document, u.cpf) as cpf,
        u.address_street,
        u.address_complement,
        u.address_number,
        u.address_neighbourhood,
        u.address_city,
        u.address_state,
        u.address_zip_code,
        b.state
      FROM 
        backers b
        JOIN users u ON u.id = b.user_id
        LEFT JOIN rewards r ON r.id = b.reward_id
      WHERE
        b.state = 'confirmed';
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130506191508"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
Migrating to AddWaitingConfirmationOnStatisticsView (20130514132519)
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36m (3.4ms)[0m  [1m      CREATE OR REPLACE VIEW statistics AS
       SELECT (SELECT count(*) AS count
             FROM users) AS total_users, 
      backers_totals.total_backs, backers_totals.total_backers, 
      backers_totals.total_backed, projects_totals.total_projects, 
      projects_totals.total_projects_success, 
      projects_totals.total_projects_online
     FROM ( SELECT count(*) AS total_backs, 
              count(DISTINCT backers.user_id) AS total_backers,
              sum(backers.value) AS total_backed
             FROM backers
            WHERE backers.state <> ALL(ARRAY['waiting_confirmation'::character varying::text, 'pending'::character varying::text, 'canceled'::character varying::text])) backers_totals, 
      ( SELECT count(*) AS total_projects, 
              count(
                  CASE
                      WHEN projects.state::text = 'successful'::text THEN 1
                      ELSE NULL::integer
                  END) AS total_projects_success, 
              count(
                  CASE
                      WHEN projects.state::text = 'online'::text THEN 1
                      ELSE NULL::integer
                  END) AS total_projects_online
             FROM projects
            WHERE projects.state::text <> ALL (ARRAY['draft'::character varying::text, 'rejected'::character varying::text])) projects_totals;
[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130514132519"]]
  [1m[36m (2.2ms)[0m  [1mCOMMIT[0m
Migrating to DropViews (20130514185010)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (4.4ms)[0m  [1m
DROP VIEW IF EXISTS backers_by_category;
DROP VIEW IF EXISTS backers_by_payment_choice;
DROP VIEW IF EXISTS backers_by_project CASCADE;
DROP VIEW IF EXISTS projects_by_total_backed_ranges;
DROP VIEW IF EXISTS projects_by_year;
DROP VIEW IF EXISTS projects_by_category;
DROP VIEW IF EXISTS projects_by_state;
DROP VIEW IF EXISTS backers_by_state;
DROP VIEW IF EXISTS backers_by_year CASCADE;
DROP VIEW IF EXISTS paypal_pending;
DROP VIEW IF EXISTS project_totals;
DROP VIEW IF EXISTS recurring_backers_by_year;
DROP VIEW IF EXISTS rewards_by_range;
    [0m
  [1m[35m (1.2ms)[0m  CREATE VIEW "project_totals" AS SELECT backers.project_id, sum(backers.value) AS pledged, 
    count(*) AS total_backers
   FROM backers
  WHERE backers.state = 'confirmed'
  GROUP BY backers.project_id;
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130514185010"]]
  [1m[35m (2.2ms)[0m  COMMIT
Migrating to FixProjectOwnerView (20130514185116)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (1.1ms)[0m  DROP VIEW "backer_reports_for_project_owners"
  [1m[36m (3.2ms)[0m  [1m      CREATE OR REPLACE VIEW backer_reports_for_project_owners AS
      SELECT
        b.project_id,
        coalesce(r.id, 0) as reward_id,
        r.description as reward_description,
        b.confirmed_at::date,
        b.value as back_value,
        (b.value* (SELECT value::numeric FROM configurations WHERE name = 'catarse_fee') ) as service_fee,
        u.email as user_email,
        u.name as user_name,
        b.payer_email as payer_email,
        b.payment_method,
        coalesce(b.address_street, u.address_street) as street,
        coalesce(b.address_complement, u.address_complement) as complement,
        coalesce(b.address_number, u.address_number) as address_number,
        coalesce(b.address_neighbourhood, u.address_neighbourhood) as neighbourhood,
        coalesce(b.address_city, u.address_city) as city,
        coalesce(b.address_state, u.address_state) as state,
        coalesce(b.address_zip_code, u.address_zip_code) as zip_code,
        b.anonymous
      FROM
        backers b
      JOIN users u ON u.id = b.user_id
      LEFT JOIN rewards r ON r.id = b.reward_id
      WHERE
        b.state = 'confirmed';
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130514185116"]]
  [1m[36m (2.1ms)[0m  [1mCOMMIT[0m
Migrating to RemoveBooleanFieldsFromProjects (20130514185926)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (1.3ms)[0m  [1m
    ALTER TABLE projects DROP IF EXISTS can_finish;
    ALTER TABLE projects DROP IF EXISTS finished;
    ALTER TABLE projects DROP IF EXISTS visible;
    ALTER TABLE projects DROP IF EXISTS rejected;
    ALTER TABLE projects DROP IF EXISTS successful;[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130514185926"]]
  [1m[36m (2.7ms)[0m  [1mCOMMIT[0m
Migrating to RemoveBooleanFieldsFromBackers (20130515192404)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (1.1ms)[0m  [1m
    ALTER TABLE backers DROP IF EXISTS confirmed;
    ALTER TABLE backers DROP IF EXISTS requested_refund;
    ALTER TABLE backers DROP IF EXISTS refunded;[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130515192404"]]
  [1m[36m (2.4ms)[0m  [1mCOMMIT[0m
Migrating to FixProjectTotalToUseRefundedAndRequestedRefundToo (20130523144013)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (1.0ms)[0m  [1m      CREATE OR REPLACE VIEW project_totals AS
        SELECT backers.project_id, sum(backers.value) AS pledged, count(*) AS total_backers
        FROM backers
        WHERE (backers.state ~* '(confirmed|refunded|requested_refund)')
        GROUP BY backers.project_id;
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130523144013"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
Migrating to FixProjectTotalAgainSomeRegexError (20130523173609)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.8ms)[0m  [1m      CREATE OR REPLACE VIEW project_totals AS
        SELECT backers.project_id, sum(backers.value) AS pledged, count(*) AS total_backers
        FROM backers
        WHERE (backers.state ~* '(confirmed|refunded|requested_refund)$')
        GROUP BY backers.project_id;
[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130523173609"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
Migrating to AddVideoEmbedUrlToProjects (20130527204639)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "projects" ADD COLUMN "video_embed_url" character varying(255)[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130527204639"]]
  [1m[36m (1.9ms)[0m  [1mCOMMIT[0m
Migrating to UpdateBackersThatAreInRefundedWhenProjectIsOnline (20130529171845)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.5ms)[0m  [1m      UPDATE backers
        SET state = 'refunded_and_canceled'
        WHERE state = 'refunded_when_project_is_not_finished'
[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130529171845"]]
  [1m[36m (1.7ms)[0m  [1mCOMMIT[0m
Migrating to AddIndexToPaymentNotificationOnBackerId (20130604171730)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (3.4ms)[0m  [1mCREATE INDEX "index_payment_notifications_on_backer_id" ON "payment_notifications" ("backer_id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130604171730"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
Migrating to UpdateOnlineDateForLegacyProjects (20130604172253)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.6ms)[0m  [1m      UPDATE projects
        SET online_days = 60, online_date = (expires_at - interval '60 days')
        WHERE online_days = 0 AND online_date IS NULL;
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130604172253"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
Migrating to RemoveExpiresAtFromViews (20130604175953)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (1.8ms)[0m  [1mCREATE or replace VIEW financial_reports AS
    SELECT p.name, u.moip_login, p.goal, p.online_date + (p.online_days::text||' days')::interval as expires_at, p.state FROM (projects p JOIN users u ON ((u.id = p.user_id)));[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130604175953"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
Migrating to RemoveExpiresAtFromProjects (20130604180503)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.5ms)[0m  [1m
    ALTER TABLE projects DROP IF EXISTS expires_at;
    [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130604180503"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
Migrating to RemoveImageUrlFromProjects (20130607222330)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (1.5ms)[0m  [1mALTER TABLE projects DROP IF EXISTS image_url;[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130607222330"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
Migrating to CreateProjectsChartView (20130617175402)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (2.7ms)[0m  [1mCREATE VIEW "projects_by_periods" AS WITH weeks AS (
  SELECT 
    generate_series * 7 AS days
  FROM generate_series(0, 7)
), 
current_period AS (
SELECT 
  'current_period'::text as series, 
  count(*),
  w.days / 7 as week
FROM 
  projects p 
  RIGHT JOIN weeks w ON p.created_at::date >= (current_date - w.days - 7) AND p.created_at < (current_date - w.days)
GROUP BY week
),
previous_period AS (
SELECT 
  'previous_period'::text as series, 
  count(*),
  w.days / 7 as week
FROM 
  projects p 
  RIGHT JOIN weeks w ON p.created_at::date >= (current_date - w.days - 7 - 56) AND p.created_at < (current_date - w.days - 56)
GROUP BY week
),
last_year AS (
SELECT 
  'last_year'::text as series, 
  count(*),
  w.days / 7 as week
FROM 
  projects p 
  RIGHT JOIN weeks w ON p.created_at::date >= (current_date - w.days - 7 - 365) AND p.created_at < (current_date - w.days - 365)
GROUP BY week
)
(SELECT * FROM current_period)
UNION ALL
(SELECT * FROM previous_period)
UNION ALL
(SELECT * FROM last_year)
ORDER BY series, week;
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130617175402"]]
  [1m[36m (2.0ms)[0m  [1mCOMMIT[0m
Migrating to CreateBackersByPeriodView (20130618175432)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (2.8ms)[0m  [1mCREATE VIEW "backers_by_periods" AS WITH weeks AS (
  SELECT 
    generate_series * 7 AS days
  FROM generate_series(0, 7)
), 
current_period AS (
SELECT 
  'current_period'::text as series, 
  sum(b.value),
  w.days / 7 as week
FROM 
  backers b 
  RIGHT JOIN weeks w ON b.confirmed_at::date >= (current_date - w.days - 7) AND b.confirmed_at < (current_date - w.days)
WHERE
  state NOT IN ('pending', 'canceled', 'waiting_confirmation')
GROUP BY week
),
previous_period AS (
SELECT 
  'previous_period'::text as series, 
  sum(b.value),
  w.days / 7 as week
FROM 
  backers b 
  RIGHT JOIN weeks w ON b.confirmed_at::date >= (current_date - w.days - 7 - 56) AND b.confirmed_at < (current_date - w.days - 56)
WHERE
  state NOT IN ('pending', 'canceled', 'waiting_confirmation')
GROUP BY week
),
last_year AS (
SELECT 
  'last_year'::text as series, 
  sum(b.value),
  w.days / 7 as week
FROM 
  backers b 
  RIGHT JOIN weeks w ON b.confirmed_at::date >= (current_date - w.days - 7 - 365) AND b.confirmed_at < (current_date - w.days - 365)
WHERE
  state NOT IN ('pending', 'canceled', 'waiting_confirmation')
GROUP BY week
)
(SELECT * FROM current_period)
UNION ALL
(SELECT * FROM previous_period)
UNION ALL
(SELECT * FROM last_year)
ORDER BY series, week;
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130618175432"]]
  [1m[36m (2.0ms)[0m  [1mCOMMIT[0m
Migrating to AddExpiresAtFunction (20130626122439)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.9ms)[0m  [1m
    CREATE FUNCTION expires_at(projects) RETURNS timestamp AS $$
     SELECT (($1.online_date + ($1.online_days || ' days')::interval)::date::text || ' 23:59:59')::timestamp
    $$ LANGUAGE SQL;
    [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130626122439"]]
  [1m[36m (2.1ms)[0m  [1mCOMMIT[0m
Migrating to DropPaymentLogs (20130626124055)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.9ms)[0m  [1mDROP TABLE IF EXISTS payment_logs[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130626124055"]]
  [1m[36m (1.7ms)[0m  [1mCOMMIT[0m
Migrating to UpdateBackersByPeriodViewWithDeletedBackerState (20130702192659)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (1.0ms)[0m  [1mDROP VIEW "backers_by_periods"[0m
  [1m[35m (3.8ms)[0m  CREATE VIEW "backers_by_periods" AS WITH weeks AS (
  SELECT 
    generate_series * 7 AS days
  FROM generate_series(0, 7)
), 
current_period AS (
SELECT 
  'current_period'::text as series, 
  sum(b.value),
  w.days / 7 as week
FROM 
  backers b 
  RIGHT JOIN weeks w ON b.confirmed_at::date >= (current_date - w.days - 7) AND b.confirmed_at < (current_date - w.days)
WHERE
  state NOT IN ('pending', 'canceled', 'waiting_confirmation', 'deleted')
GROUP BY week
),
previous_period AS (
SELECT 
  'previous_period'::text as series, 
  sum(b.value),
  w.days / 7 as week
FROM 
  backers b 
  RIGHT JOIN weeks w ON b.confirmed_at::date >= (current_date - w.days - 7 - 56) AND b.confirmed_at < (current_date - w.days - 56)
WHERE
  state NOT IN ('pending', 'canceled', 'waiting_confirmation', 'deleted')
GROUP BY week
),
last_year AS (
SELECT 
  'last_year'::text as series, 
  sum(b.value),
  w.days / 7 as week
FROM 
  backers b 
  RIGHT JOIN weeks w ON b.confirmed_at::date >= (current_date - w.days - 7 - 365) AND b.confirmed_at < (current_date - w.days - 365)
WHERE
  state NOT IN ('pending', 'canceled', 'waiting_confirmation', 'deleted')
GROUP BY week
)
(SELECT * FROM current_period)
UNION ALL
(SELECT * FROM previous_period)
UNION ALL
(SELECT * FROM last_year)
ORDER BY series, week;

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130702192659"]]
  [1m[35m (2.0ms)[0m  COMMIT
Migrating to AddExclusiveToUpdates (20130703171547)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (9.0ms)[0m  ALTER TABLE "updates" ADD COLUMN "exclusive" boolean DEFAULT 'f'
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130703171547"]]
  [1m[35m (2.5ms)[0m  COMMIT
Migrating to ReplaceExpiresAtToIncludeTimezone (20130705131825)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.6ms)[0m  
    DROP FUNCTION expires_at(projects);
    CREATE OR REPLACE FUNCTION expires_at(projects) RETURNS timestamptz AS $$
     SELECT (($1.online_date + ($1.online_days || ' days')::interval)::date::text || ' 23:59:59')::timestamp AT TIME ZONE coalesce((SELECT value FROM configurations WHERE name = 'timezone'), 'America/Sao_Paulo')
    $$ LANGUAGE SQL;
    
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130705131825"]]
  [1m[35m (0.7ms)[0m  COMMIT
Migrating to AlterStatisticsViewAddDeletedBackerState (20130705184845)
  [1m[36m (0.7ms)[0m  [1mBEGIN[0m
  [1m[35m (2.5ms)[0m         CREATE OR REPLACE VIEW statistics AS 
       SELECT ( SELECT count(*) AS count
               FROM users) AS total_users, 
        backers_totals.total_backs, backers_totals.total_backers, 
        backers_totals.total_backed, projects_totals.total_projects, 
        projects_totals.total_projects_success, 
        projects_totals.total_projects_online
       FROM ( SELECT count(*) AS total_backs, 
                count(DISTINCT backers.user_id) AS total_backers, 
                sum(backers.value) AS total_backed
               FROM backers
              WHERE backers.state::text <> ALL (ARRAY['waiting_confirmation'::character varying::text, 'pending'::character varying::text, 'canceled'::character varying::text, 'deleted'])) backers_totals, 
        ( SELECT count(*) AS total_projects, 
                count(
                    CASE
                        WHEN projects.state::text = 'successful'::text THEN 1
                        ELSE NULL::integer
                    END) AS total_projects_success, 
                count(
                    CASE
                        WHEN projects.state::text = 'online'::text THEN 1
                        ELSE NULL::integer
                    END) AS total_projects_online
               FROM projects
              WHERE projects.state::text <> ALL (ARRAY['draft'::character varying::text, 'rejected'::character varying::text])) projects_totals;

  [1m[36mSQL (1.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130705184845"]]
  [1m[35m (1.9ms)[0m  COMMIT
Migrating to AddDaysToDeliveryIntoRewards (20130710122804)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "rewards" ADD COLUMN "days_to_delivery" integer
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130710122804"]]
  [1m[35m (0.6ms)[0m  COMMIT
Migrating to RemoveLegacyColumnsFromUsers (20130722222945)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "users" DROP "uid"
  [1m[36m (0.8ms)[0m  [1mALTER TABLE "users" DROP "primary_user_id"[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "users" DROP "provider"
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130722222945"]]
  [1m[35m (0.9ms)[0m  COMMIT
Migrating to AddTotalPaymentsServiceFeeIntoProjectTotals (20130730232043)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (1.5ms)[0m        DROP VIEW project_totals;
      CREATE OR REPLACE VIEW project_totals AS
        SELECT
          backers.project_id,
          sum(backers.value) AS pledged,
          sum(backers.payment_service_fee) AS total_payment_service_fee,
          count(*) AS total_backers
        FROM backers
        WHERE (backers.state in ('confirmed', 'refunded', 'requested_refund'))
        GROUP BY backers.project_id;

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130730232043"]]
  [1m[35m (0.6ms)[0m  COMMIT
Migrating to AddTotalBackedProjectsToUserTotal (20130805230126)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (3.1ms)[0m        DROP VIEW user_totals;
      CREATE OR REPLACE VIEW user_totals AS 
      SELECT 
        b.user_id as id,
        b.user_id, 
        count(DISTINCT(b.project_id)) as total_backed_projects,
        sum(b.value) AS sum, 
        count(*) AS count,
        sum(CASE 
          -- I've backed a successful (or unfinished) project with money
          WHEN (p.state <> 'failed') AND NOT b.credits THEN 0 
          -- I've backed a failed project with credits
          WHEN p.state = 'failed' AND b.credits THEN 0
          -- I've backed a failed project with money and asked for refund xor I've backed a failed project with credits
          WHEN p.state = 'failed' AND ((b.state='requested_refund' AND NOT b.credits) OR (b.credits AND NOT b.state='requested_refund')) THEN 0           
          -- I've backed a failed project with money and did not ask for refund
          WHEN p.state = 'failed' AND NOT b.credits AND b.state = 'confirmed' THEN b.value 
          -- I've backed a successful project with credits
          ELSE b.value * (-1)::numeric
        END) AS credits
      FROM 
        backers b
        JOIN projects p ON (b.project_id = p.id)
      WHERE b.state in ('confirmed', 'requested_refund', 'refunded')
      GROUP BY b.user_id;

  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130805230126"]]
  [1m[35m (2.0ms)[0m  COMMIT
Migrating to ShowRefundedOnBackersReport (20130812191450)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.8ms)[0m  DROP VIEW "backer_reports"
  [1m[36m (2.8ms)[0m  [1mCREATE VIEW "backer_reports" AS       SELECT
        b.project_id,
        u.name,
        b.value,
        r.minimum_value,
        r.description,
        b.payment_method,
        b.payment_choice,
        b.payment_service_fee,
        b.key,
        b.created_at::date,
        b.confirmed_at::date,
        u.email,
        b.payer_email,
        b.payer_name,
        coalesce(b.payer_document, u.cpf) as cpf,
        u.address_street,
        u.address_complement,
        u.address_number,
        u.address_neighbourhood,
        u.address_city,
        u.address_state,
        u.address_zip_code,
        b.state
      FROM
        backers b
        JOIN users u ON u.id = b.user_id
        LEFT JOIN rewards r ON r.id = b.reward_id
      WHERE
        b.state IN ('confirmed', 'refunded', 'requested_refund');
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130812191450"]]
  [1m[36m (2.1ms)[0m  [1mCOMMIT[0m
Migrating to AlterTimestampToIncludeTimezone (20130814174329)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (19.9ms)[0m  [1m
      DROP FUNCTION if exists expires_at(projects);
      drop VIEW if exists financial_reports ;
      ALTER TABLE projects ALTER COLUMN online_date set data type timestamp with time zone;
      CREATE OR REPLACE FUNCTION expires_at(projects) RETURNS timestamptz AS $$
       SELECT (($1.online_date AT TIME ZONE coalesce((SELECT value FROM configurations WHERE name = 'timezone'), 'America/Sao_Paulo') + ($1.online_days || ' days')::interval)::date::text || ' 23:59:59')::timestamptz
      $$ LANGUAGE SQL;
      CREATE or replace VIEW financial_reports AS
      SELECT p.name, u.moip_login, p.goal, ((p.online_date + (p.online_days||' days')::interval)::date::text || ' 23:59:59') as expires_at, p.state FROM (projects p JOIN users u ON ((u.id = p.user_id)));
    [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130814174329"]]
  [1m[36m (3.0ms)[0m  [1mCOMMIT[0m
Migrating to CreateRecommendationsView (20130815161926)
  [1m[35m (0.9ms)[0m  BEGIN
  [1m[36m (5.8ms)[0m  [1m
    CREATE OR REPLACE VIEW recommendations AS
      SELECT * FROM ((
      SELECT
        b.user_id,
        recommendations.id AS project_id,
        count(distinct recommenders.user_id) AS count
      FROM
        backers b
        JOIN projects p ON p.id = b.project_id
        JOIN backers backers_same_projects ON p.id = backers_same_projects.project_id
        JOIN backers recommenders ON recommenders.user_id = backers_same_projects.user_id
        JOIN projects recommendations ON recommendations.id = recommenders.project_id
      WHERE
        b.state = 'confirmed'
        AND backers_same_projects.state = 'confirmed'
        AND recommenders.state = 'confirmed'
        AND b.user_id <> backers_same_projects.user_id
        AND recommendations.id <> b.project_id
        AND recommendations.state = 'online'
      and NOT EXISTS (
        SELECT true
        FROM backers b2
        WHERE 
          b2.state = 'confirmed'
          AND b2.user_id = b.user_id
          AND b2.project_id = recommendations.id
        )
      GROUP BY 
        b.user_id, recommendations.id
      )
      UNION
      (
      SELECT 
        b.user_id,
        recommendations.id AS project_id,
        0 AS count
      FROM
        backers b
        JOIN projects p ON b.project_id = p.id
        JOIN projects recommendations ON recommendations.category_id = p.category_id
      WHERE
        b.state = 'confirmed'
      ))
      recommendations
      where  
      NOT EXISTS (
        SELECT true
        FROM backers b2
        WHERE 
          b2.state = 'confirmed'
          AND b2.user_id = recommendations.user_id
          AND b2.project_id = recommendations.project_id
        )
        ORDER BY count DESC
    [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130815161926"]]
  [1m[36m (2.2ms)[0m  [1mCOMMIT[0m
Migrating to AddProjectsHomeView (20130818015857)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (4.6ms)[0m  [1m      CREATE OR REPLACE VIEW projects_for_home AS
        with recommended_projects as (
          select 'recommended'::text as origin, recommends.* from projects recommends
          where recommends.recommended and recommends.state = 'online' order by random() limit 3
        ),
        recents_projects as (
          select 'recents'::text as origin, recents.* from projects recents
          where recents.state = 'online'
          and ((current_timestamp - recents.online_date) <= '5 days'::interval)
          and recents.id not in(
            select recommends.id from recommended_projects recommends
          )
          order by random() limit 3
        ),
        expiring_projects as (
          select 'expiring'::text as origin, expiring.* from projects expiring
          where expiring.state = 'online'
          and ((expiring.expires_at) <= ((current_timestamp) + interval '2 weeks'))
          and expiring.id not in(
            (select recommends.id from recommended_projects recommends)
            union (select recents.id from recents_projects recents)
          )
          order by random() limit 3
        )

        (select * from recommended_projects) union (select * from recents_projects) union (select * from expiring_projects)

[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130818015857"]]
  [1m[36m (2.3ms)[0m  [1mCOMMIT[0m
Migrating to FixCreditsIntoUserTotalsView (20130822215532)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (2.8ms)[0m  [1m      DROP VIEW user_totals;
      CREATE OR REPLACE VIEW user_totals AS
      SELECT
        b.user_id as id,
        b.user_id,
        count(DISTINCT(b.project_id)) as total_backed_projects,
        sum(b.value) AS sum,
        count(*) AS count,
        sum(CASE
          -- I've backed a successful (or unfinished) project with money
          WHEN (p.state <> 'failed') AND NOT b.credits THEN 0

          -- I've backed a failed project with credits
          WHEN p.state = 'failed' AND b.credits THEN 0

          -- I've backed a failed project with money and asked for refund xor I've backed a failed project with credits
          WHEN p.state = 'failed' AND ((b.state IN('requested_refund', 'refunded') AND NOT b.credits) OR (b.credits AND NOT b.state IN('requested_refund', 'refunded') )) THEN 0

          -- I've backed a failed project with money and did not ask for refund
          WHEN p.state = 'failed' AND NOT b.credits AND b.state = 'confirmed' THEN b.value

          -- I've backed a successful project with credits
          ELSE b.value * (-1)::numeric
        END) AS credits
      FROM
        backers b
        JOIN projects p ON (b.project_id = p.id)
      WHERE b.state in ('confirmed', 'requested_refund', 'refunded')
      GROUP BY b.user_id;
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130822215532"]]
  [1m[36m (2.1ms)[0m  [1mCOMMIT[0m
Migrating to RevertExpiresAt (20130827210414)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1m
    CREATE OR REPLACE FUNCTION expires_at(projects) RETURNS timestamptz AS $$
     SELECT (((($1.online_date AT TIME ZONE coalesce((SELECT value FROM configurations WHERE name = 'timezone'), 'America/Sao_Paulo') + ($1.online_days || ' days')::interval)  )::date::text || ' 23:59:59-03')::timestamptz )
    $$ LANGUAGE SQL;
    [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130827210414"]]
  [1m[36m (1.7ms)[0m  [1mCOMMIT[0m
Migrating to UseExpiresAtInView (20130828160026)
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36m (1.8ms)[0m  [1m
    DROP VIEW if exists financial_reports ;
    CREATE or replace VIEW financial_reports AS
      SELECT p.name, u.moip_login, p.goal, p.expires_at, p.state FROM (projects p JOIN users u ON ((u.id = p.user_id)));[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130828160026"]]
  [1m[36m (2.1ms)[0m  [1mCOMMIT[0m
Migrating to UseTimezoneInsteadOfHardcoded3 (20130829180232)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1m
    CREATE OR REPLACE FUNCTION expires_at(projects) RETURNS timestamptz AS $$
     SELECT ((((($1.online_date AT TIME ZONE coalesce((SELECT value FROM configurations WHERE name = 'timezone'), 'America/Sao_Paulo') + ($1.online_days || ' days')::interval)  )::date::text || ' 23:59:59')::timestamp AT TIME ZONE coalesce((SELECT value FROM configurations WHERE name = 'timezone'), 'America/Sao_Paulo'))::timestamptz )               
    $$ LANGUAGE SQL;
    [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20130829180232"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
Migrating to AddSessionsTable (20130905153553)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.7ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'sessions'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (6.4ms)[0m  CREATE TABLE "sessions" ("id" serial primary key, "session_id" character varying(255) NOT NULL, "data" text, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (3.4ms)[0m  [1mCREATE INDEX "index_sessions_on_session_id" ON "sessions" ("session_id")[0m
  [1m[35m (3.1ms)[0m  CREATE INDEX "index_sessions_on_updated_at" ON "sessions" ("updated_at")
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130905153553"]]
  [1m[35m (0.8ms)[0m  COMMIT
Migrating to CreateSubscriberReports (20130911180657)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (1.4ms)[0m  CREATE VIEW "subscriber_reports" AS SELECT u.id, cs.channel_id, u.name, u.email
      FROM users u JOIN channels_subscribers cs ON cs.user_id = u.id
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130911180657"]]
  [1m[35m (3.3ms)[0m  COMMIT
Migrating to FixProjectStateInRecommendationsView (20130918191809)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (5.3ms)[0m  
    CREATE OR REPLACE VIEW recommendations AS
      SELECT * FROM ((
      SELECT
        b.user_id,
        recommendations.id AS project_id,
        count(distinct recommenders.user_id) AS count
      FROM
        backers b
        JOIN projects p ON p.id = b.project_id
        JOIN backers backers_same_projects ON p.id = backers_same_projects.project_id
        JOIN backers recommenders ON recommenders.user_id = backers_same_projects.user_id
        JOIN projects recommendations ON recommendations.id = recommenders.project_id
      WHERE
        b.state = 'confirmed'
        AND backers_same_projects.state = 'confirmed'
        AND recommenders.state = 'confirmed'
        AND b.user_id <> backers_same_projects.user_id
        AND recommendations.id <> b.project_id
        AND recommendations.state = 'online'
      and NOT EXISTS (
        SELECT true
        FROM backers b2
        WHERE 
          b2.state = 'confirmed'
          AND b2.user_id = b.user_id
          AND b2.project_id = recommendations.id
        )
      GROUP BY 
        b.user_id, recommendations.id
      )
      UNION
      (
      SELECT 
        b.user_id,
        recommendations.id AS project_id,
        0 AS count
      FROM
        backers b
        JOIN projects p ON b.project_id = p.id
        JOIN projects recommendations ON recommendations.category_id = p.category_id
      WHERE
        b.state = 'confirmed'
        AND recommendations.state = 'online'
      ))
      recommendations
      where  
      NOT EXISTS (
        SELECT true
        FROM backers b2
        WHERE 
          b2.state = 'confirmed'
          AND b2.user_id = recommendations.user_id
          AND b2.project_id = recommendations.project_id
        )
        ORDER BY count DESC
    
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130918191809"]]
  [1m[35m (2.2ms)[0m  COMMIT
Migrating to AddVideoUrlToChannels (20130926185207)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "channels" ADD COLUMN "video_url" character varying(255)
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20130926185207"]]
  [1m[35m (1.9ms)[0m  COMMIT
Migrating to AddHowItWorksToChannels (20131008190648)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "channels" ADD COLUMN "how_it_works" text
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20131008190648"]]
  [1m[35m (2.6ms)[0m  COMMIT
Migrating to AddChannelIdToUser (20131010193936)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "users" ADD COLUMN "channel_id" integer
  [1m[36m (0.7ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'users'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (3.6ms)[0m  CREATE INDEX "fk__users_channel_id" ON "users" ("channel_id")
  [1m[36m (1.4ms)[0m  [1mALTER TABLE "users" ADD CONSTRAINT fk_users_channel_id FOREIGN KEY ("channel_id") REFERENCES "channels" ("id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20131010193936"]]
  [1m[36m (2.3ms)[0m  [1mCOMMIT[0m
Migrating to UpdateUsersChannelId (20131010194006)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.9ms)[0m  [1mUPDATE users SET channel_id = (SELECT channel_id FROM channels_trustees ct WHERE ct.user_id = users.id) WHERE id IN (SELECT user_id FROM channels_trustees)[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20131010194006"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
Migrating to DropChannelsTrustees (20131010194345)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (1.6ms)[0m  [1mDROP TABLE "channels_trustees"[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20131010194345"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
Migrating to DropProjectsCuratedPages (20131010194500)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (1.0ms)[0m  [1mDROP TABLE "projects_curated_pages"[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20131010194500"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
Migrating to DropRewardRanges (20131010194521)
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36m (0.7ms)[0m  [1mDROP TABLE "reward_ranges"[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20131010194521"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
Migrating to FixDuplicatedEntriesInRecommendations (20131014201229)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (5.3ms)[0m  [1m
    CREATE OR REPLACE VIEW recommendations AS
      SELECT user_id, project_id, sum(count)::bigint as count FROM ((
      SELECT
        b.user_id,
        recommendations.id AS project_id,
        count(distinct recommenders.user_id) AS count
      FROM
        backers b
        JOIN projects p ON p.id = b.project_id
        JOIN backers backers_same_projects ON p.id = backers_same_projects.project_id
        JOIN backers recommenders ON recommenders.user_id = backers_same_projects.user_id
        JOIN projects recommendations ON recommendations.id = recommenders.project_id
      WHERE
        b.state = 'confirmed'
        AND backers_same_projects.state = 'confirmed'
        AND recommenders.state = 'confirmed'
        AND b.user_id <> backers_same_projects.user_id
        AND recommendations.id <> b.project_id
        AND recommendations.state = 'online'
      and NOT EXISTS (
        SELECT true
        FROM backers b2
        WHERE 
          b2.state = 'confirmed'
          AND b2.user_id = b.user_id
          AND b2.project_id = recommendations.id
        )
      GROUP BY 
        b.user_id, recommendations.id
      )
      UNION
      (
      SELECT 
        b.user_id,
        recommendations.id AS project_id,
        0 AS count
      FROM
        backers b
        JOIN projects p ON b.project_id = p.id
        JOIN projects recommendations ON recommendations.category_id = p.category_id
      WHERE
        b.state = 'confirmed'
        AND recommendations.state = 'online'
      ))
      recommendations
      where  
      NOT EXISTS (
        SELECT true
        FROM backers b2
        WHERE 
          b2.state = 'confirmed'
          AND b2.user_id = recommendations.user_id
          AND b2.project_id = recommendations.project_id
        )
        GROUP BY user_id, project_id
        ORDER BY count DESC
    [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20131014201229"]]
  [1m[36m (2.0ms)[0m  [1mCOMMIT[0m
Migrating to RemoveSessionsTable (20131016193346)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (1.0ms)[0m  [1mDROP TABLE "sessions"[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20131016193346"]]
  [1m[36m (2.5ms)[0m  [1mCOMMIT[0m
Migrating to AddHowItWorksHtmlToChannels (20131016214955)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "channels" ADD COLUMN "how_it_works_html" text[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20131016214955"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
Migrating to ChangeVarcharToTextInChannels (20131016231130)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (3.6ms)[0m  [1m
      ALTER TABLE channels ALTER name TYPE text;
      ALTER TABLE channels ALTER description TYPE text;
      ALTER TABLE channels ALTER description SET NOT NULL;
      ALTER TABLE channels ALTER permalink TYPE text;
      ALTER TABLE channels ALTER permalink SET NOT NULL;
      ALTER TABLE channels ALTER twitter TYPE text;
      ALTER TABLE channels ALTER facebook TYPE text;
      ALTER TABLE channels ALTER email TYPE text;
      ALTER TABLE channels ALTER image TYPE text;
      ALTER TABLE channels ALTER website TYPE text;
      ALTER TABLE channels ALTER video_url TYPE text;
    [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20131016231130"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
Migrating to AddReferalLinkIntoProjects (20131018170211)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "projects" ADD COLUMN "referal_link" text[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20131018170211"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
Migrating to AddTermsUrlToChannels (20131020215932)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "channels" ADD COLUMN "terms_url" character varying(255)[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20131020215932"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
Migrating to AddProgressToProjectTotals (20131021190108)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (2.4ms)[0m  [1m     DROP VIEW project_totals;
     CREATE OR REPLACE VIEW project_totals AS
       SELECT
         backers.project_id,
         sum(backers.value) AS pledged,
         (sum(backers.value)/projects.goal)*100 as progress,
         sum(backers.payment_service_fee) AS total_payment_service_fee,
        count(*) AS total_backers
      FROM backers
      JOIN projects ON backers.project_id = projects.id
      WHERE (backers.state in ('confirmed', 'refunded', 'requested_refund'))
      GROUP BY backers.project_id, projects.goal;
[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20131021190108"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
Migrating to AddProjectFinancialsView (20131022154220)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (5.4ms)[0m  [1m
      create or replace view project_financials as
        with catarse_fee_percentage as (
          select
            c.value::numeric as total,
            (1 - c.value::numeric) as complement
          from configurations c
          where c.name = 'catarse_fee'
        ), catarse_base_url as (
          select c.value from configurations c where c.name = 'base_url'
        )

        select
          p.id as project_id,
          p.name as name,
          u.moip_login as moip,
          p.goal as goal,
          pt.pledged as reached,
          pt.total_payment_service_fee as moip_tax,
          cp.total * pt.pledged as catarse_fee,
          pt.pledged * cp.complement as repass_value,
          to_char(p.expires_at, 'dd/mm/yyyy') as expires_at,
          catarse_base_url.value||'/admin/reports/backer_reports.csv?project_id='||p.id as backer_report,
          p.state as state
        from projects p
        join users u on u.id = p.user_id
        join project_totals pt on pt.project_id = p.id
        cross join catarse_fee_percentage cp
        cross join catarse_base_url
    [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20131022154220"]]
  [1m[36m (2.5ms)[0m  [1mCOMMIT[0m
Migrating to AddFunctionCanCancelToBackers (20131023031539)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.6ms)[0m  [1m
      create function can_cancel(backers) returns boolean as $$
        select
          $1.state = 'waiting_confirmation' and
          (
            ((
              select count(1) as total_of_days
              from generate_series($1.created_at::date, current_date, '1 day') day
              WHERE extract(dow from day) not in (0,1)
            )  > 4)
            OR
            (
              lower($1.payment_choice) = lower('DebitoBancario')
              AND
                (
                  select count(1) as total_of_days
                  from generate_series($1.created_at::date, current_date, '1 day') day
                  WHERE extract(dow from day) not in (0,1)
                )  > 1)
          )
      $$ language sql
    [0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20131023031539"]]
  [1m[36m (2.0ms)[0m  [1mCOMMIT[0m
Migrating to AddCanRefundFunctionToBackers (20131023032325)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (1.3ms)[0m  [1m
      create function can_refund(backers) returns boolean as $$
        select
          $1.state IN('confirmed', 'requested_refund', 'refunded') AND
          NOT $1.credits AND
          EXISTS(
            SELECT true
              FROM projects p
              WHERE p.id = $1.project_id and p.state = 'failed'
          )
      $$ language sql
    [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20131023032325"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
Migrating to AddOriginEmailToNotifications (20131107143439)
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36m (3.0ms)[0m  [1mALTER TABLE "notifications" ADD COLUMN "origin_email" text[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20131107143439"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
Migrating to AddOriginNameToNotifications (20131107143512)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "notifications" ADD COLUMN "origin_name" text[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20131107143512"]]
  [1m[36m (1.0ms)[0m  [1mCOMMIT[0m
Migrating to AddTemplateNameToNotifications (20131107143537)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.8ms)[0m  [1mALTER TABLE "notifications" ADD COLUMN "template_name" text[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20131107143537"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
Migrating to AddLocaleToNotifications (20131107143832)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "notifications" ADD COLUMN "locale" text[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20131107143832"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
Migrating to SetNotificationDefaultsAndNotNull (20131107145351)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (2.3ms)[0m  [1m
    UPDATE notifications SET origin_name = (SELECT value FROM configurations c WHERE c.name = 'company_name');
    ALTER TABLE notifications ALTER origin_name SET NOT NULL;
    [0m
  [1m[35m (0.7ms)[0m  
    UPDATE notifications SET origin_email = (SELECT value FROM configurations c WHERE c.name = 'email_contact');
    ALTER TABLE notifications ALTER origin_email SET NOT NULL;
    
  [1m[36m (0.7ms)[0m  [1m
    UPDATE notifications SET template_name = (SELECT name FROM notification_types nt WHERE nt.id = notifications.notification_type_id);
    ALTER TABLE notifications ALTER template_name SET NOT NULL;
    [0m
  [1m[35m (0.6ms)[0m  
    UPDATE notifications SET locale = (SELECT locale FROM users u WHERE u.id = notifications.user_id);
    ALTER TABLE notifications ALTER locale SET NOT NULL;
    
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20131107145351"]]
  [1m[35m (0.8ms)[0m  COMMIT
Migrating to RemoveNotificationTypes (20131107161918)
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35m (1.6ms)[0m  ALTER TABLE "unsubscribes" DROP "notification_type_id"
  [1m[36m (1.5ms)[0m  [1mALTER TABLE "notifications" DROP "notification_type_id"[0m
  [1m[35m (1.1ms)[0m  DROP TABLE "notification_types"
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20131107161918"]]
  [1m[35m (1.1ms)[0m  COMMIT
Migrating to AddReferalLinkOnBackers (20131112113608)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "backers" ADD COLUMN "referal_link" text
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20131112113608"]]
  [1m[35m (0.7ms)[0m  COMMIT
Migrating to AddChannelIdToNotifications (20131113145601)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "notifications" ADD COLUMN "channel_id" integer
  [1m[36m (0.8ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'notifications'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (2.8ms)[0m  CREATE INDEX "fk__notifications_channel_id" ON "notifications" ("channel_id")
  [1m[36m (2.1ms)[0m  [1mALTER TABLE "notifications" ADD CONSTRAINT fk_notifications_channel_id FOREIGN KEY ("channel_id") REFERENCES "channels" ("id")[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20131113145601"]]
  [1m[36m (2.1ms)[0m  [1mCOMMIT[0m
Migrating to AddSentToAnalysisAtToProjects (20131114154112)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "projects" ADD COLUMN "sent_to_analysis_at" timestamp[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20131114154112"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
Migrating to MakeAuthorizationsUniqueOnUserAndOauthProvider (20131127132159)
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36m (2.2ms)[0m  [1mDELETE FROM authorizations WHERE user_id IN (SELECT user_id FROM authorizations GROUP BY user_id HAVING count(*) > 1)[0m
  [1m[35m (2.9ms)[0m  CREATE UNIQUE INDEX "index_authorizations_on_oauth_provider_id_and_user_id" ON "authorizations" ("oauth_provider_id", "user_id")
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20131127132159"]]
  [1m[35m (0.6ms)[0m  COMMIT
Migrating to AddAuditedUserToProjects (20131128142533)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "projects" ADD COLUMN "audited_user_name" text
  [1m[36m (0.7ms)[0m  [1mALTER TABLE "projects" ADD COLUMN "audited_user_cpf" text[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "projects" ADD COLUMN "audited_user_moip_login" text
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "projects" ADD COLUMN "audited_user_phone_number" text[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20131128142533"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
Migrating to AddIndexesToNotifications (20131230171126)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (3.6ms)[0m  [1mCREATE INDEX "index_notifications_on_user_id_and_template_name" ON "notifications" ("user_id", "template_name")[0m
  [1m[35m (3.1ms)[0m  CREATE INDEX "index_notifications_on_backer_id_and_template_name" ON "notifications" ("backer_id", "template_name")
  [1m[36m (5.5ms)[0m  [1mCREATE INDEX "index_notifications_on_project_id_and_template_name" ON "notifications" ("project_id", "template_name")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20131230171126"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
Migrating to FixPermalinkUniqueIndexToBeCaseInsensitive (20131230172840)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1mDROP INDEX "index_projects_on_permalink"[0m
  [1m[35m (2.7ms)[0m  CREATE UNIQUE INDEX index_projects_on_permalink ON projects (lower(permalink))
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20131230172840"]]
  [1m[35m (0.8ms)[0m  COMMIT
Migrating to CreateChannelPosts (20140102125037)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.7ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'channel_posts'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36m (0.6ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'channel_posts'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (8.8ms)[0m  CREATE TABLE "channel_posts" ("id" serial primary key, "title" text NOT NULL, "body" text NOT NULL, "body_html" text NOT NULL, "channel_id" integer NOT NULL, "user_id" integer NOT NULL, "visible" boolean DEFAULT 'f' NOT NULL, "created_at" timestamp, "updated_at" timestamp, CONSTRAINT fk_channel_posts_channel_id FOREIGN KEY ("channel_id") REFERENCES "channels" ("id"), CONSTRAINT fk_channel_posts_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id")) 
  [1m[36m (2.8ms)[0m  [1mCREATE INDEX "index_channel_posts_on_channel_id" ON "channel_posts" ("channel_id")[0m
  [1m[35m (2.8ms)[0m  CREATE INDEX "index_channel_posts_on_user_id" ON "channel_posts" ("user_id")
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140102125037"]]
  [1m[35m (0.9ms)[0m  COMMIT
Migrating to AddChannelPostOnNotification (20140115110512)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "notifications" ADD COLUMN "channel_post_id" integer
  [1m[36m (1.3ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'notifications'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (3.9ms)[0m  CREATE INDEX "fk__notifications_channel_post_id" ON "notifications" ("channel_post_id")
  [1m[36m (1.4ms)[0m  [1mALTER TABLE "notifications" ADD CONSTRAINT fk_notifications_channel_post_id FOREIGN KEY ("channel_post_id") REFERENCES "channel_posts" ("id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140115110512"]]
  [1m[36m (1.9ms)[0m  [1mCOMMIT[0m
Migrating to AddVideoEmbedUrlIntoChannels (20140117115326)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "channels" ADD COLUMN "video_embed_url" text[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140117115326"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
Migrating to RenameBackerToContribution (20140120195335)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "backers" RENAME TO "contributions"[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "backers_id_seq" RENAME TO "contributions_id_seq"
  [1m[36m (0.3ms)[0m  [1mALTER INDEX "backers_pkey" RENAME TO "contributions_pkey"[0m
  [1m[35m (1.5ms)[0m  
           SELECT distinct i.relname, d.indisunique, d.indkey, pg_get_indexdef(d.indexrelid), t.oid,
                  m.amname, pg_get_expr(d.indpred, t.oid) as conditions, pg_get_expr(d.indexprs, t.oid) as expression,
                  d.indclass
           FROM pg_class t
           INNER JOIN pg_index d ON t.oid = d.indrelid
           INNER JOIN pg_class i ON d.indexrelid = i.oid
           INNER JOIN pg_am m ON i.relam = m.oid
           WHERE i.relkind = 'i'
             AND d.indisprimary = 'f'
             AND t.relname = 'contributions'
             AND i.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
          ORDER BY i.relname

  [1m[36mColumns for index index_backers_on_key on contributions (0.8ms)[0m  [1m              SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16465
[0m
  [1m[35mOp classes for index index_backers_on_key on contributions (0.7ms)[0m                SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (3126)

  [1m[36mColumns for index index_backers_on_project_id on contributions (1.3ms)[0m  [1m              SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16465
[0m
  [1m[35mOp classes for index index_backers_on_project_id on contributions (0.5ms)[0m                SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)

  [1m[36mColumns for index index_backers_on_reward_id on contributions (0.9ms)[0m  [1m              SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16465
[0m
  [1m[35mOp classes for index index_backers_on_reward_id on contributions (0.5ms)[0m                SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)

  [1m[36mColumns for index index_backers_on_user_id on contributions (0.8ms)[0m  [1m              SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16465
[0m
  [1m[35mOp classes for index index_backers_on_user_id on contributions (0.4ms)[0m                SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)

  [1m[36m (0.3ms)[0m  [1mALTER INDEX "index_backers_on_key" RENAME TO "index_contributions_on_key"[0m
  [1m[35m (0.3ms)[0m  ALTER INDEX "index_backers_on_project_id" RENAME TO "index_contributions_on_project_id"
  [1m[36m (0.3ms)[0m  [1mALTER INDEX "index_backers_on_reward_id" RENAME TO "index_contributions_on_reward_id"[0m
  [1m[35m (0.3ms)[0m  ALTER INDEX "index_backers_on_user_id" RENAME TO "index_contributions_on_user_id"
  [1m[36m (1.3ms)[0m  [1m
           SELECT distinct i.relname, d.indisunique, d.indkey, pg_get_indexdef(d.indexrelid), t.oid,
                  m.amname, pg_get_expr(d.indpred, t.oid) as conditions, pg_get_expr(d.indexprs, t.oid) as expression,
                  d.indclass
           FROM pg_class t
           INNER JOIN pg_index d ON t.oid = d.indrelid
           INNER JOIN pg_class i ON d.indexrelid = i.oid
           INNER JOIN pg_am m ON i.relam = m.oid
           WHERE i.relkind = 'i'
             AND d.indisprimary = 'f'
             AND t.relname = 'contributions'
             AND i.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
          ORDER BY i.relname
[0m
  [1m[35mColumns for index index_contributions_on_key on contributions (0.6ms)[0m                SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16465

  [1m[36mOp classes for index index_contributions_on_key on contributions (0.3ms)[0m  [1m              SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (3126)
[0m
  [1m[35mColumns for index index_contributions_on_project_id on contributions (0.6ms)[0m                SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16465

  [1m[36mOp classes for index index_contributions_on_project_id on contributions (0.3ms)[0m  [1m              SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)
[0m
  [1m[35mColumns for index index_contributions_on_reward_id on contributions (0.6ms)[0m                SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16465

  [1m[36mOp classes for index index_contributions_on_reward_id on contributions (0.3ms)[0m  [1m              SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)
[0m
  [1m[35mColumns for index index_contributions_on_user_id on contributions (0.6ms)[0m                SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16465

  [1m[36mOp classes for index index_contributions_on_user_id on contributions (0.3ms)[0m  [1m              SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)
[0m
  [1m[35m (0.7ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'contributions'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36m (1.4ms)[0m  [1m
           SELECT distinct i.relname, d.indisunique, d.indkey, pg_get_indexdef(d.indexrelid), t.oid,
                  m.amname, pg_get_expr(d.indpred, t.oid) as conditions, pg_get_expr(d.indexprs, t.oid) as expression,
                  d.indclass
           FROM pg_class t
           INNER JOIN pg_index d ON t.oid = d.indrelid
           INNER JOIN pg_class i ON d.indexrelid = i.oid
           INNER JOIN pg_am m ON i.relam = m.oid
           WHERE i.relkind = 'i'
             AND d.indisprimary = 'f'
             AND t.relname = 'contributions'
             AND i.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
          ORDER BY i.relname
[0m
  [1m[35mColumns for index index_contributions_on_key on contributions (0.6ms)[0m                SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16465

  [1m[36mOp classes for index index_contributions_on_key on contributions (0.3ms)[0m  [1m              SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (3126)
[0m
  [1m[35mColumns for index index_contributions_on_project_id on contributions (0.6ms)[0m                SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16465

  [1m[36mOp classes for index index_contributions_on_project_id on contributions (0.3ms)[0m  [1m              SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)
[0m
  [1m[35mColumns for index index_contributions_on_reward_id on contributions (0.6ms)[0m                SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16465

  [1m[36mOp classes for index index_contributions_on_reward_id on contributions (0.3ms)[0m  [1m              SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)
[0m
  [1m[35mColumns for index index_contributions_on_user_id on contributions (1.1ms)[0m                SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16465

  [1m[36mOp classes for index index_contributions_on_user_id on contributions (0.5ms)[0m  [1m              SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)
[0m
  [1m[35m (1.5ms)[0m  ALTER TABLE "contributions" DROP CONSTRAINT backers_project_id_reference
  [1m[36m (3.7ms)[0m  [1mALTER TABLE "contributions" ADD CONSTRAINT contributions_project_id_reference FOREIGN KEY ("project_id") REFERENCES "projects" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION[0m
  [1m[35m (1.5ms)[0m  
           SELECT distinct i.relname, d.indisunique, d.indkey, pg_get_indexdef(d.indexrelid), t.oid,
                  m.amname, pg_get_expr(d.indpred, t.oid) as conditions, pg_get_expr(d.indexprs, t.oid) as expression,
                  d.indclass
           FROM pg_class t
           INNER JOIN pg_index d ON t.oid = d.indrelid
           INNER JOIN pg_class i ON d.indexrelid = i.oid
           INNER JOIN pg_am m ON i.relam = m.oid
           WHERE i.relkind = 'i'
             AND d.indisprimary = 'f'
             AND t.relname = 'contributions'
             AND i.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
          ORDER BY i.relname

  [1m[36mColumns for index index_contributions_on_key on contributions (0.6ms)[0m  [1m              SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16465
[0m
  [1m[35mOp classes for index index_contributions_on_key on contributions (0.3ms)[0m                SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (3126)

  [1m[36mColumns for index index_contributions_on_project_id on contributions (0.7ms)[0m  [1m              SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16465
[0m
  [1m[35mOp classes for index index_contributions_on_project_id on contributions (0.3ms)[0m                SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)

  [1m[36mColumns for index index_contributions_on_reward_id on contributions (0.6ms)[0m  [1m              SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16465
[0m
  [1m[35mOp classes for index index_contributions_on_reward_id on contributions (0.3ms)[0m                SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)

  [1m[36mColumns for index index_contributions_on_user_id on contributions (0.6ms)[0m  [1m              SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16465
[0m
  [1m[35mOp classes for index index_contributions_on_user_id on contributions (0.3ms)[0m                SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)

  [1m[36m (0.6ms)[0m  [1mALTER TABLE "contributions" DROP CONSTRAINT backers_reward_id_reference[0m
  [1m[35m (1.1ms)[0m  ALTER TABLE "contributions" ADD CONSTRAINT contributions_reward_id_reference FOREIGN KEY ("reward_id") REFERENCES "rewards" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION
  [1m[36m (1.3ms)[0m  [1m
           SELECT distinct i.relname, d.indisunique, d.indkey, pg_get_indexdef(d.indexrelid), t.oid,
                  m.amname, pg_get_expr(d.indpred, t.oid) as conditions, pg_get_expr(d.indexprs, t.oid) as expression,
                  d.indclass
           FROM pg_class t
           INNER JOIN pg_index d ON t.oid = d.indrelid
           INNER JOIN pg_class i ON d.indexrelid = i.oid
           INNER JOIN pg_am m ON i.relam = m.oid
           WHERE i.relkind = 'i'
             AND d.indisprimary = 'f'
             AND t.relname = 'contributions'
             AND i.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
          ORDER BY i.relname
[0m
  [1m[35mColumns for index index_contributions_on_key on contributions (0.6ms)[0m                SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16465

  [1m[36mOp classes for index index_contributions_on_key on contributions (0.3ms)[0m  [1m              SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (3126)
[0m
  [1m[35mColumns for index index_contributions_on_project_id on contributions (0.6ms)[0m                SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16465

  [1m[36mOp classes for index index_contributions_on_project_id on contributions (0.3ms)[0m  [1m              SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)
[0m
  [1m[35mColumns for index index_contributions_on_reward_id on contributions (0.6ms)[0m                SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16465

  [1m[36mOp classes for index index_contributions_on_reward_id on contributions (0.3ms)[0m  [1m              SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)
[0m
  [1m[35mColumns for index index_contributions_on_user_id on contributions (0.6ms)[0m                SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16465

  [1m[36mOp classes for index index_contributions_on_user_id on contributions (0.3ms)[0m  [1m              SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)
[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "contributions" DROP CONSTRAINT backers_user_id_reference
  [1m[36m (1.2ms)[0m  [1mALTER TABLE "contributions" ADD CONSTRAINT contributions_user_id_reference FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140120195335"]]
  [1m[36m (1.9ms)[0m  [1mCOMMIT[0m
Migrating to RenameBackerAssociations (20140120201216)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.3ms)[0m  [1mALTER TABLE "notifications" RENAME COLUMN "backer_id" TO "contribution_id"[0m
  [1m[35m (2.0ms)[0m  
           SELECT distinct i.relname, d.indisunique, d.indkey, pg_get_indexdef(d.indexrelid), t.oid,
                  m.amname, pg_get_expr(d.indpred, t.oid) as conditions, pg_get_expr(d.indexprs, t.oid) as expression,
                  d.indclass
           FROM pg_class t
           INNER JOIN pg_index d ON t.oid = d.indrelid
           INNER JOIN pg_class i ON d.indexrelid = i.oid
           INNER JOIN pg_am m ON i.relam = m.oid
           WHERE i.relkind = 'i'
             AND d.indisprimary = 'f'
             AND t.relname = 'notifications'
             AND i.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
          ORDER BY i.relname

  [1m[36mColumns for index fk__notifications_channel_id on notifications (0.7ms)[0m  [1m              SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16582
[0m
  [1m[35mOp classes for index fk__notifications_channel_id on notifications (0.3ms)[0m                SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)

  [1m[36mColumns for index fk__notifications_channel_post_id on notifications (0.6ms)[0m  [1m              SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16582
[0m
  [1m[35mOp classes for index fk__notifications_channel_post_id on notifications (0.4ms)[0m                SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)

  [1m[36mColumns for index index_notifications_on_backer_id_and_template_name on notifications (0.6ms)[0m  [1m              SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16582
[0m
  [1m[35mOp classes for index index_notifications_on_backer_id_and_template_name on notifications (0.3ms)[0m                SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978,3126)

  [1m[36mColumns for index index_notifications_on_project_id_and_template_name on notifications (0.5ms)[0m  [1m              SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16582
[0m
  [1m[35mOp classes for index index_notifications_on_project_id_and_template_name on notifications (0.3ms)[0m                SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978,3126)

  [1m[36mColumns for index index_notifications_on_update_id on notifications (0.7ms)[0m  [1m              SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16582
[0m
  [1m[35mOp classes for index index_notifications_on_update_id on notifications (0.3ms)[0m                SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)

  [1m[36mColumns for index index_notifications_on_user_id_and_template_name on notifications (0.6ms)[0m  [1m              SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16582
[0m
  [1m[35mOp classes for index index_notifications_on_user_id_and_template_name on notifications (0.3ms)[0m                SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978,3126)

  [1m[36m (0.3ms)[0m  [1mALTER INDEX "index_notifications_on_backer_id_and_template_name" RENAME TO "index_notifications_on_contribution_id_and_template_name"[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "payment_notifications" RENAME COLUMN "backer_id" TO "contribution_id"
  [1m[36m (1.1ms)[0m  [1m
           SELECT distinct i.relname, d.indisunique, d.indkey, pg_get_indexdef(d.indexrelid), t.oid,
                  m.amname, pg_get_expr(d.indpred, t.oid) as conditions, pg_get_expr(d.indexprs, t.oid) as expression,
                  d.indclass
           FROM pg_class t
           INNER JOIN pg_index d ON t.oid = d.indrelid
           INNER JOIN pg_class i ON d.indexrelid = i.oid
           INNER JOIN pg_am m ON i.relam = m.oid
           WHERE i.relkind = 'i'
             AND d.indisprimary = 'f'
             AND t.relname = 'payment_notifications'
             AND i.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
          ORDER BY i.relname
[0m
  [1m[35mColumns for index index_payment_notifications_on_backer_id on payment_notifications (0.6ms)[0m                SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16607

  [1m[36mOp classes for index index_payment_notifications_on_backer_id on payment_notifications (0.3ms)[0m  [1m              SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)
[0m
  [1m[35m (0.3ms)[0m  ALTER INDEX "index_payment_notifications_on_backer_id" RENAME TO "index_payment_notifications_on_contribution_id"
  [1m[36m (1.3ms)[0m  [1mALTER TABLE "rewards" RENAME COLUMN "maximum_backers" TO "maximum_contributions"[0m
  [1m[35m (1.4ms)[0m  
           SELECT distinct i.relname, d.indisunique, d.indkey, pg_get_indexdef(d.indexrelid), t.oid,
                  m.amname, pg_get_expr(d.indpred, t.oid) as conditions, pg_get_expr(d.indexprs, t.oid) as expression,
                  d.indclass
           FROM pg_class t
           INNER JOIN pg_index d ON t.oid = d.indrelid
           INNER JOIN pg_class i ON d.indexrelid = i.oid
           INNER JOIN pg_am m ON i.relam = m.oid
           WHERE i.relkind = 'i'
             AND d.indisprimary = 'f'
             AND t.relname = 'rewards'
             AND i.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
          ORDER BY i.relname

  [1m[36mColumns for index index_rewards_on_project_id on rewards (0.7ms)[0m  [1m              SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16679
[0m
  [1m[35mOp classes for index index_rewards_on_project_id on rewards (1.0ms)[0m                SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)

  [1m[36m (0.5ms)[0m  [1mALTER TABLE "projects" RENAME COLUMN "first_backers" TO "first_contributions"[0m
  [1m[35m (1.5ms)[0m  
           SELECT distinct i.relname, d.indisunique, d.indkey, pg_get_indexdef(d.indexrelid), t.oid,
                  m.amname, pg_get_expr(d.indpred, t.oid) as conditions, pg_get_expr(d.indexprs, t.oid) as expression,
                  d.indclass
           FROM pg_class t
           INNER JOIN pg_index d ON t.oid = d.indrelid
           INNER JOIN pg_class i ON d.indexrelid = i.oid
           INNER JOIN pg_am m ON i.relam = m.oid
           WHERE i.relkind = 'i'
             AND d.indisprimary = 'f'
             AND t.relname = 'projects'
             AND i.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
          ORDER BY i.relname

  [1m[36mColumns for index index_projects_on_category_id on projects (1.0ms)[0m  [1m              SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16485
[0m
  [1m[35mOp classes for index index_projects_on_category_id on projects (0.5ms)[0m                SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)

  [1m[36mColumns for index index_projects_on_name on projects (0.4ms)[0m  [1m              SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16485
[0m
  [1m[35mOp classes for index index_projects_on_name on projects (0.3ms)[0m                SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (3126)

  [1m[36mColumns for index index_projects_on_permalink on projects (0.6ms)[0m  [1m              SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16485
[0m
  [1m[35mOp classes for index index_projects_on_permalink on projects (0.5ms)[0m                SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (3126)

  [1m[36mColumns for index index_projects_on_user_id on projects (1.7ms)[0m  [1m              SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16485
[0m
  [1m[35mOp classes for index index_projects_on_user_id on projects (0.4ms)[0m                SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140120201216"]]
  [1m[35m (2.3ms)[0m  COMMIT
Migrating to MigrateProjectTotalsAndProjectFinancialsViewBackerToContribution (20140121114718)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (2.7ms)[0m       DROP VIEW project_financials;
     DROP VIEW project_totals;
     CREATE OR REPLACE VIEW project_totals AS
       SELECT
         contributions.project_id,
         sum(contributions.value) AS pledged,
         (sum(contributions.value)/projects.goal)*100 as progress,
         sum(contributions.payment_service_fee) AS total_payment_service_fee,
        count(*) AS total_contributions
      FROM contributions
      JOIN projects ON contributions.project_id = projects.id
      WHERE (contributions.state in ('confirmed', 'refunded', 'requested_refund'))
      GROUP BY contributions.project_id, projects.goal;

  [1m[36m (3.4ms)[0m  [1m     CREATE OR REPLACE VIEW project_financials AS
        with catarse_fee_percentage as (
          select
            c.value::numeric as total,
            (1 - c.value::numeric) as complement
          from configurations c
          where c.name = 'catarse_fee'
        ), catarse_base_url as (
          select c.value from configurations c where c.name = 'base_url'
        )

        select
          p.id as project_id,
          p.name as name,
          u.moip_login as moip,
          p.goal as goal,
          pt.pledged as reached,
          pt.total_payment_service_fee as moip_tax,
          cp.total * pt.pledged as catarse_fee,
          pt.pledged * cp.complement as repass_value,
          to_char(p.expires_at, 'dd/mm/yyyy') as expires_at,
          catarse_base_url.value||'/admin/reports/contribution_reports.csv?project_id='||p.id as contribution_report,
          p.state as state
        from projects p
        join users u on u.id = p.user_id
        join project_totals pt on pt.project_id = p.id
        cross join catarse_fee_percentage cp
        cross join catarse_base_url;
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140121114718"]]
  [1m[36m (2.1ms)[0m  [1mCOMMIT[0m
Migrating to MigrateStatisticsViewToContributions (20140121124230)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (2.3ms)[0m  [1m       DROP VIEW statistics;
       CREATE OR REPLACE VIEW statistics AS
       SELECT ( SELECT count(*) AS count
               FROM users) AS total_users,
        contributions_totals.total_contributions, contributions_totals.total_contributors,
        contributions_totals.total_contributed, projects_totals.total_projects,
        projects_totals.total_projects_success,
        projects_totals.total_projects_online
       FROM ( SELECT count(*) AS total_contributions,
                count(DISTINCT contributions.user_id) AS total_contributors,
                sum(contributions.value) AS total_contributed
               FROM contributions
              WHERE contributions.state::text <> ALL (ARRAY['waiting_confirmation'::character varying::text, 'pending'::character varying::text, 'canceled'::character varying::text, 'deleted'])) contributions_totals,
        ( SELECT count(*) AS total_projects,
                count(
                    CASE
                        WHEN projects.state::text = 'successful'::text THEN 1
                        ELSE NULL::integer
                    END) AS total_projects_success,
                count(
                    CASE
                        WHEN projects.state::text = 'online'::text THEN 1
                        ELSE NULL::integer
                    END) AS total_projects_online
               FROM projects
              WHERE projects.state::text <> ALL (ARRAY['draft'::character varying::text, 'rejected'::character varying::text])) projects_totals;
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140121124230"]]
  [1m[36m (2.3ms)[0m  [1mCOMMIT[0m
Migrating to RenameBackerReportsToContributionReports (20140121124646)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.8ms)[0m  [1mALTER VIEW backer_reports RENAME TO contribution_reports[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140121124646"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
Migrating to RenameBackerReportsForProjectOwnersToContributionReportsForProjectOwners (20140121124840)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.8ms)[0m  [1mALTER VIEW backer_reports_for_project_owners RENAME TO contribution_reports_for_project_owners[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140121124840"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
Migrating to RenameBackersByPeriodsToContributionsByPeriods (20140121125256)
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36m (1.9ms)[0m  [1mALTER VIEW backers_by_periods RENAME TO contributions_by_periods[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140121125256"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
Migrating to MigrateNotificationsTemplateNameToContribution (20140121130341)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.7ms)[0m  [1mUPDATE notifications SET template_name = CASE template_name WHEN 'backer_confirmed_after_project_was_closed' THEN 'contribution_confirmed_after_project_was_closed' WHEN 'backer_project_successful' THEN 'contribution_project_successful' WHEN 'backer_project_unsuccessful' THEN 'contribution_project_unsuccessful' WHEN 'confirm_backer' THEN 'confirm_contribution' WHEN 'pending_backer_project_unsuccessful' THEN 'pending_contribution_project_unsuccessful' WHEN 'project_owner_backer_confirmed' THEN 'project_owner_contribution_confirmed' WHEN 'backer_canceled_after_confirmed' THEN 'contribution_canceled_after_confirmed' END WHERE template_name IN ('backer_confirmed_after_project_was_closed','backer_project_successful','backer_project_unsuccessful','confirm_backer','pending_backer_project_unsuccessful','project_owner_backer_confirmed','backer_canceled_after_confirmed')[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140121130341"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
Migrating to MigrateUserTotalViewToContributions (20140121171044)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (2.5ms)[0m  [1m      DROP VIEW user_totals;
      CREATE OR REPLACE VIEW user_totals AS
      SELECT
        b.user_id as id,
        b.user_id,
        count(DISTINCT(b.project_id)) as total_contributed_projects,
        sum(b.value) AS sum,
        count(*) AS count,
        sum(CASE
          -- I've contributed a successful (or unfinished) project with money
          WHEN (p.state <> 'failed') AND NOT b.credits THEN 0

          -- I've contributed a failed project with credits
          WHEN p.state = 'failed' AND b.credits THEN 0

          -- I've contributed a failed project with money and asked for refund xor I've contributed a failed project with credits
          WHEN p.state = 'failed' AND ((b.state IN('requested_refund', 'refunded') AND NOT b.credits) OR (b.credits AND NOT b.state IN('requested_refund', 'refunded') )) THEN 0

          -- I've contributed a failed project with money and did not ask for refund
          WHEN p.state = 'failed' AND NOT b.credits AND b.state = 'confirmed' THEN b.value

          -- I've contributed a successful project with credits
          ELSE b.value * (-1)::numeric
        END) AS credits
      FROM
        contributions b
        JOIN projects p ON (b.project_id = p.id)
      WHERE b.state in ('confirmed', 'requested_refund', 'refunded')
      GROUP BY b.user_id;
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140121171044"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
Migrating to AddedPublishedAtIntoPosts (20140207160934)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.6ms)[0m  [1mALTER TABLE "channel_posts" ADD COLUMN "published_at" timestamp[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140207160934"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
Migrating to ChangeToContributionIntoContributionReportsForProjectOwners (20140210233516)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.9ms)[0m  [1mDROP VIEW "contribution_reports_for_project_owners"[0m
  [1m[35m (2.8ms)[0m        CREATE OR REPLACE VIEW contribution_reports_for_project_owners AS
      SELECT
        b.project_id,
        coalesce(r.id, 0) as reward_id,
        r.description as reward_description,
        b.confirmed_at::date,
        b.value as contribution_value,
        (b.value* (SELECT value::numeric FROM configurations WHERE name = 'catarse_fee') ) as service_fee,
        u.email as user_email,
        u.name as user_name,
        b.payer_email as payer_email,
        b.payment_method,
        b.anonymous,
        coalesce(b.address_street, u.address_street) as street,
        coalesce(b.address_complement, u.address_complement) as complement,
        coalesce(b.address_number, u.address_number) as address_number,
        coalesce(b.address_neighbourhood, u.address_neighbourhood) as neighbourhood,
        coalesce(b.address_city, u.address_city) as city,
        coalesce(b.address_state, u.address_state) as state,
        coalesce(b.address_zip_code, u.address_zip_code) as zip_code
      FROM
        contributions b
      JOIN users u ON u.id = b.user_id
      LEFT JOIN rewards r ON r.id = b.reward_id
      WHERE
        b.state = 'confirmed';

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140210233516"]]
  [1m[35m (2.3ms)[0m  COMMIT
Migrating to AddSentToDraftAtToProjects (20140219192513)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "projects" ADD COLUMN "sent_to_draft_at" timestamp
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140219192513"]]
  [1m[35m (2.0ms)[0m  COMMIT
Migrating to AddRejectedAtToProjects (20140219192658)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "projects" ADD COLUMN "rejected_at" timestamp
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140219192658"]]
  [1m[35m (1.9ms)[0m  COMMIT
Migrating to FixMissingRejectedAt (20140310200601)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.6ms)[0m  
    UPDATE projects SET rejected_at = updated_at WHERE rejected_at IS NULL AND state = 'rejected';
    
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140310200601"]]
  [1m[35m (2.0ms)[0m  COMMIT
Migrating to FixMissingSentToAnalysisAt (20140310201238)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.5ms)[0m  
    UPDATE projects SET sent_to_analysis_at = created_at WHERE sent_to_analysis_at IS NULL AND state <> 'draft';
    
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140310201238"]]
  [1m[35m (2.2ms)[0m  COMMIT
Migrating to CreateProjectsInAnalysisByPeriods (20140319121007)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (2.8ms)[0m  CREATE VIEW "projects_in_analysis_by_periods" AS WITH weeks AS (
  SELECT
    generate_series * 7 AS days
  FROM generate_series(0, 7)
),
current_period AS (
SELECT
  'current_period'::text as series,
  count(*),
  w.days / 7 as week
FROM
  projects p
  RIGHT JOIN weeks w ON p.sent_to_analysis_at::date >= (current_date - w.days - 7) AND p.sent_to_analysis_at < (current_date - w.days)
GROUP BY week
),
previous_period AS (
SELECT
  'previous_period'::text as series,
  count(*),
  w.days / 7 as week
FROM
  projects p
  RIGHT JOIN weeks w ON p.sent_to_analysis_at::date >= (current_date - w.days - 7 - 56) AND p.sent_to_analysis_at < (current_date - w.days - 56)
GROUP BY week
),
last_year AS (
SELECT
  'last_year'::text as series,
  count(*),
  w.days / 7 as week
FROM
  projects p
  RIGHT JOIN weeks w ON p.sent_to_analysis_at::date >= (current_date - w.days - 7 - 365) AND p.sent_to_analysis_at < (current_date - w.days - 365)
GROUP BY week
)
(SELECT * FROM current_period)
UNION ALL
(SELECT * FROM previous_period)
UNION ALL
(SELECT * FROM last_year)
ORDER BY series, week;

  [1m[36mSQL (1.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140319121007"]]
  [1m[35m (2.7ms)[0m  COMMIT
Migrating to AddProjectOwnerIdIntoContributionsReportToProjectOwner (20140325150844)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.8ms)[0m  DROP VIEW "contribution_reports_for_project_owners"
  [1m[36m (3.6ms)[0m  [1m      CREATE OR REPLACE VIEW contribution_reports_for_project_owners AS
      SELECT
        b.project_id,
        coalesce(r.id, 0) as reward_id,
        p.user_id as project_owner_id,
        r.description as reward_description,
        b.confirmed_at::date,
        b.value as contribution_value,
        (b.value* (SELECT value::numeric FROM configurations WHERE name = 'catarse_fee') ) as service_fee,
        u.email as user_email,
        u.name as user_name,
        b.payer_email as payer_email,
        b.payment_method,
        b.anonymous,
        coalesce(b.address_street, u.address_street) as street,
        coalesce(b.address_complement, u.address_complement) as complement,
        coalesce(b.address_number, u.address_number) as address_number,
        coalesce(b.address_neighbourhood, u.address_neighbourhood) as neighbourhood,
        coalesce(b.address_city, u.address_city) as city,
        coalesce(b.address_state, u.address_state) as state,
        coalesce(b.address_zip_code, u.address_zip_code) as zip_code
      FROM
        contributions b
      JOIN users u ON u.id = b.user_id
      JOIN projects p ON b.project_id = p.id
      LEFT JOIN rewards r ON r.id = b.reward_id
      WHERE
        b.state = 'confirmed';
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140325150844"]]
  [1m[36m (2.8ms)[0m  [1mCOMMIT[0m
Migrating to AddStateIntoContributionsReportToProjectOwner (20140331204618)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (1.1ms)[0m  [1mDROP VIEW "contribution_reports_for_project_owners"[0m
  [1m[35m (3.6ms)[0m        CREATE OR REPLACE VIEW contribution_reports_for_project_owners AS
      SELECT
        b.project_id,
        coalesce(r.id, 0) as reward_id,
        p.user_id as project_owner_id,
        r.description as reward_description,
        b.confirmed_at::date,
        b.value as contribution_value,
        (b.value* (SELECT value::numeric FROM configurations WHERE name = 'catarse_fee') ) as service_fee,
        u.email as user_email,
        u.name as user_name,
        b.payer_email as payer_email,
        b.payment_method,
        b.anonymous,
        b.state as state,
        coalesce(b.address_street, u.address_street) as street,
        coalesce(b.address_complement, u.address_complement) as complement,
        coalesce(b.address_number, u.address_number) as address_number,
        coalesce(b.address_neighbourhood, u.address_neighbourhood) as neighbourhood,
        coalesce(b.address_city, u.address_city) as city,
        coalesce(b.address_state, u.address_state) as address_state,
        coalesce(b.address_zip_code, u.address_zip_code) as zip_code
      FROM
        contributions b
      JOIN users u ON u.id = b.user_id
      JOIN projects p ON b.project_id = p.id
      LEFT JOIN rewards r ON r.id = b.reward_id
      WHERE
        b.state IN ('confirmed', 'waiting_confirmation');

  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140331204618"]]
  [1m[35m (3.5ms)[0m  COMMIT
Migrating to NewContributionsByPeriods (20140331215022)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (2.9ms)[0m  
    DROP VIEW contributions_by_periods;
    CREATE VIEW contributions_by_periods AS
      WITH weeks AS (
        SELECT 
          to_char(current_year.current_year, 'yyyy-mm W'::text) AS current_year,
          to_char(last_year.last_year, 'yyyy-mm W'::text) AS last_year,
          current_year.current_year AS label   
        FROM 
          generate_series(now() - '49 days'::interval, now(), '7 days'::interval) current_year
          JOIN generate_series(now() - '1 year 49 days'::interval, now() - '1 year'::interval, '7 days'::interval) last_year(last_year) ON to_char(last_year.last_year, 'mm W'::text) = to_char(current_year.current_year, 'mm W'::text)
      ),
      current_year AS (
        SELECT w.label, sum(cc.value) AS current_year
        FROM 
          contributions cc
          JOIN weeks w ON w.current_year = to_char(cc.confirmed_at, 'yyyy-mm W'::text)
        WHERE cc.state::text = 'confirmed'::text 
        GROUP BY w.label
      ),
      last_year AS (
        SELECT w.label, sum(cc.value) AS last_year
        FROM 
          contributions cc
          JOIN weeks w ON w.last_year = to_char(cc.confirmed_at, 'yyyy-mm W'::text)
        WHERE cc.state::text = 'confirmed'::text 
        GROUP BY w.label
      )
      SELECT * FROM current_year JOIN last_year USING(label);
    
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140331215022"]]
  [1m[35m (2.6ms)[0m  COMMIT
Migrating to RecreateProjectsInAnalysisByPeriods (20140401144727)
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35m (2.5ms)[0m  
    DROP VIEW projects_in_analysis_by_periods;
    CREATE VIEW projects_in_analysis_by_periods AS
      WITH weeks AS (
        SELECT 
          to_char(current_year.current_year, 'yyyy-mm W'::text) AS current_year,
          to_char(last_year.last_year, 'yyyy-mm W'::text) AS last_year,
          current_year.current_year AS label   
        FROM 
          generate_series(now() - '49 days'::interval, now(), '7 days'::interval) current_year
          JOIN generate_series(now() - '1 year 49 days'::interval, now() - '1 year'::interval, '7 days'::interval) last_year(last_year) ON to_char(last_year.last_year, 'mm W'::text) = to_char(current_year.current_year, 'mm W'::text)
      ),
      current_year AS (
        SELECT w.label, count(*) AS current_year
        FROM 
          projects p
          JOIN weeks w ON w.current_year = to_char(p.sent_to_analysis_at, 'yyyy-mm W'::text)
        GROUP BY w.label
      ),
      last_year AS (
        SELECT w.label, count(*) AS last_year
        FROM 
          projects p
          JOIN weeks w ON w.last_year = to_char(p.sent_to_analysis_at, 'yyyy-mm W'::text)
        GROUP BY w.label
      )
      SELECT * FROM current_year JOIN last_year USING(label);
    
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140401144727"]]
  [1m[35m (2.7ms)[0m  COMMIT
Migrating to RemoveProjectsByPeriod (20140401145136)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.8ms)[0m  
    DROP VIEW projects_by_periods;
    
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140401145136"]]
  [1m[35m (0.6ms)[0m  COMMIT
Migrating to RenameConfigurationsToSettings (20140410175400)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  
    ALTER TABLE configurations RENAME TO settings;
    
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140410175400"]]
  [1m[35m (0.9ms)[0m  COMMIT
Migrating to RecreateExpiresAt (20140410184603)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.6ms)[0m  
    CREATE OR REPLACE FUNCTION expires_at(projects) RETURNS timestamptz AS $$
     SELECT ((((($1.online_date AT TIME ZONE coalesce((SELECT value FROM settings WHERE name = 'timezone'), 'America/Sao_Paulo') + ($1.online_days || ' days')::interval)  )::date::text || ' 23:59:59')::timestamp AT TIME ZONE coalesce((SELECT value FROM settings WHERE name = 'timezone'), 'America/Sao_Paulo'))::timestamptz )               
    $$ LANGUAGE SQL;
    
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140410184603"]]
  [1m[35m (0.6ms)[0m  COMMIT
Migrating to RenameSecureReviewHostToSecureHost (20140414164640)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.6ms)[0m  
    INSERT INTO settings (name, value, created_at, updated_at) SELECT 'secure_host', value, now(), now() FROM settings WHERE name = 'secure_review_host';
    DELETE FROM settings WHERE name = 'secure_review_host';
    
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140414164640"]]
  [1m[35m (0.6ms)[0m  COMMIT
Migrating to UnifyUsers (20140424171245)
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mUser Load (1.0ms)[0m  SELECT users.*, (SELECT string_agg(id::text, ',') FROM users u WHERE u.id <> users.id AND u.email = users.email) AS doppelgangers FROM "users"  WHERE (id IN (SELECT min(id) FROM users WHERE trim(email) <> '' GROUP BY email HAVING count(*) > 1))
  [1m[36m (0.5ms)[0m  [1mUPDATE users SET email = NULL WHERE trim(email) = ''[0m
  [1m[35m (0.3ms)[0m  DROP INDEX "index_users_on_email"
  [1m[36m (3.1ms)[0m  [1mCREATE UNIQUE INDEX "index_users_on_email" ON "users" ("email")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140424171245"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
Migrating to CreateChannelPartners (20140502192210)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.8ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'channel_partners'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (7.1ms)[0m  CREATE TABLE "channel_partners" ("id" serial primary key, "name" text NOT NULL, "url" text NOT NULL, "image" text NOT NULL, "channel_id" integer NOT NULL, "created_at" timestamp, "updated_at" timestamp, CONSTRAINT fk_channel_partners_channel_id FOREIGN KEY ("channel_id") REFERENCES "channels" ("id")) 
  [1m[36m (2.7ms)[0m  [1mCREATE INDEX "fk__channel_partners_channel_id" ON "channel_partners" ("channel_id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140502192210"]]
  [1m[36m (2.1ms)[0m  [1mCOMMIT[0m
Migrating to AddTimezoneToCanCancel (20140506011533)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1m
CREATE OR REPLACE FUNCTION public.can_cancel(contributions)
 RETURNS boolean
 LANGUAGE sql
AS $function$
        select
          $1.state = 'waiting_confirmation' and
          (
            ((
              select count(1) as total_of_days
              from generate_series($1.created_at::date, (current_timestamp AT TIME ZONE coalesce((SELECT value FROM settings WHERE name = 'timezone'), 'America/Sao_Paulo'))::date, '1 day') day
              WHERE extract(dow from day) not in (0,1)
            )  > 4)
            OR
            (
              lower($1.payment_choice) = lower('DebitoBancario')
              AND
                (
                  select count(1) as total_of_days
                  from generate_series($1.created_at::date, (current_timestamp AT TIME ZONE coalesce((SELECT value FROM settings WHERE name = 'timezone'), 'America/Sao_Paulo'))::date, '1 day') day
                  WHERE extract(dow from day) not in (0,1)
                )  > 1)
          )
      $function$
      [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140506011533"]]
  [1m[36m (2.2ms)[0m  [1mCOMMIT[0m
Migrating to DropNameColumnFromChannelPartners (20140506152503)
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36m (0.6ms)[0m  [1mALTER TABLE "channel_partners" DROP "name"[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140506152503"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
Migrating to AddInactivatedAtToUsers (20140514125258)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "users" ADD COLUMN "deactivated_at" timestamp[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140514125258"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
Migrating to AdjustContributionReportToOwnerWithCorrectUserAddress (20140523163153)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (1.0ms)[0m  [1mDROP VIEW "contribution_reports_for_project_owners"[0m
  [1m[35m (3.6ms)[0m        CREATE OR REPLACE VIEW contribution_reports_for_project_owners AS
      SELECT
        b.project_id,
        coalesce(r.id, 0) as reward_id,
        p.user_id as project_owner_id,
        r.description as reward_description,
        b.confirmed_at::date,
        b.value as contribution_value,
        (b.value* (SELECT value::numeric FROM settings WHERE name = 'catarse_fee') ) as service_fee,
        u.email as user_email,
        u.name as user_name,
        b.payer_email as payer_email,
        b.payment_method,
        b.anonymous,
        b.state as state,
        coalesce(u.address_street, b.address_street) as street,
        coalesce(u.address_complement, b.address_complement) as complement,
        coalesce(u.address_number, b.address_number) as address_number,
        coalesce(u.address_neighbourhood, b.address_neighbourhood) as neighbourhood,
        coalesce(u.address_city, b.address_city) as city,
        coalesce(u.address_state, b.address_state) as address_state,
        coalesce(u.address_zip_code, b.address_zip_code) as zip_code
      FROM
        contributions b
      JOIN users u ON u.id = b.user_id
      JOIN projects p ON b.project_id = p.id
      LEFT JOIN rewards r ON r.id = b.reward_id
      WHERE
        b.state IN ('confirmed', 'waiting_confirmation');

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140523163153"]]
  [1m[35m (2.1ms)[0m  COMMIT
Migrating to AddLastChangesOnRewards (20140527162918)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "rewards" ADD COLUMN "last_changes" text
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140527162918"]]
  [1m[35m (0.7ms)[0m  COMMIT
Migrating to RemoveVersionsTable (20140527164648)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.3ms)[0m  DROP INDEX "index_versions_on_item_type_and_item_id"
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "rewards" DROP "reindex_versions"[0m
  [1m[35m (1.3ms)[0m  DROP TABLE "versions"
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140527164648"]]
  [1m[35m (1.9ms)[0m  COMMIT
Migrating to FixVideEmbedUrls (20140605174230)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.5ms)[0m  
    UPDATE projects SET video_embed_url = regexp_replace(video_embed_url, '^(\w)', '//\1');
    
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140605174230"]]
  [1m[35m (0.5ms)[0m  COMMIT
Migrating to AddReactivateTokenToUsers (20140624154532)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "users" ADD COLUMN "reactivate_token" text
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140624154532"]]
  [1m[35m (0.5ms)[0m  COMMIT
Migrating to RemoveNicknameFromUsers (20140627210356)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "users" DROP "nickname"
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140627210356"]]
  [1m[35m (2.3ms)[0m  COMMIT
Migrating to ChangeOwnerReport (20140627210828)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (1.0ms)[0m  DROP VIEW "contribution_reports_for_project_owners"
  [1m[36m (3.8ms)[0m  [1m      CREATE OR REPLACE VIEW contribution_reports_for_project_owners AS
      SELECT
        b.project_id,
        coalesce(r.id, 0) as reward_id,
        p.user_id as project_owner_id,
        r.description as reward_description,
        b.confirmed_at::date,
        b.value as contribution_value,
        (b.value* (SELECT value::numeric FROM settings WHERE name = 'catarse_fee') ) as service_fee,
        u.email as user_email,
        coalesce(u.full_name, u.name) as user_name,
        b.payer_email as payer_email,
        b.payment_method,
        b.anonymous,
        b.state as state,
        coalesce(u.address_street, b.address_street) as street,
        coalesce(u.address_complement, b.address_complement) as complement,
        coalesce(u.address_number, b.address_number) as address_number,
        coalesce(u.address_neighbourhood, b.address_neighbourhood) as neighbourhood,
        coalesce(u.address_city, b.address_city) as city,
        coalesce(u.address_state, b.address_state) as address_state,
        coalesce(u.address_zip_code, b.address_zip_code) as zip_code
      FROM
        contributions b
      JOIN users u ON u.id = b.user_id
      JOIN projects p ON b.project_id = p.id
      LEFT JOIN rewards r ON r.id = b.reward_id
      WHERE
        b.state IN ('confirmed', 'waiting_confirmation');
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140627210828"]]
  [1m[36m (2.2ms)[0m  [1mCOMMIT[0m
Migrating to CreateUserNotifications (20140703172107)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.7ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'user_notifications'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (7.8ms)[0m  CREATE TABLE "user_notifications" ("id" serial primary key, "user_id" integer NOT NULL, "from_email" text NOT NULL, "from_name" text NOT NULL, "template_name" text NOT NULL, "locale" text NOT NULL, "sent_at" timestamp, "created_at" timestamp, "updated_at" timestamp, CONSTRAINT fk_user_notifications_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id")) 
  [1m[36m (3.2ms)[0m  [1mCREATE INDEX "fk__user_notifications_user_id" ON "user_notifications" ("user_id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140703172107"]]
  [1m[36m (2.2ms)[0m  [1mCOMMIT[0m
Migrating to CreateContributionNotifications (20140709163624)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.7ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'contribution_notifications'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (0.5ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'contribution_notifications'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36m (8.0ms)[0m  [1mCREATE TABLE "contribution_notifications" ("id" serial primary key, "user_id" integer NOT NULL, "contribution_id" integer NOT NULL, "from_email" text NOT NULL, "from_name" text NOT NULL, "template_name" text NOT NULL, "locale" text NOT NULL, "sent_at" timestamp, "created_at" timestamp, "updated_at" timestamp, CONSTRAINT fk_contribution_notifications_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id"), CONSTRAINT fk_contribution_notifications_contribution_id FOREIGN KEY ("contribution_id") REFERENCES "contributions" ("id")) [0m
  [1m[35m (2.8ms)[0m  CREATE INDEX "fk__contribution_notifications_user_id" ON "contribution_notifications" ("user_id")
  [1m[36m (3.0ms)[0m  [1mCREATE INDEX "fk__contribution_notifications_contribution_id" ON "contribution_notifications" ("contribution_id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140709163624"]]
  [1m[36m (2.1ms)[0m  [1mCOMMIT[0m
Migrating to RenameUpdatesToProjectPosts (20140710202411)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.8ms)[0m  [1m    ALTER TABLE "updates" RENAME TO project_posts;
    ALTER TABLE notifications RENAME update_id TO project_post_id;
[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140710202411"]]
  [1m[36m (1.7ms)[0m  [1mCOMMIT[0m
Migrating to CreateProjectPostNotifications (20140711170405)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.7ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'project_post_notifications'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (0.6ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'project_post_notifications'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36m (7.9ms)[0m  [1mCREATE TABLE "project_post_notifications" ("id" serial primary key, "user_id" integer NOT NULL, "project_post_id" integer NOT NULL, "from_email" text NOT NULL, "from_name" text NOT NULL, "template_name" text NOT NULL, "locale" text NOT NULL, "sent_at" timestamp, "created_at" timestamp, "updated_at" timestamp, CONSTRAINT fk_project_post_notifications_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id"), CONSTRAINT fk_project_post_notifications_project_post_id FOREIGN KEY ("project_post_id") REFERENCES "project_posts" ("id")) [0m
  [1m[35m (3.1ms)[0m  CREATE INDEX "fk__project_post_notifications_user_id" ON "project_post_notifications" ("user_id")
  [1m[36m (2.7ms)[0m  [1mCREATE INDEX "fk__project_post_notifications_project_post_id" ON "project_post_notifications" ("project_post_id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140711170405"]]
  [1m[36m (2.2ms)[0m  [1mCOMMIT[0m
Migrating to CreateChannelPostNotifications (20140711193130)
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36m (0.8ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'channel_post_notifications'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (0.9ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'channel_post_notifications'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36m (7.5ms)[0m  [1mCREATE TABLE "channel_post_notifications" ("id" serial primary key, "user_id" integer NOT NULL, "channel_post_id" integer NOT NULL, "from_email" text NOT NULL, "from_name" text NOT NULL, "template_name" text NOT NULL, "locale" text NOT NULL, "sent_at" timestamp, "created_at" timestamp, "updated_at" timestamp, CONSTRAINT fk_channel_post_notifications_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id"), CONSTRAINT fk_channel_post_notifications_channel_post_id FOREIGN KEY ("channel_post_id") REFERENCES "channel_posts" ("id")) [0m
  [1m[35m (4.0ms)[0m  CREATE INDEX "fk__channel_post_notifications_user_id" ON "channel_post_notifications" ("user_id")
  [1m[36m (2.8ms)[0m  [1mCREATE INDEX "fk__channel_post_notifications_channel_post_id" ON "channel_post_notifications" ("channel_post_id")[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140711193130"]]
  [1m[36m (2.5ms)[0m  [1mCOMMIT[0m
Migrating to CreateProjectNotifications (20140711195616)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.7ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'project_notifications'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (0.6ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'project_notifications'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36m (8.7ms)[0m  [1mCREATE TABLE "project_notifications" ("id" serial primary key, "user_id" integer NOT NULL, "project_id" integer NOT NULL, "from_email" text NOT NULL, "from_name" text NOT NULL, "template_name" text NOT NULL, "locale" text NOT NULL, "sent_at" timestamp, "created_at" timestamp, "updated_at" timestamp, CONSTRAINT fk_project_notifications_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id"), CONSTRAINT fk_project_notifications_project_id FOREIGN KEY ("project_id") REFERENCES "projects" ("id")) [0m
  [1m[35m (2.6ms)[0m  CREATE INDEX "fk__project_notifications_user_id" ON "project_notifications" ("user_id")
  [1m[36m (2.8ms)[0m  [1mCREATE INDEX "fk__project_notifications_project_id" ON "project_notifications" ("project_id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140711195616"]]
  [1m[36m (1.8ms)[0m  [1mCOMMIT[0m
Migrating to MigrateNotificationsToProjectPostNotifications (20140711211348)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.9ms)[0m  [1m
    INSERT INTO project_post_notifications
    (user_id, project_post_id, from_email, from_name, template_name, locale, sent_at, created_at, updated_at)
    SELECT
      user_id, project_post_id, origin_email, origin_name, 'posts', locale, updated_at, created_at, updated_at
    FROM
      notifications
    WHERE
      template_name IN ('updates') AND project_post_id IS NOT NULL;
    [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140711211348"]]
  [1m[36m (2.2ms)[0m  [1mCOMMIT[0m
Migrating to MigrateNotificationsToChannelPostNotifications (20140711212158)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.8ms)[0m  [1m
    INSERT INTO channel_post_notifications
    (user_id, channel_post_id, from_email, from_name, template_name, locale, sent_at, created_at, updated_at)
    SELECT
      user_id, channel_post_id, origin_email, origin_name, template_name, locale, updated_at, created_at, updated_at
    FROM
      notifications
    WHERE
      template_name IN ('channel_post') AND channel_post_id IS NOT NULL;
    [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140711212158"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
Migrating to MigrateNotificationsToContributionNotifications (20140711212618)
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36m (0.7ms)[0m  [1m
    INSERT INTO contribution_notifications
    (user_id, contribution_id, from_email, from_name, template_name, locale, sent_at, created_at, updated_at)
    SELECT
      user_id, contribution_id, origin_email, origin_name, template_name, locale, updated_at, created_at, updated_at
    FROM
      notifications
    WHERE
      template_name IN (
      'payment_slip',
      'refund_completed_slip',
      'refund_completed',
      'invalid_payment',
      'requested_refund_slip',
      'requested_refund',
      'contribution_canceled_slip',
      'contribution_canceled',
      'confirm_contribution',
      'contribution_confirmed_after_project_was_closed',
      'pending_payment',
      'pending_contribution_project_unsuccessful',
      'contribution_project_successful',
      'contribution_project_unsuccessful',
      'processing_payment',
      'slip_payment_canceled'
      ) AND contribution_id IS NOT NULL;
    [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140711212618"]]
  [1m[36m (2.1ms)[0m  [1mCOMMIT[0m
Migrating to MigrateNotificationsToProjectNotifications (20140711214139)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.7ms)[0m  [1m
    INSERT INTO project_notifications
    (user_id, project_id, from_email, from_name, template_name, locale, sent_at, created_at, updated_at)
    SELECT
      user_id, project_id, origin_email, origin_name, template_name, locale, updated_at, created_at, updated_at
    FROM
      notifications
    WHERE
      template_name IN (
      'verify_moip_account',
      'project_received',
      'project_received_channel',
      'new_draft_project',
      'in_analysis_project',
      'in_analysis_project_channel',
      'project_in_waiting_funds',
      'project_success',
      'adm_project_deadline',
      'redbooth_task',
      'project_rejected',
      'project_rejected_channel',
      'project_visible',
      'project_visible_channel',
      'project_unsuccessful',
      'project_success',
      'inactive_draft'
      ) AND project_id IS NOT NULL;
    [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140711214139"]]
  [1m[36m (2.0ms)[0m  [1mCOMMIT[0m
Migrating to MigrateNotificationsToUserNotifications (20140711214945)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1m
    INSERT INTO user_notifications
    (user_id, from_email, from_name, template_name, locale, sent_at, created_at, updated_at)
    SELECT
      user_id, origin_email, origin_name, template_name, locale, updated_at, created_at, updated_at
    FROM
      notifications
    WHERE
      template_name IN (
      'credits_warning',
      'user_deactivate',
      'new_user_registration'
      ) AND user_id IS NOT NULL;
    [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140711214945"]]
  [1m[36m (2.0ms)[0m  [1mCOMMIT[0m
Migrating to DropNotifications (20140711220046)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (2.3ms)[0m  [1mDROP TABLE "notifications"[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140711220046"]]
  [1m[36m (2.5ms)[0m  [1mCOMMIT[0m
Migrating to AddDeliverAtIntoRewards (20140715165543)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "rewards" ADD COLUMN "deliver_at" timestamp[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140715165543"]]
  [1m[36m (2.8ms)[0m  [1mCOMMIT[0m
Migrating to UpdateDeliverAtOnRewards (20140715175737)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.9ms)[0m  [1mUPDATE rewards SET deliver_at = (SELECT p.expires_at FROM projects p WHERE p.id = rewards.project_id)::date + days_to_delivery;[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140715175737"]]
  [1m[36m (2.0ms)[0m  [1mCOMMIT[0m
Migrating to AddTrafficSourcesToProjects (20140722205814)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "projects" ADD COLUMN "traffic_sources" text[][0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140722205814"]]
  [1m[36m (1.8ms)[0m  [1mCOMMIT[0m
Migrating to MigrateHowKnowToTrafficSources (20140722210129)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (1.5ms)[0m  [1m
    UPDATE projects SET traffic_sources = array_append('{}', how_know) WHERE how_know IS NOT NULL;
    [0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140722210129"]]
  [1m[36m (2.1ms)[0m  [1mCOMMIT[0m
Migrating to RemoveHowKnowFromProjects (20140722210820)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (1.2ms)[0m  [1mDROP VIEW projects_for_home[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "projects" DROP "how_know"
  [1m[36m (6.4ms)[0m  [1m    CREATE VIEW projects_for_home AS
    WITH recommended_projects AS (SELECT 'recommended'::text AS origin, recommends.id, recommends.name, recommends.user_id, recommends.category_id, recommends.goal, recommends.about, recommends.headline, recommends.video_url, recommends.short_url, recommends.created_at, recommends.updated_at, recommends.about_html, recommends.recommended, recommends.home_page_comment, recommends.permalink, recommends.video_thumbnail, recommends.state, recommends.online_days, recommends.online_date, recommends.traffic_sources, recommends.more_links, recommends.first_contributions AS first_backers, recommends.uploaded_image, recommends.video_embed_url FROM projects recommends WHERE (recommends.recommended AND ((recommends.state)::text = 'online'::text)) ORDER BY random() LIMIT 3), recents_projects AS (SELECT 'recents'::text AS origin, recents.id, recents.name, recents.user_id, recents.category_id, recents.goal, recents.about, recents.headline, recents.video_url, recents.short_url, recents.created_at, recents.updated_at, recents.about_html, recents.recommended, recents.home_page_comment, recents.permalink, recents.video_thumbnail, recents.state, recents.online_days, recents.online_date, recents.traffic_sources, recents.more_links, recents.first_contributions AS first_backers, recents.uploaded_image, recents.video_embed_url FROM projects recents WHERE ((((recents.state)::text = 'online'::text) AND ((now() - recents.online_date) <= '5 days'::interval)) AND (NOT (recents.id IN (SELECT recommends.id FROM recommended_projects recommends)))) ORDER BY random() LIMIT 3), expiring_projects AS (SELECT 'expiring'::text AS origin, expiring.id, expiring.name, expiring.user_id, expiring.category_id, expiring.goal, expiring.about, expiring.headline, expiring.video_url, expiring.short_url, expiring.created_at, expiring.updated_at, expiring.about_html, expiring.recommended, expiring.home_page_comment, expiring.permalink, expiring.video_thumbnail, expiring.state, expiring.online_days, expiring.online_date, expiring.traffic_sources, expiring.more_links, expiring.first_contributions AS first_backers, expiring.uploaded_image, expiring.video_embed_url FROM projects expiring WHERE ((((expiring.state)::text = 'online'::text) AND (expires_at(expiring.*) <= (now() + '14 days'::interval))) AND (NOT (expiring.id IN (SELECT recommends.id FROM recommended_projects recommends UNION SELECT recents.id FROM recents_projects recents)))) ORDER BY random() LIMIT 3) (SELECT recommended_projects.origin, recommended_projects.id, recommended_projects.name, recommended_projects.user_id, recommended_projects.category_id, recommended_projects.goal, recommended_projects.about, recommended_projects.headline, recommended_projects.video_url, recommended_projects.short_url, recommended_projects.created_at, recommended_projects.updated_at, recommended_projects.about_html, recommended_projects.recommended, recommended_projects.home_page_comment, recommended_projects.permalink, recommended_projects.video_thumbnail, recommended_projects.state, recommended_projects.online_days, recommended_projects.online_date, recommended_projects.traffic_sources, recommended_projects.more_links, recommended_projects.first_backers, recommended_projects.uploaded_image, recommended_projects.video_embed_url FROM recommended_projects UNION SELECT recents_projects.origin, recents_projects.id, recents_projects.name, recents_projects.user_id, recents_projects.category_id, recents_projects.goal, recents_projects.about, recents_projects.headline, recents_projects.video_url, recents_projects.short_url, recents_projects.created_at, recents_projects.updated_at, recents_projects.about_html, recents_projects.recommended, recents_projects.home_page_comment, recents_projects.permalink, recents_projects.video_thumbnail, recents_projects.state, recents_projects.online_days, recents_projects.online_date, recents_projects.traffic_sources, recents_projects.more_links, recents_projects.first_backers, recents_projects.uploaded_image, recents_projects.video_embed_url FROM recents_projects) UNION SELECT expiring_projects.origin, expiring_projects.id, expiring_projects.name, expiring_projects.user_id, expiring_projects.category_id, expiring_projects.goal, expiring_projects.about, expiring_projects.headline, expiring_projects.video_url, expiring_projects.short_url, expiring_projects.created_at, expiring_projects.updated_at, expiring_projects.about_html, expiring_projects.recommended, expiring_projects.home_page_comment, expiring_projects.permalink, expiring_projects.video_thumbnail, expiring_projects.state, expiring_projects.online_days, expiring_projects.online_date, expiring_projects.traffic_sources, expiring_projects.more_links, expiring_projects.first_backers, expiring_projects.uploaded_image, expiring_projects.video_embed_url FROM expiring_projects;
[0m
  [1m[35mSQL (1.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140722210820"]]
  [1m[36m (2.3ms)[0m  [1mCOMMIT[0m
Migrating to RemoveInvalidFromStatistics (20140724165254)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (2.5ms)[0m  [1m       DROP VIEW statistics;
       CREATE OR REPLACE VIEW statistics AS
       SELECT ( SELECT count(*) AS count
               FROM users) AS total_users,
        contributions_totals.total_contributions, contributions_totals.total_contributors,
        contributions_totals.total_contributed, projects_totals.total_projects,
        projects_totals.total_projects_success,
        projects_totals.total_projects_online
       FROM ( SELECT count(*) AS total_contributions,
                count(DISTINCT contributions.user_id) AS total_contributors,
                sum(contributions.value) AS total_contributed
               FROM contributions
              WHERE contributions.state::text <> ALL (ARRAY['waiting_confirmation'::character varying::text, 'invalid_payment'::character varying::text, 'pending'::character varying::text, 'canceled'::character varying::text, 'deleted'])) contributions_totals,
        ( SELECT count(*) AS total_projects,
                count(
                    CASE
                        WHEN projects.state::text = 'successful'::text THEN 1
                        ELSE NULL::integer
                    END) AS total_projects_success,
                count(
                    CASE
                        WHEN projects.state::text = 'online'::text THEN 1
                        ELSE NULL::integer
                    END) AS total_projects_online
               FROM projects
              WHERE projects.state::text <> ALL (ARRAY['draft'::character varying::text, 'rejected'::character varying::text])) projects_totals;
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140724165254"]]
  [1m[36m (1.9ms)[0m  [1mCOMMIT[0m
Migrating to FixProjectFinancialsExpiresAt (20140728133749)
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36m (4.9ms)[0m  [1m     DROP VIEW project_financials;
     CREATE OR REPLACE VIEW project_financials AS
     WITH catarse_fee_percentage AS (
         SELECT c.value::numeric AS total,
            1::numeric - c.value::numeric AS complement
           FROM settings c
          WHERE c.name = 'catarse_fee'::text
        ), catarse_base_url AS (
         SELECT c.value
           FROM settings c
          WHERE c.name = 'base_url'::text
        )
 SELECT p.id AS project_id, p.name, u.moip_login AS moip, p.goal,
    pt.pledged AS reached, pt.total_payment_service_fee AS moip_tax,
    cp.total * pt.pledged AS catarse_fee,
    pt.pledged * cp.complement AS repass_value,
    to_char(expires_at(p.*) AT TIME ZONE coalesce((SELECT value FROM settings WHERE name = 'timezone'), 'America/Sao_Paulo'), 'dd/mm/yyyy'::text) AS expires_at,
    (catarse_base_url.value || '/admin/reports/contribution_reports.csv?project_id='::text) || p.id AS contribution_report,
    p.state
   FROM projects p
   JOIN users u ON u.id = p.user_id
   JOIN project_totals pt ON pt.project_id = p.id
  CROSS JOIN catarse_fee_percentage cp
  CROSS JOIN catarse_base_url;
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140728133749"]]
  [1m[36m (2.2ms)[0m  [1mCOMMIT[0m
Migrating to AddGaCodeIntoChannels (20140729163857)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.7ms)[0m  [1mALTER TABLE "channels" ADD COLUMN "ga_code" text[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140729163857"]]
  [1m[36m (1.8ms)[0m  [1mCOMMIT[0m
Migrating to AddTimeConstraintsToRecommendationsView (20140731163219)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (6.1ms)[0m  [1m
    CREATE OR REPLACE VIEW recommendations AS 
    SELECT 
      recommendations.user_id, 
      recommendations.project_id, 
      sum(recommendations.count)::bigint AS count
    FROM (
      SELECT b.user_id, recommendations.id AS project_id, count(DISTINCT recommenders.user_id) AS count
      FROM 
        contributions b 
        JOIN contributions backers_same_projects USING(project_id)
        JOIN contributions recommenders ON recommenders.user_id = backers_same_projects.user_id
        JOIN projects recommendations ON recommendations.id = recommenders.project_id
      WHERE 
        -- state filters on all contribution references
        b.state::text = 'confirmed'::text 
        AND backers_same_projects.state::text = 'confirmed'::text 
        AND recommenders.state::text = 'confirmed'::text

        -- confirmed_at filters based on my recent backs so the cost won't increase too much over time
        AND b.confirmed_at > (current_timestamp - '6 months'::interval) 

        -- recommenders must be recent so the project they recommend is still online
        AND recommenders.confirmed_at > (current_timestamp - '2 months'::interval) 
        AND recommendations.state::text = 'online'::text 

        -- source of recommendations must not be same user that I'm recommending to
        AND b.user_id <> backers_same_projects.user_id 

        -- I don't want to recommend the same project that is generating the recommendation
        AND recommendations.id <> b.project_id 

        -- I want to recommend projects that the user has not contributed to yet
        AND NOT (EXISTS ( SELECT true AS bool FROM contributions b2 WHERE b2.state::text = 'confirmed'::text AND b2.user_id = b.user_id AND b2.project_id = recommendations.id))
      GROUP BY b.user_id, recommendations.id
      UNION 
      SELECT b.user_id, recommendations.id AS project_id, 0 AS count
      FROM 
        contributions b
        JOIN projects p ON b.project_id = p.id
        JOIN projects recommendations ON recommendations.category_id = p.category_id
      WHERE 
        b.state::text = 'confirmed'::text 
        AND recommendations.state::text = 'online'::text
      ) recommendations
    WHERE 
      NOT (EXISTS ( SELECT true AS bool FROM contributions b2 WHERE b2.state::text = 'confirmed'::text AND b2.user_id = recommendations.user_id AND b2.project_id = recommendations.project_id))
    GROUP BY recommendations.user_id, recommendations.project_id
    ORDER BY sum(recommendations.count)::bigint DESC;
    [0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140731163219"]]
  [1m[36m (2.5ms)[0m  [1mCOMMIT[0m
Migrating to CreateBankAccounts (20140818184048)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.7ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'bank_accounts'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (7.4ms)[0m  CREATE TABLE "bank_accounts" ("id" serial primary key, "user_id" integer, "name" text NOT NULL, "account" text NOT NULL, "agency" text NOT NULL, "owner_name" text NOT NULL, "owner_document" text NOT NULL, "created_at" timestamp, "updated_at" timestamp, CONSTRAINT fk_bank_accounts_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id")) 
  [1m[36m (3.0ms)[0m  [1mCREATE INDEX "index_bank_accounts_on_user_id" ON "bank_accounts" ("user_id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140818184048"]]
  [1m[36m (2.2ms)[0m  [1mCOMMIT[0m
Migrating to AddDigitOnBankAccount (20140820174053)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "bank_accounts" ADD COLUMN "account_digit" text NOT NULL[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "bank_accounts" ADD COLUMN "agency_digit" text NOT NULL
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140820174053"]]
  [1m[35m (2.1ms)[0m  COMMIT
Migrating to AddAddressCountryToContributions (20140821192042)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "contributions" ADD COLUMN "address_country" text
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140821192042"]]
  [1m[35m (1.3ms)[0m  COMMIT
Migrating to AddAddressCountryToUsers (20140821192107)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "users" ADD COLUMN "address_country" text
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140821192107"]]
  [1m[35m (2.3ms)[0m  COMMIT
Migrating to CreateCreditCards (20140822202511)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.7ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'credit_cards'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36m (0.7ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'credit_cards'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (6.9ms)[0m  CREATE TABLE "credit_cards" ("id" serial primary key, "user_id" integer, "last_digits" text NOT NULL, "card_brand" text NOT NULL, "object_id" text NOT NULL, "created_at" timestamp, "updated_at" timestamp, CONSTRAINT fk_credit_cards_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id")) 
  [1m[36m (2.6ms)[0m  [1mCREATE INDEX "index_credit_cards_on_user_id" ON "credit_cards" ("user_id")[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140822202511"]]
  [1m[36m (2.4ms)[0m  [1mCOMMIT[0m
Migrating to ChangeObjectIdToSubscriptionId (20140825140231)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.3ms)[0m  [1mALTER TABLE "credit_cards" RENAME COLUMN "object_id" TO "subscription_id"[0m
  [1m[35m (1.3ms)[0m  
           SELECT distinct i.relname, d.indisunique, d.indkey, pg_get_indexdef(d.indexrelid), t.oid,
                  m.amname, pg_get_expr(d.indpred, t.oid) as conditions, pg_get_expr(d.indexprs, t.oid) as expression,
                  d.indclass
           FROM pg_class t
           INNER JOIN pg_index d ON t.oid = d.indrelid
           INNER JOIN pg_class i ON d.indexrelid = i.oid
           INNER JOIN pg_am m ON i.relam = m.oid
           WHERE i.relkind = 'i'
             AND d.indisprimary = 'f'
             AND t.relname = 'credit_cards'
             AND i.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
          ORDER BY i.relname

  [1m[36mColumns for index index_credit_cards_on_user_id on credit_cards (0.8ms)[0m  [1m              SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 17552
[0m
  [1m[35mOp classes for index index_credit_cards_on_user_id on credit_cards (0.4ms)[0m                SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)

  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140825140231"]]
  [1m[35m (2.2ms)[0m  COMMIT
Migrating to CreateCountries (20140902231758)
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35m (6.8ms)[0m  CREATE TABLE "countries" ("id" serial primary key, "name" text NOT NULL, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (3.5ms)[0m  [1m      INSERT INTO countries (name) VALUES
      ('Afeganistão'), ('África do Sul'), ('Akrotiri'), ('Albânia'), ('Alemanha'), 
      ('Andorra'), ('Angola'), ('Anguila'), ('Antárctida'), ('Antígua e Barbuda'), 
      ('Antilhas Neerlandesas'), ('Arábia Saudita'), ('Arctic Ocean'), ('Argélia'), 
      ('Argentina'), ('Arménia'), ('Aruba'), ('Ashmore and Cartier Islands'), 
      ('Atlantic Ocean'), ('Austrália'), ('Áustria'), ('Azerbaijão'), 
      ('Baamas'), ('Bangladeche'), ('Barbados'), ('Barém'), ('Bélgica'), ('Belize'), 
      ('Benim'), ('Bermudas'), ('Bielorrússia'), ('Birmânia'), ('Bolívia'), 
      ('Bósnia e Herzegovina'), ('Botsuana'), ('Brasil'), ('Brunei'), ('Bulgária'), 
      ('Burquina Faso'), ('Burúndi'), ('Butão'), ('Cabo Verde'), ('Camarões'), 
      ('Camboja'), ('Canadá'), ('Catar'), ('Cazaquistão'), ('Chade'), ('Chile'), 
      ('China'), ('Chipre'), ('Clipperton Island'), ('Colômbia'), ('Comores'), 
      ('Congo-Brazzaville'), ('Congo-Kinshasa'), ('Coral Sea Islands'), 
      ('Coreia do Norte'), ('Coreia do Sul'), ('Costa do Marfim'), ('Costa Rica'), 
      ('Croácia'), ('Cuba'), ('Dhekelia'), ('Dinamarca'), ('Domínica'), ('Egipto'), 
      ('Emiratos Árabes Unidos'), ('Equador'), ('Eritreia'), ('Eslováquia'), 
      ('Eslovénia'), ('Espanha'), ('Estados Unidos'), ('Estónia'), ('Etiópia'), 
      ('Faroé'), ('Fiji'), ('Filipinas'), ('Finlândia'), ('França'), ('Gabão'), 
      ('Gâmbia'), ('Gana'), ('Gaza Strip'), ('Geórgia'), 
      ('Geórgia do Sul e Sandwich do Sul'), ('Gibraltar'), ('Granada'), ('Grécia'), 
      ('Gronelândia'), ('Guame'), ('Guatemala'), ('Guernsey'), ('Guiana'), ('Guiné'), 
      ('Guiné Equatorial'), ('Guiné-Bissau'), ('Haiti'), ('Honduras'), ('Hong Kong'), 
      ('Hungria'), ('Iémen'), ('Ilha Bouvet'), ('Ilha do Natal'), ('Ilha Norfolk'), 
      ('Ilhas Caimão'), ('Ilhas Cook'), ('Ilhas dos Cocos'), ('Ilhas Falkland'), 
      ('Ilhas Heard e McDonald'), ('Ilhas Marshall'), ('Ilhas Salomão'), 
      ('Ilhas Turcas e Caicos'), ('Ilhas Virgens Americanas'), ('Ilhas Virgens Britânicas'), 
      ('Índia'), ('Indian Ocean'), ('Indonésia'), ('Irão'), ('Iraque'), ('Irlanda'), 
      ('Islândia'), ('Israel'), ('Itália'), ('Jamaica'), ('Jan Mayen'), ('Japão'), 
      ('Jersey'), ('Jibuti'), ('Jordânia'), ('Kuwait'), ('Laos'), ('Lesoto'), 
      ('Letónia'), ('Líbano'), ('Libéria'), ('Líbia'), ('Listenstaine'), ('Lituânia'), 
      ('Luxemburgo'), ('Macau'), ('Macedónia'), ('Madagáscar'), ('Malásia'), ('Malávi'), 
      ('Maldivas'), ('Mali'), ('Malta'), ('Man, Isle of'), ('Marianas do Norte'), 
      ('Marrocos'), ('Maurícia'), ('Mauritânia'), ('Mayotte'), ('México'), 
      ('Micronésia'), ('Moçambique'), ('Moldávia'), ('Mónaco'), ('Mongólia'), 
      ('Monserrate'), ('Montenegro'), ('Mundo'), ('Namíbia'), ('Nauru'), ('Navassa Island'), 
      ('Nepal'), ('Nicarágua'), ('Níger'), ('Nigéria'), ('Niue'), ('Noruega'), 
      ('Nova Caledónia'), ('Nova Zelândia'), ('Omã'), ('Pacific Ocean'), 
      ('Países Baixos'), ('Palau'), ('Panamá'), ('Papua-Nova Guiné'), ('Paquistão'), 
      ('Paracel Islands'), ('Paraguai'), ('Peru'), ('Pitcairn'), ('Polinésia Francesa'), 
      ('Polónia'), ('Porto Rico'), ('Portugal'), ('Quénia'), ('Quirguizistão'), 
      ('Quiribáti'), ('Reino Unido'), ('República Centro-Africana'), ('República Checa'), 
      ('República Dominicana'), ('Roménia'), ('Ruanda'), ('Rússia'), ('Salvador'), ('Samoa'), 
      ('Samoa Americana'), ('Santa Helena'), ('Santa Lúcia'), ('São Cristóvão e Neves'), 
      ('São Marinho'), ('São Pedro e Miquelon'), ('São Tomé e Príncipe'), 
      ('São Vicente e Granadinas'), ('Sara Ocidental'), ('Seicheles'), ('Senegal'), 
      ('Serra Leoa'), ('Sérvia'), ('Singapura'), ('Síria'), ('Somália'), ('Southern Ocean'), 
      ('Spratly Islands'), ('Sri Lanca'), ('Suazilândia'), ('Sudão'), ('Suécia'), ('Suíça'), 
      ('Suriname'), ('Svalbard e Jan Mayen'), ('Tailândia'), ('Taiwan'), ('Tajiquistão'), 
      ('Tanzânia'), ('Território Britânico do Oceano Índico'), ('Territórios Austrais Franceses'), 
      ('Timor Leste'), ('Togo'), ('Tokelau'), ('Tonga'), ('Trindade e Tobago'), ('Tunísia'), 
      ('Turquemenistão'), ('Turquia'), ('Tuvalu'), ('Ucrânia'), ('Uganda'), ('União Europeia'), 
      ('Uruguai'), ('Usbequistão'), ('Vanuatu'), ('Vaticano'), ('Venezuela'), ('Vietname'), 
      ('Wake Island'), ('Wallis e Futuna'), ('West Bank'), ('Zâmbia'), ('Zimbabué');
      UPDATE countries SET created_at = now(), updated_at = now();
[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140902231758"]]
  [1m[36m (2.9ms)[0m  [1mCOMMIT[0m
Migrating to AddCountryIdToUsers (20140902233410)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "users" ADD COLUMN "country_id" integer[0m
  [1m[35m (0.9ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'users'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36m (4.0ms)[0m  [1mCREATE INDEX "fk__users_country_id" ON "users" ("country_id")[0m
  [1m[35m (1.5ms)[0m  ALTER TABLE "users" ADD CONSTRAINT fk_users_country_id FOREIGN KEY ("country_id") REFERENCES "countries" ("id")
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140902233410"]]
  [1m[35m (2.2ms)[0m  COMMIT
Migrating to AddCountryIdToContributions (20140902233427)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "contributions" ADD COLUMN "country_id" integer
  [1m[36m (0.7ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'contributions'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (2.8ms)[0m  CREATE INDEX "fk__contributions_country_id" ON "contributions" ("country_id")
  [1m[36m (1.4ms)[0m  [1mALTER TABLE "contributions" ADD CONSTRAINT fk_contributions_country_id FOREIGN KEY ("country_id") REFERENCES "countries" ("id")[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140902233427"]]
  [1m[36m (2.4ms)[0m  [1mCOMMIT[0m
Migrating to AddSlipUrlAndInstallmentsOnContributions (20140918163741)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (1.0ms)[0m  [1mALTER TABLE "contributions" ADD COLUMN "slip_url" text[0m
  [1m[35m (19.8ms)[0m  ALTER TABLE "contributions" ADD COLUMN "installments" integer DEFAULT 1 NOT NULL
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140918163741"]]
  [1m[35m (3.6ms)[0m  COMMIT
Migrating to MoreAuditableDataIntoContributions (20140918192213)
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "contributions" ADD COLUMN "waiting_confirmation_at" timestamp
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "contributions" ADD COLUMN "canceled_at" timestamp[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "contributions" ADD COLUMN "refunded_at" timestamp
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "contributions" ADD COLUMN "requested_refund_at" timestamp[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "contributions" ADD COLUMN "refunded_and_canceled_at" timestamp
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "contributions" ADD COLUMN "deleted_at" timestamp[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "contributions" ADD COLUMN "invalid_payment_at" timestamp
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140918192213"]]
  [1m[35m (2.6ms)[0m  COMMIT
Migrating to AddDeliverAtToOwnersReport (20140922161604)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (1.0ms)[0m  DROP VIEW "contribution_reports_for_project_owners"
  [1m[36m (3.7ms)[0m  [1m      CREATE OR REPLACE VIEW contribution_reports_for_project_owners AS
      SELECT
        b.project_id,
        coalesce(r.id, 0) as reward_id,
        p.user_id as project_owner_id,
        r.description as reward_description,
        to_char(r.deliver_at, 'DD/MM/YYYY') as reward_deliver_at,
        b.confirmed_at::date,
        b.value as contribution_value,
        (b.value* (SELECT value::numeric FROM settings WHERE name = 'catarse_fee') ) as service_fee,
        u.email as user_email,
        coalesce(u.full_name, u.name) as user_name,
        b.payer_email as payer_email,
        b.payment_method,
        b.anonymous,
        b.state as state,
        coalesce(u.address_street, b.address_street) as street,
        coalesce(u.address_complement, b.address_complement) as complement,
        coalesce(u.address_number, b.address_number) as address_number,
        coalesce(u.address_neighbourhood, b.address_neighbourhood) as neighbourhood,
        coalesce(u.address_city, b.address_city) as city,
        coalesce(u.address_state, b.address_state) as address_state,
        coalesce(u.address_zip_code, b.address_zip_code) as zip_code
      FROM
        contributions b
      JOIN users u ON u.id = b.user_id
      JOIN projects p ON b.project_id = p.id
      LEFT JOIN rewards r ON r.id = b.reward_id
      WHERE
        b.state IN ('confirmed', 'waiting_confirmation');
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140922161604"]]
  [1m[36m (2.7ms)[0m  [1mCOMMIT[0m
Migrating to CreateBanks (20140930133827)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (7.3ms)[0m  [1mCREATE TABLE "banks" ("id" serial primary key, "name" text NOT NULL, "code" text NOT NULL, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (3.2ms)[0m  CREATE UNIQUE INDEX "index_banks_on_code" ON "banks" ("code")
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140930133827"]]
  [1m[35m (2.3ms)[0m  COMMIT
Migrating to InsertBanks (20140930140654)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (5.9ms)[0m  INSERT INTO banks VALUES (1, 'Banco A.J.Renner S.A.', '654', '2014-09-30 11:03:55.435396', '2014-09-30 11:03:55.435396');
INSERT INTO banks VALUES (2, 'Banco ABC Brasil S.A.', '246', '2014-09-30 11:03:55.443554', '2014-09-30 11:03:55.443554');
INSERT INTO banks VALUES (3, 'Banco CR2 S.A.', '075', '2014-09-30 11:03:55.447131', '2014-09-30 11:03:55.447131');
INSERT INTO banks VALUES (4, 'Banco Alfa S.A.', '025', '2014-09-30 11:03:55.450375', '2014-09-30 11:03:55.450375');
INSERT INTO banks VALUES (5, 'Banco Alvorada S.A.', '641', '2014-09-30 11:03:55.453609', '2014-09-30 11:03:55.453609');
INSERT INTO banks VALUES (6, 'Banco Arbi S.A.', '213', '2014-09-30 11:03:55.456496', '2014-09-30 11:03:55.456496');
INSERT INTO banks VALUES (7, 'Banco Azteca do Brasil S.A.', '019', '2014-09-30 11:03:55.459522', '2014-09-30 11:03:55.459522');
INSERT INTO banks VALUES (8, 'Banco de Pernambuco S.A. - BANDEPE', '024', '2014-09-30 11:03:55.462802', '2014-09-30 11:03:55.462802');
INSERT INTO banks VALUES (9, 'Banco Bankpar S.A.', '000', '2014-09-30 11:03:55.465628', '2014-09-30 11:03:55.465628');
INSERT INTO banks VALUES (10, 'Banco Barclays S.A.', '740', '2014-09-30 11:03:55.468709', '2014-09-30 11:03:55.468709');
INSERT INTO banks VALUES (11, 'Banco BBM S.A.', '107', '2014-09-30 11:03:55.47225', '2014-09-30 11:03:55.47225');
INSERT INTO banks VALUES (12, 'Banco BM&FBOVESPA; de Serviços de Liquidação e Custódia S.A', '096', '2014-09-30 11:03:55.475582', '2014-09-30 11:03:55.475582');
INSERT INTO banks VALUES (13, 'Banco BMG S.A.', '318', '2014-09-30 11:03:55.47873', '2014-09-30 11:03:55.47873');
INSERT INTO banks VALUES (14, 'Banco BNP Paribas Brasil S.A.', '752', '2014-09-30 11:03:55.48155', '2014-09-30 11:03:55.48155');
INSERT INTO banks VALUES (15, 'Banco Boavista Interatlântico S.A.', '248', '2014-09-30 11:03:55.484347', '2014-09-30 11:03:55.484347');
INSERT INTO banks VALUES (16, 'Banco Bonsucesso S.A.', '218', '2014-09-30 11:03:55.487106', '2014-09-30 11:03:55.487106');
INSERT INTO banks VALUES (17, 'Banco Patagon S.A.', '065', '2014-09-30 11:03:55.489892', '2014-09-30 11:03:55.489892');
INSERT INTO banks VALUES (18, 'Ibibank S.A. - Banco Múltiplo', '063', '2014-09-30 11:03:55.492786', '2014-09-30 11:03:55.492786');
INSERT INTO banks VALUES (19, 'Banco Bradesco BBI S.A.', '036', '2014-09-30 11:03:55.495627', '2014-09-30 11:03:55.495627');
INSERT INTO banks VALUES (20, 'Banco BERJ S.A.', '122-8', '2014-09-30 11:03:55.499535', '2014-09-30 11:03:55.499535');
INSERT INTO banks VALUES (21, 'Banco Bradesco Cartões S.A.', '204', '2014-09-30 11:03:55.502576', '2014-09-30 11:03:55.502576');
INSERT INTO banks VALUES (22, 'Banco Bradesco Financiamentos S.A.', '394', '2014-09-30 11:03:55.505386', '2014-09-30 11:03:55.505386');
INSERT INTO banks VALUES (23, 'Banco Bradesco S.A.', '237', '2014-09-30 11:03:55.508105', '2014-09-30 11:03:55.508105');
INSERT INTO banks VALUES (24, 'Banco BRJ S.A.', 'M15', '2014-09-30 11:03:55.510834', '2014-09-30 11:03:55.510834');
INSERT INTO banks VALUES (25, 'Banco BTG Pactual S.A.', '208', '2014-09-30 11:03:55.513788', '2014-09-30 11:03:55.513788');
INSERT INTO banks VALUES (26, 'Banco Cacique S.A.', '263', '2014-09-30 11:03:55.516722', '2014-09-30 11:03:55.516722');
INSERT INTO banks VALUES (27, 'Banco Financial Português S.A.', '473', '2014-09-30 11:03:55.51965', '2014-09-30 11:03:55.51965');
INSERT INTO banks VALUES (28, 'Banco Capital S.A.', '412', '2014-09-30 11:03:55.522286', '2014-09-30 11:03:55.522286');
INSERT INTO banks VALUES (29, 'Banco Cargill S.A.', '040', '2014-09-30 11:03:55.526399', '2014-09-30 11:03:55.526399');
INSERT INTO banks VALUES (30, 'Banco Cédula S.A.', '266', '2014-09-30 11:03:55.529671', '2014-09-30 11:03:55.529671');
INSERT INTO banks VALUES (31, 'Banco BGN S.A.', '739', '2014-09-30 11:03:55.53249', '2014-09-30 11:03:55.53249');
INSERT INTO banks VALUES (32, 'Banco Cifra S.A.', '233', '2014-09-30 11:03:55.535596', '2014-09-30 11:03:55.535596');
INSERT INTO banks VALUES (33, 'Banco Citibank S.A.', '745', '2014-09-30 11:03:55.538726', '2014-09-30 11:03:55.538726');
INSERT INTO banks VALUES (34, 'Banco Citicard S.A.', 'M08', '2014-09-30 11:03:55.542904', '2014-09-30 11:03:55.542904');
INSERT INTO banks VALUES (35, 'Banco Clássico S.A.', '241', '2014-09-30 11:03:55.546095', '2014-09-30 11:03:55.546095');
INSERT INTO banks VALUES (36, 'Banco CNH Capital S.A.', 'M19', '2014-09-30 11:03:55.549664', '2014-09-30 11:03:55.549664');
INSERT INTO banks VALUES (37, 'Banco Confidence de Câmbio S.A.', '095', '2014-09-30 11:03:55.553804', '2014-09-30 11:03:55.553804');
INSERT INTO banks VALUES (38, 'Banco Cooperativo do Brasil S.A. - BANCOOB', '756', '2014-09-30 11:03:55.556831', '2014-09-30 11:03:55.556831');
INSERT INTO banks VALUES (39, 'Banco Cooperativo Sicredi S.A.', '748', '2014-09-30 11:03:55.560422', '2014-09-30 11:03:55.560422');
INSERT INTO banks VALUES (40, 'Banco Credit Agricole Brasil S.A.', '222', '2014-09-30 11:03:55.563835', '2014-09-30 11:03:55.563835');
INSERT INTO banks VALUES (41, 'Banco Credit Suisse (Brasil) S.A.', '505', '2014-09-30 11:03:55.566955', '2014-09-30 11:03:55.566955');
INSERT INTO banks VALUES (42, 'Banco da Amazônia S.A.', '003', '2014-09-30 11:03:55.570362', '2014-09-30 11:03:55.570362');
INSERT INTO banks VALUES (43, 'Banco da China Brasil S.A.', '083-3', '2014-09-30 11:03:55.57436', '2014-09-30 11:03:55.57436');
INSERT INTO banks VALUES (44, 'Banco Daycoval S.A.', '707', '2014-09-30 11:03:55.57757', '2014-09-30 11:03:55.57757');
INSERT INTO banks VALUES (45, 'Banco de La Nacion Argentina', '300', '2014-09-30 11:03:55.581719', '2014-09-30 11:03:55.581719');
INSERT INTO banks VALUES (46, 'Banco de La Provincia de Buenos Aires', '495', '2014-09-30 11:03:55.585456', '2014-09-30 11:03:55.585456');
INSERT INTO banks VALUES (47, 'Banco de La Republica Oriental del Uruguay', '494', '2014-09-30 11:03:55.58915', '2014-09-30 11:03:55.58915');
INSERT INTO banks VALUES (48, 'Banco de Lage Landen Brasil S.A.', 'M06', '2014-09-30 11:03:55.592917', '2014-09-30 11:03:55.592917');
INSERT INTO banks VALUES (49, 'Banco de Tokyo-Mitsubishi UFJ Brasil S.A.', '456', '2014-09-30 11:03:55.596146', '2014-09-30 11:03:55.596146');
INSERT INTO banks VALUES (50, 'Banco Dibens S.A.', '214', '2014-09-30 11:03:55.599192', '2014-09-30 11:03:55.599192');
INSERT INTO banks VALUES (51, 'Banco do Brasil S.A.', '001', '2014-09-30 11:03:55.60289', '2014-09-30 11:03:55.60289');
INSERT INTO banks VALUES (52, 'Banco do Estado de Sergipe S.A.', '047', '2014-09-30 11:03:55.605874', '2014-09-30 11:03:55.605874');
INSERT INTO banks VALUES (53, 'Banco do Estado do Pará S.A.', '037', '2014-09-30 11:03:55.609472', '2014-09-30 11:03:55.609472');
INSERT INTO banks VALUES (54, 'Banco do Estado do Rio Grande do Sul S.A.', '041', '2014-09-30 11:03:55.612813', '2014-09-30 11:03:55.612813');
INSERT INTO banks VALUES (55, 'Banco do Nordeste do Brasil S.A.', '004', '2014-09-30 11:03:55.615925', '2014-09-30 11:03:55.615925');
INSERT INTO banks VALUES (56, 'Banco Fator S.A.', '265', '2014-09-30 11:03:55.619648', '2014-09-30 11:03:55.619648');
INSERT INTO banks VALUES (57, 'Banco Fibra S.A.', '224', '2014-09-30 11:03:55.622606', '2014-09-30 11:03:55.622606');
INSERT INTO banks VALUES (58, 'Banco Ficsa S.A.', '626', '2014-09-30 11:03:55.625474', '2014-09-30 11:03:55.625474');
INSERT INTO banks VALUES (59, 'Banco Ford S.A.', 'M18', '2014-09-30 11:03:55.629673', '2014-09-30 11:03:55.629673');
INSERT INTO banks VALUES (60, 'Banco GMAC S.A.', 'M07', '2014-09-30 11:03:55.632841', '2014-09-30 11:03:55.632841');
INSERT INTO banks VALUES (61, 'Banco Guanabara S.A.', '612', '2014-09-30 11:03:55.635988', '2014-09-30 11:03:55.635988');
INSERT INTO banks VALUES (62, 'Banco Honda S.A.', 'M22', '2014-09-30 11:03:55.638852', '2014-09-30 11:03:55.638852');
INSERT INTO banks VALUES (63, 'Banco IBM S.A.', 'M11', '2014-09-30 11:03:55.64212', '2014-09-30 11:03:55.64212');
INSERT INTO banks VALUES (64, 'Banco Industrial do Brasil S.A.', '604', '2014-09-30 11:03:55.645216', '2014-09-30 11:03:55.645216');
INSERT INTO banks VALUES (65, 'Banco Industrial e Comercial S.A.', '320', '2014-09-30 11:03:55.648039', '2014-09-30 11:03:55.648039');
INSERT INTO banks VALUES (66, 'Banco Indusval S.A.', '653', '2014-09-30 11:03:55.651102', '2014-09-30 11:03:55.651102');
INSERT INTO banks VALUES (67, 'Banco Intercap S.A.', '630', '2014-09-30 11:03:55.654009', '2014-09-30 11:03:55.654009');
INSERT INTO banks VALUES (68, 'Banco Intermedium S.A.', '077-9', '2014-09-30 11:03:55.656679', '2014-09-30 11:03:55.656679');
INSERT INTO banks VALUES (69, 'Banco Investcred S.A.', '249', '2014-09-30 11:03:55.659319', '2014-09-30 11:03:55.659319');
INSERT INTO banks VALUES (70, 'Banco Itaú BBA S.A.', '184', '2014-09-30 11:03:55.662531', '2014-09-30 11:03:55.662531');
INSERT INTO banks VALUES (71, 'Banco Banerj S.A.', '029', '2014-09-30 11:03:55.665371', '2014-09-30 11:03:55.665371');
INSERT INTO banks VALUES (72, 'Banco Fiat S.A.', 'M03', '2014-09-30 11:03:55.669199', '2014-09-30 11:03:55.669199');
INSERT INTO banks VALUES (73, 'Banco ItaúBank S.A', '479', '2014-09-30 11:03:55.672066', '2014-09-30 11:03:55.672066');
INSERT INTO banks VALUES (74, 'Banco J. Safra S.A.', '074', '2014-09-30 11:03:55.675383', '2014-09-30 11:03:55.675383');
INSERT INTO banks VALUES (75, 'Banco J. P. Morgan S.A.', '376', '2014-09-30 11:03:55.6786', '2014-09-30 11:03:55.6786');
INSERT INTO banks VALUES (76, 'Banco John Deere S.A.', '217', '2014-09-30 11:03:55.681746', '2014-09-30 11:03:55.681746');
INSERT INTO banks VALUES (77, 'Banco KDB S.A.', '076', '2014-09-30 11:03:55.684705', '2014-09-30 11:03:55.684705');
INSERT INTO banks VALUES (78, 'Banco KEB do Brasil S.A.', '757', '2014-09-30 11:03:55.687923', '2014-09-30 11:03:55.687923');
INSERT INTO banks VALUES (79, 'Banco Luso Brasileiro S.A.', '600', '2014-09-30 11:03:55.691595', '2014-09-30 11:03:55.691595');
INSERT INTO banks VALUES (80, 'Banco Máxima S.A.', '243', '2014-09-30 11:03:55.694754', '2014-09-30 11:03:55.694754');
INSERT INTO banks VALUES (81, 'Banco Maxinvest S.A.', 'M12', '2014-09-30 11:03:55.697596', '2014-09-30 11:03:55.697596');
INSERT INTO banks VALUES (82, 'Banco Mercantil do Brasil S.A.', '389', '2014-09-30 11:03:55.700905', '2014-09-30 11:03:55.700905');
INSERT INTO banks VALUES (83, 'Banco Merrill Lynch S.A.', '755', '2014-09-30 11:03:55.704081', '2014-09-30 11:03:55.704081');
INSERT INTO banks VALUES (84, 'Banco Europeu para a America Latina (BEAL) S.A.', '370', '2014-09-30 11:03:55.70688', '2014-09-30 11:03:55.70688');
INSERT INTO banks VALUES (85, 'Banco Modal S.A.', '746', '2014-09-30 11:03:55.709537', '2014-09-30 11:03:55.709537');
INSERT INTO banks VALUES (86, 'Banco Moneo S.A.', 'M10', '2014-09-30 11:03:55.712323', '2014-09-30 11:03:55.712323');
INSERT INTO banks VALUES (87, 'Banco Morgan Stanley S.A.', '066', '2014-09-30 11:03:55.71519', '2014-09-30 11:03:55.71519');
INSERT INTO banks VALUES (88, 'Banco Original do Agronegócio S.A.', '079', '2014-09-30 11:03:55.718226', '2014-09-30 11:03:55.718226');
INSERT INTO banks VALUES (89, 'Banco Original S.A.', '212', '2014-09-30 11:03:55.72222', '2014-09-30 11:03:55.72222');
INSERT INTO banks VALUES (90, 'Banco Ourinvest S.A.', 'M17', '2014-09-30 11:03:55.725452', '2014-09-30 11:03:55.725452');
INSERT INTO banks VALUES (91, 'Banco Panamericano S.A.', '623', '2014-09-30 11:03:55.728177', '2014-09-30 11:03:55.728177');
INSERT INTO banks VALUES (92, 'Banco Paulista S.A.', '611', '2014-09-30 11:03:55.731582', '2014-09-30 11:03:55.731582');
INSERT INTO banks VALUES (93, 'Banco Pecúnia S.A.', '613', '2014-09-30 11:03:55.735131', '2014-09-30 11:03:55.735131');
INSERT INTO banks VALUES (94, 'Banco Petra S.A.', '094-2', '2014-09-30 11:03:55.738031', '2014-09-30 11:03:55.738031');
INSERT INTO banks VALUES (95, 'Banco Pine S.A.', '643', '2014-09-30 11:03:55.740748', '2014-09-30 11:03:55.740748');
INSERT INTO banks VALUES (96, 'Banco Pottencial S.A.', '735', '2014-09-30 11:03:55.74354', '2014-09-30 11:03:55.74354');
INSERT INTO banks VALUES (97, 'Banco PSA Finance Brasil S.A.', 'M24', '2014-09-30 11:03:55.74657', '2014-09-30 11:03:55.74657');
INSERT INTO banks VALUES (98, 'Banco Rabobank International Brasil S.A.', '747', '2014-09-30 11:03:55.749438', '2014-09-30 11:03:55.749438');
INSERT INTO banks VALUES (99, 'Banco Randon S.A.', '088-4', '2014-09-30 11:03:55.752204', '2014-09-30 11:03:55.752204');
INSERT INTO banks VALUES (100, 'Banco Rendimento S.A.', '633', '2014-09-30 11:03:55.754994', '2014-09-30 11:03:55.754994');
INSERT INTO banks VALUES (101, 'Banco Ribeirão Preto S.A.', '741', '2014-09-30 11:03:55.757834', '2014-09-30 11:03:55.757834');
INSERT INTO banks VALUES (102, 'Banco Rodobens S.A.', 'M16', '2014-09-30 11:03:55.760596', '2014-09-30 11:03:55.760596');
INSERT INTO banks VALUES (103, 'Banco Safra S.A.', '422', '2014-09-30 11:03:55.763522', '2014-09-30 11:03:55.763522');
INSERT INTO banks VALUES (104, 'Banco Santander  (Brasil)  S.A.', '033', '2014-09-30 11:03:55.766746', '2014-09-30 11:03:55.766746');
INSERT INTO banks VALUES (105, 'Banco Semear S.A.', '743', '2014-09-30 11:03:55.769652', '2014-09-30 11:03:55.769652');
INSERT INTO banks VALUES (106, 'Banco Sofisa S.A.', '637', '2014-09-30 11:03:55.772469', '2014-09-30 11:03:55.772469');
INSERT INTO banks VALUES (107, 'Banco Sumitomo Mitsui Brasileiro S.A.', '464', '2014-09-30 11:03:55.77556', '2014-09-30 11:03:55.77556');
INSERT INTO banks VALUES (108, 'Banco Topázio S.A.', '082-5', '2014-09-30 11:03:55.778726', '2014-09-30 11:03:55.778726');
INSERT INTO banks VALUES (109, 'Banco Triângulo S.A.', '634', '2014-09-30 11:03:55.781646', '2014-09-30 11:03:55.781646');
INSERT INTO banks VALUES (110, 'Banco Tricury S.A.', '018', '2014-09-30 11:03:55.784314', '2014-09-30 11:03:55.784314');
INSERT INTO banks VALUES (111, 'Banco Volkswagen S.A.', 'M14', '2014-09-30 11:03:55.786957', '2014-09-30 11:03:55.786957');
INSERT INTO banks VALUES (112, 'Banco Volvo (Brasil) S.A.', 'M23', '2014-09-30 11:03:55.790064', '2014-09-30 11:03:55.790064');
INSERT INTO banks VALUES (113, 'Banco Votorantim S.A.', '655', '2014-09-30 11:03:55.792862', '2014-09-30 11:03:55.792862');
INSERT INTO banks VALUES (114, 'Banco VR S.A.', '610', '2014-09-30 11:03:55.795699', '2014-09-30 11:03:55.795699');
INSERT INTO banks VALUES (115, 'Banco Western Union do Brasil S.A.', '119', '2014-09-30 11:03:55.798778', '2014-09-30 11:03:55.798778');
INSERT INTO banks VALUES (116, 'BANESTES S.A. Banco do Estado do Espírito Santo', '021', '2014-09-30 11:03:55.801722', '2014-09-30 11:03:55.801722');
INSERT INTO banks VALUES (117, 'Banif-Banco Internacional do Funchal (Brasil)S.A.', '719', '2014-09-30 11:03:55.804481', '2014-09-30 11:03:55.804481');
INSERT INTO banks VALUES (118, 'Concórdia Banco S.A.', '081-7', '2014-09-30 11:03:55.807268', '2014-09-30 11:03:55.807268');
INSERT INTO banks VALUES (119, 'BCV - Banco de Crédito e Varejo S.A.', '250', '2014-09-30 11:03:55.810218', '2014-09-30 11:03:55.810218');
INSERT INTO banks VALUES (120, 'BPN Brasil Banco Múltiplo S.A.', '069', '2014-09-30 11:03:55.81451', '2014-09-30 11:03:55.81451');
INSERT INTO banks VALUES (121, 'BRB - Banco de Brasília S.A.', '070', '2014-09-30 11:03:55.81764', '2014-09-30 11:03:55.81764');
INSERT INTO banks VALUES (122, 'Caixa Econômica Federal', '104', '2014-09-30 11:03:55.82056', '2014-09-30 11:03:55.82056');
INSERT INTO banks VALUES (123, 'Citibank S.A.', '477', '2014-09-30 11:03:55.823498', '2014-09-30 11:03:55.823498');
INSERT INTO banks VALUES (124, 'Deutsche Bank S.A. - Banco Alemão', '487', '2014-09-30 11:03:55.826405', '2014-09-30 11:03:55.826405');
INSERT INTO banks VALUES (125, 'Goldman Sachs do Brasil Banco Múltiplo S.A.', '064', '2014-09-30 11:03:55.829666', '2014-09-30 11:03:55.829666');
INSERT INTO banks VALUES (126, 'Hipercard Banco Múltiplo S.A.', '062', '2014-09-30 11:03:55.832904', '2014-09-30 11:03:55.832904');
INSERT INTO banks VALUES (127, 'HSBC Bank Brasil S.A. - Banco Múltiplo', '399', '2014-09-30 11:03:55.835883', '2014-09-30 11:03:55.835883');
INSERT INTO banks VALUES (128, 'HSBC Finance (Brasil) S.A. - Banco Múltiplo', '168', '2014-09-30 11:03:55.838822', '2014-09-30 11:03:55.838822');
INSERT INTO banks VALUES (129, 'ING Bank N.V.', '492', '2014-09-30 11:03:55.842115', '2014-09-30 11:03:55.842115');
INSERT INTO banks VALUES (130, 'Banco Francês e Brasileiro S.A.', '346', '2014-09-30 11:03:55.84497', '2014-09-30 11:03:55.84497');
INSERT INTO banks VALUES (131, 'Itaú Unibanco S.A.', '341', '2014-09-30 11:03:55.848019', '2014-09-30 11:03:55.848019');
INSERT INTO banks VALUES (132, 'JPMorgan Chase Bank', '488', '2014-09-30 11:03:55.851136', '2014-09-30 11:03:55.851136');
INSERT INTO banks VALUES (133, 'Natixis Brasil S.A. Banco Múltiplo', '014', '2014-09-30 11:03:55.853975', '2014-09-30 11:03:55.853975');
INSERT INTO banks VALUES (134, 'NBC Bank Brasil S.A. - Banco Múltiplo', '753', '2014-09-30 11:03:55.857109', '2014-09-30 11:03:55.857109');
INSERT INTO banks VALUES (135, 'Scotiabank Brasil S.A. Banco Múltiplo', '751', '2014-09-30 11:03:55.86002', '2014-09-30 11:03:55.86002');
INSERT INTO banks VALUES (136, 'UNIBANCO - União de Bancos Brasileiros S.A.', '409', '2014-09-30 11:03:55.863362', '2014-09-30 11:03:55.863362');
INSERT INTO banks VALUES (137, 'Unicard Banco Múltiplo S.A.', '230', '2014-09-30 11:03:55.866552', '2014-09-30 11:03:55.866552');

  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140930140654"]]
  [1m[35m (2.3ms)[0m  COMMIT
Migrating to MigratingUserBankAccounts (20140930141246)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "bank_accounts" ADD COLUMN "bank_id" integer
  [1m[36m (0.7ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'bank_accounts'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (3.4ms)[0m  CREATE INDEX "fk__bank_accounts_bank_id" ON "bank_accounts" ("bank_id")
  [1m[36m (1.3ms)[0m  [1mALTER TABLE "bank_accounts" ADD CONSTRAINT fk_bank_accounts_bank_id FOREIGN KEY ("bank_id") REFERENCES "banks" ("id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20140930141246"]]
  [1m[36m (2.4ms)[0m  [1mCOMMIT[0m
Migrating to MigrateBankCodeToBanks (20140930144910)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.8ms)[0m  [1m      update bank_accounts SET bank_id = (select b.id from banks b where split_part(bank_accounts.name, ' ', 1) = b.code);
      ALTER TABLE bank_accounts ALTER COLUMN bank_id SET NOT NULL;
[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "bank_accounts" DROP "name"
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20140930144910"]]
  [1m[35m (0.7ms)[0m  COMMIT
Migrating to ChangeNullOnAgencyDigit (20141010140644)
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "bank_accounts" ALTER "agency_digit" DROP NOT NULL
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20141010140644"]]
  [1m[35m (0.6ms)[0m  COMMIT
Migrating to RemoveRequiredFieldsFromProject (20141010195710)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "projects" ALTER "goal" DROP NOT NULL
  [1m[36m (0.7ms)[0m  [1mALTER TABLE "projects" ALTER "about" DROP NOT NULL[0m
  [1m[35m (1.3ms)[0m  ALTER TABLE "projects" ALTER "headline" DROP NOT NULL
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20141010195710"]]
  [1m[35m (0.6ms)[0m  COMMIT
Migrating to ChangeTrafficSourcesToText (20141013221051)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (1.2ms)[0m  DROP VIEW projects_for_home
  [1m[36m (18.5ms)[0m  [1mALTER TABLE "projects" ALTER COLUMN "traffic_sources" TYPE text[0m
  [1m[35m (5.4ms)[0m      CREATE VIEW projects_for_home AS
    WITH recommended_projects AS (SELECT 'recommended'::text AS origin, recommends.id, recommends.name, recommends.user_id, recommends.category_id, recommends.goal, recommends.about, recommends.headline, recommends.video_url, recommends.short_url, recommends.created_at, recommends.updated_at, recommends.about_html, recommends.recommended, recommends.home_page_comment, recommends.permalink, recommends.video_thumbnail, recommends.state, recommends.online_days, recommends.online_date, recommends.traffic_sources, recommends.more_links, recommends.first_contributions AS first_backers, recommends.uploaded_image, recommends.video_embed_url FROM projects recommends WHERE (recommends.recommended AND ((recommends.state)::text = 'online'::text)) ORDER BY random() LIMIT 3), recents_projects AS (SELECT 'recents'::text AS origin, recents.id, recents.name, recents.user_id, recents.category_id, recents.goal, recents.about, recents.headline, recents.video_url, recents.short_url, recents.created_at, recents.updated_at, recents.about_html, recents.recommended, recents.home_page_comment, recents.permalink, recents.video_thumbnail, recents.state, recents.online_days, recents.online_date, recents.traffic_sources, recents.more_links, recents.first_contributions AS first_backers, recents.uploaded_image, recents.video_embed_url FROM projects recents WHERE ((((recents.state)::text = 'online'::text) AND ((now() - recents.online_date) <= '5 days'::interval)) AND (NOT (recents.id IN (SELECT recommends.id FROM recommended_projects recommends)))) ORDER BY random() LIMIT 3), expiring_projects AS (SELECT 'expiring'::text AS origin, expiring.id, expiring.name, expiring.user_id, expiring.category_id, expiring.goal, expiring.about, expiring.headline, expiring.video_url, expiring.short_url, expiring.created_at, expiring.updated_at, expiring.about_html, expiring.recommended, expiring.home_page_comment, expiring.permalink, expiring.video_thumbnail, expiring.state, expiring.online_days, expiring.online_date, expiring.traffic_sources, expiring.more_links, expiring.first_contributions AS first_backers, expiring.uploaded_image, expiring.video_embed_url FROM projects expiring WHERE ((((expiring.state)::text = 'online'::text) AND (expires_at(expiring.*) <= (now() + '14 days'::interval))) AND (NOT (expiring.id IN (SELECT recommends.id FROM recommended_projects recommends UNION SELECT recents.id FROM recents_projects recents)))) ORDER BY random() LIMIT 3) (SELECT recommended_projects.origin, recommended_projects.id, recommended_projects.name, recommended_projects.user_id, recommended_projects.category_id, recommended_projects.goal, recommended_projects.about, recommended_projects.headline, recommended_projects.video_url, recommended_projects.short_url, recommended_projects.created_at, recommended_projects.updated_at, recommended_projects.about_html, recommended_projects.recommended, recommended_projects.home_page_comment, recommended_projects.permalink, recommended_projects.video_thumbnail, recommended_projects.state, recommended_projects.online_days, recommended_projects.online_date, recommended_projects.traffic_sources, recommended_projects.more_links, recommended_projects.first_backers, recommended_projects.uploaded_image, recommended_projects.video_embed_url FROM recommended_projects UNION SELECT recents_projects.origin, recents_projects.id, recents_projects.name, recents_projects.user_id, recents_projects.category_id, recents_projects.goal, recents_projects.about, recents_projects.headline, recents_projects.video_url, recents_projects.short_url, recents_projects.created_at, recents_projects.updated_at, recents_projects.about_html, recents_projects.recommended, recents_projects.home_page_comment, recents_projects.permalink, recents_projects.video_thumbnail, recents_projects.state, recents_projects.online_days, recents_projects.online_date, recents_projects.traffic_sources, recents_projects.more_links, recents_projects.first_backers, recents_projects.uploaded_image, recents_projects.video_embed_url FROM recents_projects) UNION SELECT expiring_projects.origin, expiring_projects.id, expiring_projects.name, expiring_projects.user_id, expiring_projects.category_id, expiring_projects.goal, expiring_projects.about, expiring_projects.headline, expiring_projects.video_url, expiring_projects.short_url, expiring_projects.created_at, expiring_projects.updated_at, expiring_projects.about_html, expiring_projects.recommended, expiring_projects.home_page_comment, expiring_projects.permalink, expiring_projects.video_thumbnail, expiring_projects.state, expiring_projects.online_days, expiring_projects.online_date, expiring_projects.traffic_sources, expiring_projects.more_links, expiring_projects.first_backers, expiring_projects.uploaded_image, expiring_projects.video_embed_url FROM expiring_projects;

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20141013221051"]]
  [1m[35m (2.7ms)[0m  COMMIT
Migrating to CreateCategoryFollowers (20141014213748)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.8ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'category_followers'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36m (0.8ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'category_followers'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (5.3ms)[0m  CREATE TABLE "category_followers" ("id" serial primary key, "category_id" integer NOT NULL, "user_id" integer NOT NULL, "created_at" timestamp, "updated_at" timestamp, CONSTRAINT fk_category_followers_category_id FOREIGN KEY ("category_id") REFERENCES "categories" ("id"), CONSTRAINT fk_category_followers_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id")) 
  [1m[36m (4.6ms)[0m  [1mCREATE INDEX "index_category_followers_on_category_id" ON "category_followers" ("category_id")[0m
  [1m[35m (3.1ms)[0m  CREATE INDEX "index_category_followers_on_user_id" ON "category_followers" ("user_id")
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20141014213748"]]
  [1m[35m (2.1ms)[0m  COMMIT
Migrating to CreateCategoryNotifications (20141015005248)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.7ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'category_notifications'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36m (0.6ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'category_notifications'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (7.5ms)[0m  CREATE TABLE "category_notifications" ("id" serial primary key, "user_id" integer NOT NULL, "category_id" integer NOT NULL, "from_email" text NOT NULL, "from_name" text NOT NULL, "template_name" text NOT NULL, "locale" text NOT NULL, "sent_at" timestamp, "created_at" timestamp, "updated_at" timestamp, CONSTRAINT fk_category_notifications_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id"), CONSTRAINT fk_category_notifications_category_id FOREIGN KEY ("category_id") REFERENCES "categories" ("id")) 
  [1m[36m (3.4ms)[0m  [1mCREATE INDEX "fk__category_notifications_user_id" ON "category_notifications" ("user_id")[0m
  [1m[35m (2.8ms)[0m  CREATE INDEX "fk__category_notifications_category_id" ON "category_notifications" ("category_id")
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20141015005248"]]
  [1m[35m (2.5ms)[0m  COMMIT
Migrating to AddCardCompanyAndTransactionTidIntoContributions (20141016184006)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "contributions" ADD COLUMN "acquirer_name" text
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "contributions" ADD COLUMN "acquirer_tid" text[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20141016184006"]]
  [1m[36m (2.0ms)[0m  [1mCOMMIT[0m
Migrating to RemoveOnlineDaysDefault (20141017211215)
  [1m[35m (0.9ms)[0m  BEGIN
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "projects" ALTER COLUMN "online_days" SET DEFAULT NULL[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20141017211215"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
Migrating to AdjustContributionReportsView (20141020150821)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.8ms)[0m  [1mDROP VIEW "contribution_reports"[0m
  [1m[35m (3.3ms)[0m        CREATE OR REPLACE VIEW contribution_reports AS
        SELECT b.project_id,
           u.name,
           replace(b.value::text, '.', ',') as value,
           replace(r.minimum_value::text, '.', ',') as minimum_value,
           r.description,
           b.payment_method,
           b.payment_choice,
           replace(b.payment_service_fee::text, '.', ',') as payment_service_fee,
           b.key,
           (b.created_at)::date AS created_at,
           (b.confirmed_at)::date AS confirmed_at,
           u.email,
           b.payer_email,
           b.payer_name,
           COALESCE(b.payer_document, u.cpf) AS cpf,
           u.address_street,
           u.address_complement,
           u.address_number,
           u.address_neighbourhood,
           u.address_city,
           u.address_state,
           u.address_zip_code,
           b.state
          FROM ((contributions b
            JOIN users u ON ((u.id = b.user_id)))
            LEFT JOIN rewards r ON ((r.id = b.reward_id)))
         WHERE
         b.project_id = 7743 AND
         b.state in ('confirmed', 'refunded', 'requested_refund')

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20141020150821"]]
  [1m[35m (2.1ms)[0m  COMMIT
Migrating to FixProjectFinancials (20141020154325)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (5.1ms)[0m       DROP VIEW project_financials;
     CREATE OR REPLACE VIEW project_financials AS
     WITH catarse_fee_percentage AS (
         SELECT c.value::numeric AS total,
            1::numeric - c.value::numeric AS complement
           FROM settings c
          WHERE c.name = 'catarse_fee'::text
        ), catarse_base_url AS (
         SELECT c.value
           FROM settings c
          WHERE c.name = 'base_url'::text
        )
 SELECT p.id AS project_id, p.name, u.moip_login AS moip, p.goal,
    pt.pledged AS reached, pt.total_payment_service_fee AS moip_tax,
    cp.total * pt.pledged AS catarse_fee,
    pt.pledged * cp.complement AS repass_value,
    to_char(expires_at(p.*) AT TIME ZONE coalesce((SELECT value FROM settings WHERE name = 'timezone'), 'America/Sao_Paulo'), 'dd/mm/yyyy'::text) AS expires_at,
    (catarse_base_url.value || '/admin/reports/contribution_reports.csv?project_id='::text) || p.id AS contribution_report,
    p.state
   FROM projects p
   JOIN users u ON u.id = p.user_id
   LEFT JOIN project_totals pt ON pt.project_id = p.id
  CROSS JOIN catarse_fee_percentage cp
  CROSS JOIN catarse_base_url;

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20141020154325"]]
  [1m[35m (2.2ms)[0m  COMMIT
Migrating to FixContributionReports (20141021163107)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (1.0ms)[0m  DROP VIEW "contribution_reports"
  [1m[36m (3.3ms)[0m  [1m    CREATE OR REPLACE VIEW contribution_reports AS
      SELECT b.project_id,
         u.name,
         replace(b.value::text, '.', ',') as value,
         replace(r.minimum_value::text, '.', ',') as minimum_value,
         r.description,
         b.payment_method,
         b.payment_choice,
         replace(b.payment_service_fee::text, '.', ',') as payment_service_fee,
         b.key,
         (b.created_at)::date AS created_at,
         (b.confirmed_at)::date AS confirmed_at,
         u.email,
         b.payer_email,
         b.payer_name,
         COALESCE(b.payer_document, u.cpf) AS cpf,
         u.address_street,
         u.address_complement,
         u.address_number,
         u.address_neighbourhood,
         u.address_city,
         u.address_state,
         u.address_zip_code,
         b.state
        FROM ((contributions b
          JOIN users u ON ((u.id = b.user_id)))
          LEFT JOIN rewards r ON ((r.id = b.reward_id)))
       WHERE
       b.state in ('confirmed', 'refunded', 'requested_refund')
[0m
  [1m[35mSQL (1.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20141021163107"]]
  [1m[36m (4.3ms)[0m  [1mCOMMIT[0m
Migrating to AddInstallmentValueIntoContributions (20141022161050)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "contributions" ADD COLUMN "installment_value" decimal[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20141022161050"]]
  [1m[36m (2.4ms)[0m  [1mCOMMIT[0m
Migrating to FixUserNameOnContributionsReportsForProjectOwner (20141105145528)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (1.1ms)[0m  [1mDROP VIEW "contribution_reports_for_project_owners"[0m
  [1m[35m (4.3ms)[0m        CREATE OR REPLACE VIEW contribution_reports_for_project_owners AS
      SELECT
        b.project_id,
        coalesce(r.id, 0) as reward_id,
        p.user_id as project_owner_id,
        r.description as reward_description,
        b.confirmed_at::date,
        b.value as contribution_value,
        (b.value* (SELECT value::numeric FROM settings WHERE name = 'catarse_fee') ) as service_fee,
        u.email as user_email,
        coalesce(u.name, u.full_name) as user_name,
        b.payer_email as payer_email,
        b.payment_method,
        b.anonymous,
        b.state as state,
        coalesce(u.address_street, b.address_street) as street,
        coalesce(u.address_complement, b.address_complement) as complement,
        coalesce(u.address_number, b.address_number) as address_number,
        coalesce(u.address_neighbourhood, b.address_neighbourhood) as neighbourhood,
        coalesce(u.address_city, b.address_city) as city,
        coalesce(u.address_state, b.address_state) as address_state,
        coalesce(u.address_zip_code, b.address_zip_code) as zip_code
      FROM
        contributions b
      JOIN users u ON u.id = b.user_id
      JOIN projects p ON b.project_id = p.id
      LEFT JOIN rewards r ON r.id = b.reward_id
      WHERE
        b.state IN ('confirmed', 'waiting_confirmation');

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20141105145528"]]
  [1m[35m (2.4ms)[0m  COMMIT
Migrating to AddOperatorToContributionReportsView (20141124194951)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (1.2ms)[0m  DROP VIEW "contribution_reports"
  [1m[36m (3.1ms)[0m  [1m    CREATE OR REPLACE VIEW contribution_reports AS
      SELECT b.project_id,
         u.name,
         replace(b.value::text, '.', ',') as value,
         replace(r.minimum_value::text, '.', ',') as minimum_value,
         r.description,
         b.payment_method,
         b.acquirer_name,
         b.acquirer_tid,
         b.payment_choice,
         replace(b.payment_service_fee::text, '.', ',') as payment_service_fee,
         b.key,
         (b.created_at)::date AS created_at,
         (b.confirmed_at)::date AS confirmed_at,
         u.email,
         b.payer_email,
         b.payer_name,
         COALESCE(b.payer_document, u.cpf) AS cpf,
         u.address_street,
         u.address_complement,
         u.address_number,
         u.address_neighbourhood,
         u.address_city,
         u.address_state,
         u.address_zip_code,
         b.state
        FROM ((contributions b
          JOIN users u ON ((u.id = b.user_id)))
          LEFT JOIN rewards r ON ((r.id = b.reward_id)))
       WHERE
       b.state in ('confirmed', 'refunded', 'requested_refund')
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20141124194951"]]
  [1m[36m (3.6ms)[0m  [1mCOMMIT[0m
Migrating to AddCpfToContributionReports (20141126182211)
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36m (2.5ms)[0m  [1mDROP VIEW "contribution_reports_for_project_owners"[0m
  [1m[35m (3.6ms)[0m        CREATE OR REPLACE VIEW contribution_reports_for_project_owners AS
      SELECT
        b.project_id,
        coalesce(r.id, 0) as reward_id,
        p.user_id as project_owner_id,
        r.description as reward_description,
        b.confirmed_at::date,
        b.value as contribution_value,
        (b.value* (SELECT value::numeric FROM settings WHERE name = 'catarse_fee') ) as service_fee,
        u.email as user_email,
        u.cpf as cpf,
        coalesce(u.name, u.full_name) as user_name,
        b.payer_email as payer_email,
        b.payment_method,
        b.anonymous,
        b.state as state,
        coalesce(u.address_street, b.address_street) as street,
        coalesce(u.address_complement, b.address_complement) as complement,
        coalesce(u.address_number, b.address_number) as address_number,
        coalesce(u.address_neighbourhood, b.address_neighbourhood) as neighbourhood,
        coalesce(u.address_city, b.address_city) as city,
        coalesce(u.address_state, b.address_state) as address_state,
        coalesce(u.address_zip_code, b.address_zip_code) as zip_code
      FROM
        contributions b
      JOIN users u ON u.id = b.user_id
      JOIN projects p ON b.project_id = p.id
      LEFT JOIN rewards r ON r.id = b.reward_id
      WHERE
        b.state IN ('confirmed', 'waiting_confirmation');

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20141126182211"]]
  [1m[35m (2.1ms)[0m  COMMIT
Migrating to AddDeliverAtToReport (20141127215219)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (1.1ms)[0m  DROP VIEW "contribution_reports_for_project_owners"
  [1m[36m (5.0ms)[0m  [1m      CREATE OR REPLACE VIEW contribution_reports_for_project_owners AS
      SELECT
        b.project_id,
        coalesce(r.id, 0) as reward_id,
        p.user_id as project_owner_id,
        r.description as reward_description,
        r.deliver_at::date as deliver_at,
        b.confirmed_at::date,
        b.value as contribution_value,
        (b.value* (SELECT value::numeric FROM settings WHERE name = 'catarse_fee') ) as service_fee,
        u.email as user_email,
        u.cpf as cpf,
        coalesce(u.name, u.full_name) as user_name,
        b.payer_email as payer_email,
        b.payment_method,
        b.anonymous,
        b.state as state,
        coalesce(u.address_street, b.address_street) as street,
        coalesce(u.address_complement, b.address_complement) as complement,
        coalesce(u.address_number, b.address_number) as address_number,
        coalesce(u.address_neighbourhood, b.address_neighbourhood) as neighbourhood,
        coalesce(u.address_city, b.address_city) as city,
        coalesce(u.address_state, b.address_state) as address_state,
        coalesce(u.address_zip_code, b.address_zip_code) as zip_code
      FROM
        contributions b
      JOIN users u ON u.id = b.user_id
      JOIN projects p ON b.project_id = p.id
      LEFT JOIN rewards r ON r.id = b.reward_id
      WHERE
        b.state IN ('confirmed', 'waiting_confirmation');
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20141127215219"]]
  [1m[36m (2.3ms)[0m  [1mCOMMIT[0m
Migrating to AddAuthenticationTokenIntoUsers (20141201132605)
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36m (20.2ms)[0m  [1mALTER TABLE "users" ADD COLUMN "authentication_token" text DEFAULT md5(random()::text || clock_timestamp()::text) NOT NULL[0m
  [1m[35m (4.8ms)[0m  CREATE UNIQUE INDEX "index_users_on_authentication_token" ON "users" ("authentication_token")
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20141201132605"]]
  [1m[35m (2.6ms)[0m  COMMIT
Migrating to AddBudgetToProjects (20141215153054)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "projects" ADD COLUMN "budget" text
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20141215153054"]]
  [1m[35m (2.0ms)[0m  COMMIT
Migrating to AddFullNameToReport (20141215171306)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (1.5ms)[0m  DROP VIEW "contribution_reports_for_project_owners"
  [1m[36m (3.9ms)[0m  [1m        CREATE OR REPLACE VIEW contribution_reports_for_project_owners AS
        SELECT
          b.project_id,
          coalesce(r.id, 0) as reward_id,
          p.user_id as project_owner_id,
          r.description as reward_description,
          r.deliver_at::date as deliver_at,
          b.confirmed_at::date,
          b.value as contribution_value,
          (b.value* (SELECT value::numeric FROM settings WHERE name = 'catarse_fee') ) as service_fee,
          u.email as user_email,
          u.cpf as cpf,
          u.full_name as user_full_name,
          u.name as user_name,
          b.payer_email as payer_email,
          b.payment_method,
          b.anonymous,
          b.state as state,
          coalesce(u.address_street, b.address_street) as street,
          coalesce(u.address_complement, b.address_complement) as complement,
          coalesce(u.address_number, b.address_number) as address_number,
          coalesce(u.address_neighbourhood, b.address_neighbourhood) as neighbourhood,
          coalesce(u.address_city, b.address_city) as city,
          coalesce(u.address_state, b.address_state) as address_state,
          coalesce(u.address_zip_code, b.address_zip_code) as zip_code
        FROM
          contributions b
        JOIN users u ON u.id = b.user_id
        JOIN projects p ON b.project_id = p.id
        LEFT JOIN rewards r ON r.id = b.reward_id
        WHERE
          b.state IN ('confirmed', 'waiting_confirmation');
[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20141215171306"]]
  [1m[36m (2.4ms)[0m  [1mCOMMIT[0m
Migrating to AddZeroCreditsToUsers (20141222180815)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (23.5ms)[0m  [1mALTER TABLE "users" ADD COLUMN "zero_credits" boolean DEFAULT 'f'[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20141222180815"]]
  [1m[36m (2.8ms)[0m  [1mCOMMIT[0m
Migrating to UsePayerNameOnReport (20141223144205)
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36m (1.1ms)[0m  [1mDROP VIEW "contribution_reports_for_project_owners"[0m
  [1m[35m (4.9ms)[0m            CREATE OR REPLACE VIEW contribution_reports_for_project_owners AS
          SELECT
            b.project_id,
            coalesce(r.id, 0) as reward_id,
            p.user_id as project_owner_id,
            r.description as reward_description,
            r.deliver_at::date as deliver_at,
            b.confirmed_at::date,
            b.value as contribution_value,
            (b.value* (SELECT value::numeric FROM settings WHERE name = 'catarse_fee') ) as service_fee,
            u.email as user_email,
            u.cpf as cpf,
            b.payer_name as user_full_name,
            u.name as user_name,
            b.payer_email as payer_email,
            b.payment_method,
            b.anonymous,
            b.state as state,
            coalesce(u.address_street, b.address_street) as street,
            coalesce(u.address_complement, b.address_complement) as complement,
            coalesce(u.address_number, b.address_number) as address_number,
            coalesce(u.address_neighbourhood, b.address_neighbourhood) as neighbourhood,
            coalesce(u.address_city, b.address_city) as city,
            coalesce(u.address_state, b.address_state) as address_state,
            coalesce(u.address_zip_code, b.address_zip_code) as zip_code
          FROM
            contributions b
          JOIN users u ON u.id = b.user_id
          JOIN projects p ON b.project_id = p.id
          LEFT JOIN rewards r ON r.id = b.reward_id
          WHERE
            b.state IN ('confirmed', 'waiting_confirmation');

  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20141223144205"]]
  [1m[35m (1.7ms)[0m  COMMIT
Migrating to UseFullNameOnReport (20150107173250)
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35m (1.4ms)[0m  DROP VIEW "contribution_reports_for_project_owners"
  [1m[36m (5.0ms)[0m  [1m          CREATE OR REPLACE VIEW contribution_reports_for_project_owners AS
          SELECT
            b.project_id,
            coalesce(r.id, 0) as reward_id,
            p.user_id as project_owner_id,
            r.description as reward_description,
            r.deliver_at::date as deliver_at,
            b.confirmed_at::date,
            b.value as contribution_value,
            (b.value* (SELECT value::numeric FROM settings WHERE name = 'catarse_fee') ) as service_fee,
            u.email as user_email,
            u.cpf as cpf,
            u.full_name as user_full_name,
            u.name as user_name,
            b.payer_email as payer_email,
            b.payment_method,
            b.anonymous,
            b.state as state,
            coalesce(u.address_street, b.address_street) as street,
            coalesce(u.address_complement, b.address_complement) as complement,
            coalesce(u.address_number, b.address_number) as address_number,
            coalesce(u.address_neighbourhood, b.address_neighbourhood) as neighbourhood,
            coalesce(u.address_city, b.address_city) as city,
            coalesce(u.address_state, b.address_state) as address_state,
            coalesce(u.address_zip_code, b.address_zip_code) as zip_code
          FROM
            contributions b
          JOIN users u ON u.id = b.user_id
          JOIN projects p ON b.project_id = p.id
          LEFT JOIN rewards r ON r.id = b.reward_id
          WHERE
            b.state IN ('confirmed', 'waiting_confirmation');
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150107173250"]]
  [1m[36m (2.7ms)[0m  [1mCOMMIT[0m
Migrating to DropProjectConstraints (20150112121053)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.7ms)[0m  [1m      ALTER TABLE projects DROP CONSTRAINT projects_about_not_blank;
      ALTER TABLE projects DROP CONSTRAINT projects_headline_not_blank;
      ALTER TABLE projects DROP CONSTRAINT projects_headline_length_within;
[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150112121053"]]
  [1m[36m (3.1ms)[0m  [1mCOMMIT[0m
Migrating to CreateUserLinks (20150114194835)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.7ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'user_links'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (6.6ms)[0m  CREATE TABLE "user_links" ("id" serial primary key, "link" text NOT NULL, "user_id" integer NOT NULL, "created_at" timestamp, "updated_at" timestamp, CONSTRAINT fk_user_links_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id")) 
  [1m[36m (2.4ms)[0m  [1mCREATE INDEX "fk__user_links_user_id" ON "user_links" ("user_id")[0m
  [1m[35mSQL (1.0ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150114194835"]]
  [1m[36m (2.0ms)[0m  [1mCOMMIT[0m
Migrating to CreateProjectBudgets (20150119151029)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.7ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'project_budgets'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (8.1ms)[0m  CREATE TABLE "project_budgets" ("id" serial primary key, "project_id" integer NOT NULL, "name" text NOT NULL, "value" decimal(8,2) NOT NULL, "created_at" timestamp, "updated_at" timestamp, CONSTRAINT fk_project_budgets_project_id FOREIGN KEY ("project_id") REFERENCES "projects" ("id")) 
  [1m[36m (3.5ms)[0m  [1mCREATE INDEX "fk__project_budgets_project_id" ON "project_budgets" ("project_id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150119151029"]]
  [1m[36m (1.9ms)[0m  [1mCOMMIT[0m
Migrating to CleanBanks (20150121155841)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (7.1ms)[0m  [1m
    UPDATE bank_accounts SET bank_id = 131 WHERE bank_id IN (70, 73);
    UPDATE bank_accounts SET bank_id = 23 WHERE bank_id IN (19, 21);
    UPDATE bank_accounts SET bank_id = 127 WHERE bank_id = 128;
    DELETE FROM banks WHERE id IN (70, 73, 19, 21, 128);
    [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150121155841"]]
  [1m[36m (2.5ms)[0m  [1mCOMMIT[0m
Migrating to AddAboutToUsers (20150122153621)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "users" ADD COLUMN "about" text[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150122153621"]]
  [1m[36m (2.1ms)[0m  [1mCOMMIT[0m
Migrating to AddAboutHtmlToUser (20150127023738)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.3ms)[0m  [1mALTER TABLE "users" ADD COLUMN "about_html" text[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150127023738"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
Migrating to AddCoverIntoUsers (20150127034613)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.6ms)[0m  [1mALTER TABLE "users" ADD COLUMN "cover_image" text[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150127034613"]]
  [1m[36m (1.9ms)[0m  [1mCOMMIT[0m
Migrating to AddUserFeedsView (20150127043459)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (5.8ms)[0m  [1m      create or replace view user_feeds as
SELECT events.*, age(events.event_date) AS age FROM
((
-- new projects on categories that I follow
  select
    u.id as user_id,
    p.name as title,
    'new_project_on_category' as event_type,
    p.online_date as event_date,
    'CategoryFollower' as from_type,
    cf.id as from_id,
    'Project' as to_type,
    p.id as to_id,
    null as common_type,
    null as common_id
  from users u
  inner join category_followers cf on cf.user_id = u.id
  inner join projects p on p.category_id = cf.category_id
  where p.state in ('online', 'failed', 'successful', 'waiting_funds')
)
UNION ALL
(
-- Posts of projcts that i've backed
  select
    c.user_id as user_id,
    post.title as title,
    'project_posts' as event_type,
    post.created_at as event_date,
    'Project' as from_type,
    post.project_id as from_id,
    'ProjectPost' as to_type,
    post.id as to_id,
    'Contribution' as common_type,
    (
      select id from contributions
      where state in ('confirmed', 'refunded', 'requested_refund')
      and user_id = c.user_id and project_id = c.project_id
      limit 1
    ) as common_id
  from (select DISTINCT user_id, project_id from contributions where state in ('confirmed', 'refunded', 'requested_refund')) c
  inner join project_posts post on post.project_id = c.project_id
 )
 UNION ALL
(
-- finished projects that i've contributed
  select
    c.user_id as user_id,
    p.name as title,
    'contributed_project_finished' as event_type,
    p.expires_at as event_date,
    null as common_type,
    null as common_id,
    'Project' as to_type,
    p.id as to_id,
    'Contribution' as from_type,
    (
      select id from contributions
      where state in ('confirmed', 'refunded', 'requested_refund')
      and user_id = c.user_id and project_id = c.project_id
      limit 1
    ) as from_id
  from (select DISTINCT user_id, project_id from contributions where state in ('confirmed', 'refunded', 'requested_refund')) c
  inner join projects p on p.id = c.project_id
  where p.state in ('successful', 'failed')
 )
 UNION ALL
(
-- new projects from owner of projects that i've contributed
  select
    c.user_id as user_id,
    p2.name as title,
    'new_project_from_common_owner' as event_type,
    p2.online_date as event_date,
    'User' as from_type,
    p2.user_id as from_id,
    'Project' as to_type,
    p2.id as to_id,
    'Contribution' as common_type,
    (
      select id from contributions
      where state in ('confirmed', 'refunded', 'requested_refund')
      and user_id = c.user_id and project_id = c.project_id
      limit 1
    ) as common_id
  from (
    select DISTINCT user_id, project_id from contributions where state in ('confirmed', 'refunded', 'requested_refund')
  ) c
  join projects p on p.id = c.project_id
  join projects p2 on p2.user_id = p.user_id
  where p2.id <> p.id
  and p.state in ('online', 'waiting_funds', 'failed', 'successful')
  and p2.state in ('online', 'waiting_funds', 'failed', 'successful')
 )
 )
 events
 ORDER BY age
[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150127043459"]]
  [1m[36m (2.2ms)[0m  [1mCOMMIT[0m
Migrating to AdjustUserFeed (20150128024748)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (6.3ms)[0m  [1m      drop view user_feeds;
      create or replace view user_feeds as
      SELECT events.*, age(events.event_date) AS age FROM
      ((
      -- new projects on categories that I follow
        select
          u.id as user_id,
          p.name as title,
          'new_project_on_category' as event_type,
          p.online_date as event_date,
          'CategoryFollower' as from_type,
          cf.id as from_id,
          'Project' as to_type,
          p.id as to_id
        from users u
        inner join category_followers cf on cf.user_id = u.id
        inner join projects p on p.category_id = cf.category_id
        where p.state in ('online', 'failed', 'successful', 'waiting_funds')
      )
      UNION ALL
      (
      -- Posts of projcts that i've backed
        select
          c.user_id as user_id,
          post.title as title,
          'project_posts' as event_type,
          post.created_at as event_date,
          'Project' as from_type,
          post.project_id as from_id,
          'ProjectPost' as to_type,
          post.id as to_id
        from (select DISTINCT user_id, project_id from contributions where state in ('confirmed', 'refunded', 'requested_refund')) c
        inner join project_posts post on post.project_id = c.project_id
       )
       UNION ALL
      (
      -- finished projects that i've contributed
        select
          c.user_id as user_id,
          p.name as title,
          'contributed_project_finished' as event_type,
          p.expires_at as event_date,
          'Contribution' as from_type,
          (
            select id from contributions
            where state in ('confirmed', 'refunded', 'requested_refund')
            and user_id = c.user_id and project_id = c.project_id
            limit 1
          ) as from_id,
          'Project' as to_type,
          p.id as to_id
        from (select DISTINCT user_id, project_id from contributions where state in ('confirmed', 'refunded', 'requested_refund')) c
        inner join projects p on p.id = c.project_id
        where p.state in ('successful', 'failed')
       )
       UNION ALL
      (
      -- new projects from owner of projects that i've contributed
        select
          DISTINCT
            c.user_id as user_id,
            p2.name as title,
            'new_project_from_common_owner' as event_type,
            p2.online_date as event_date,
            'User' as from_type,
            p2.user_id as from_id,
            'Project' as to_type,
            p2.id as to_id
        from (
          select DISTINCT user_id, project_id from contributions where state in ('confirmed', 'refunded', 'requested_refund')
        ) c
        join projects p on p.id = c.project_id
        join projects p2 on p2.user_id = p.user_id
        where p2.id <> p.id
        and p.state in ('online', 'waiting_funds', 'failed', 'successful')
        and p2.state in ('online', 'waiting_funds', 'failed', 'successful')
       )
       )
       events
       ORDER BY age
[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150128024748"]]
  [1m[36m (2.1ms)[0m  [1mCOMMIT[0m
Migrating to AddCardBrandToContributions (20150202222147)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "contributions" ADD COLUMN "card_brand" text[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150202222147"]]
  [1m[36m (2.1ms)[0m  [1mCOMMIT[0m
Migrating to AddPermalinkToUser (20150204200139)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "users" ADD COLUMN "permalink" text[0m
  [1m[35m (3.0ms)[0m  CREATE UNIQUE INDEX "index_users_on_permalink" ON "users" ("permalink")
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150204200139"]]
  [1m[35m (0.7ms)[0m  COMMIT
Migrating to CreateProjectAccount (20150210141644)
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35m (1.5ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'project_accounts'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36m (1.6ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'project_accounts'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (0.8ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'project_accounts'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36m (8.6ms)[0m  [1mCREATE TABLE "project_accounts" ("id" serial primary key, "user_id" integer NOT NULL, "project_id" integer NOT NULL, "bank_id" integer NOT NULL, "full_name" text NOT NULL, "email" text NOT NULL, "cpf" text NOT NULL, "state_inscription" text, "address_street" text NOT NULL, "address_number" text NOT NULL, "address_complement" text, "address_city" text NOT NULL, "address_neighbourhood" text NOT NULL, "address_state" text NOT NULL, "address_zip_code" text NOT NULL, "phone_number" text NOT NULL, "agency" text NOT NULL, "agency_digit" text NOT NULL, "account" text NOT NULL, "account_digit" text NOT NULL, "owner_name" text NOT NULL, "owner_document" text NOT NULL, "created_at" timestamp, "updated_at" timestamp, CONSTRAINT fk_project_accounts_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id"), CONSTRAINT fk_project_accounts_project_id FOREIGN KEY ("project_id") REFERENCES "projects" ("id"), CONSTRAINT fk_project_accounts_bank_id FOREIGN KEY ("bank_id") REFERENCES "banks" ("id")) [0m
  [1m[35m (2.5ms)[0m  CREATE INDEX "index_project_accounts_on_user_id" ON "project_accounts" ("user_id")
  [1m[36m (2.5ms)[0m  [1mCREATE INDEX "index_project_accounts_on_project_id" ON "project_accounts" ("project_id")[0m
  [1m[35m (2.2ms)[0m  CREATE INDEX "index_project_accounts_on_bank_id" ON "project_accounts" ("bank_id")
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150210141644"]]
  [1m[35m (2.0ms)[0m  COMMIT
Migrating to MigrateUserBankAccountToProjectAccount (20150211141507)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (1.7ms)[0m  
    INSERT INTO project_accounts
    (user_id, project_id, bank_id, full_name, email, cpf, state_inscription, address_zip_code, address_state, address_neighbourhood, address_city, address_complement, address_number, address_street, phone_number, agency_digit, agency, account_digit, account,owner_document, owner_name, created_at, updated_at)
    SELECT
      u.id, p.id, bank_id, COALESCE(full_name, u.name), email, cpf, state_inscription, address_zip_code, address_state, address_neighbourhood, address_city, address_complement, address_number, address_street, phone_number, agency_digit, agency, account_digit, account,owner_document, owner_name, p.created_at, p.updated_at
    FROM
      projects p JOIN users u on u.id = p.user_id JOIN bank_accounts ba on ba.user_id = u.id
    WHERE
      ba.bank_id IS NOT NULL AND cpf IS NOT NULL AND agency_digit IS NOT NULL AND phone_number IS NOT NULL;
    
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150211141507"]]
  [1m[35m (2.0ms)[0m  COMMIT
Migrating to RemoveUserFromProjectAccount (20150213120420)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.8ms)[0m  ALTER TABLE "project_accounts" DROP "user_id"
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150213120420"]]
  [1m[35m (0.8ms)[0m  COMMIT
Migrating to CreateApiSchema (20150217203920)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.6ms)[0m  CREATE SCHEMA "1";
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150217203920"]]
  [1m[35m (0.7ms)[0m  COMMIT
Migrating to AddFullTextIndexToProjects (20150218194719)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "projects" ADD COLUMN "full_text_index" tsvector
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150218194719"]]
  [1m[35m (0.6ms)[0m  COMMIT
Migrating to CreateTriggerToUpdateProjectFullTextIndex (20150218194824)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (3.9ms)[0m      CREATE OR REPLACE FUNCTION update_full_text_index() RETURNS trigger AS $$
    BEGIN
      new.full_text_index :=  setweight(to_tsvector('portuguese', unaccent(coalesce(NEW.name::text, ''))), 'A') || 
                              setweight(to_tsvector('portuguese', unaccent(coalesce(NEW.permalink::text, ''))), 'C') || 
                              setweight(to_tsvector('portuguese', unaccent(coalesce(NEW.headline::text, ''))), 'B');
      new.full_text_index :=  new.full_text_index || setweight(to_tsvector('portuguese', unaccent(coalesce((SELECT c.name_pt FROM categories c WHERE c.id = NEW.category_id)::text, ''))), 'B');
      RETURN NEW;
    END;
    $$ LANGUAGE plpgsql;

    CREATE TRIGGER update_full_text_index 
    BEFORE INSERT OR UPDATE OF name, permalink, headline
    ON projects
    FOR EACH ROW
    EXECUTE PROCEDURE update_full_text_index();

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150218194824"]]
  [1m[35m (0.6ms)[0m  COMMIT
Migrating to CreateIndexForProjectsFullTextIndex (20150218203123)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (2.7ms)[0m  
    CREATE INDEX projects_full_text_index_ix ON projects USING GIN (full_text_index); 
    
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150218203123"]]
  [1m[35m (0.6ms)[0m  COMMIT
Migrating to CreateIndexOnContributionsCreatedAt (20150219193410)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (3.5ms)[0m  CREATE INDEX "index_contributions_on_created_at" ON "contributions" ("created_at")
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150219193410"]]
  [1m[35m (0.7ms)[0m  COMMIT
Migrating to AddAccountTypeToProjectAccount (20150221160747)
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "project_accounts" ADD COLUMN "account_type" text
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150221160747"]]
  [1m[35m (0.7ms)[0m  COMMIT
Migrating to CreatePayments (20150305162209)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.7ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'payments'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36m (0.6ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'payments'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (8.3ms)[0m  CREATE TABLE "payments" ("id" serial primary key, "contribution_id" integer NOT NULL, "state" text NOT NULL, "key" text NOT NULL, "gateway" text NOT NULL, "gateway_id" text, "gateway_fee" decimal, "gateway_data" json, "payment_method" text NOT NULL, "value" decimal NOT NULL, "installments" integer DEFAULT 1 NOT NULL, "installment_value" decimal NOT NULL, "paid_at" timestamp, "refused_at" timestamp, "pending_refund_at" timestamp, "refunded_at" timestamp, "created_at" timestamp, "updated_at" timestamp, CONSTRAINT fk_payments_contribution_id FOREIGN KEY ("contribution_id") REFERENCES "contributions" ("id")) 
  [1m[36m (3.3ms)[0m  [1mCREATE INDEX "fk__payments_contribution_id" ON "payments" ("contribution_id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150305162209"]]
  [1m[36m (3.4ms)[0m  [1mCOMMIT[0m
Migrating to AddPaymentIdToPaymentNotifications (20150305210654)
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36m (0.3ms)[0m  [1mALTER TABLE "payment_notifications" ADD COLUMN "payment_id" integer[0m
  [1m[35m (1.3ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'payment_notifications'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36m (2.8ms)[0m  [1mCREATE INDEX "fk__payment_notifications_payment_id" ON "payment_notifications" ("payment_id")[0m
  [1m[35m (1.5ms)[0m  ALTER TABLE "payment_notifications" ADD CONSTRAINT fk_payment_notifications_payment_id FOREIGN KEY ("payment_id") REFERENCES "payments" ("id")
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150305210654"]]
  [1m[35m (2.1ms)[0m  COMMIT
Migrating to CreateContributionDetails (20150306163559)
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35m (3.8ms)[0m      CREATE OR REPLACE VIEW "1".contribution_details AS
    SELECT
      pa.id,
      c.id AS contribution_id,
      pa.id AS payment_id,
      c.user_id,
      c.project_id,
      c.reward_id,
      p.permalink,
      p.name AS project_name,
      u.name AS user_name,
      u.email,
      u.uploaded_image,
      pa.key,
      pa.value,
      pa.installments,
      pa.installment_value,
      pa.state,
      c.anonymous,
      c.payer_email,
      pa.gateway,
      pa.gateway_id,
      pa.gateway_fee,
      pa.gateway_data,
      pa.payment_method,
      pa.state AS payment_state,
      EXISTS(SELECT 1 FROM rewards r WHERE r.id = c.reward_id) AS "has_rewards",
      pa.created_at
    FROM
      projects p
      JOIN contributions c ON c.project_id = p.id
      JOIN payments pa ON c.id = pa.contribution_id
      JOIN users u ON c.user_id = u.id;

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150306163559"]]
  [1m[35m (2.3ms)[0m  COMMIT
Migrating to AddSchema1ToSearchPath (20150306165758)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  SELECT current_database();
  [1m[36m (1.5ms)[0m  [1mALTER DATABASE talentoxide_development SET search_path TO "$user", public, "1";[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150306165758"]]
  [1m[36m (1.7ms)[0m  [1mCOMMIT[0m
Migrating to MigrateContributionsDataToPayments (20150306170412)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (4.1ms)[0m  [1m    INSERT INTO payments (
      id,
      contribution_id,
      state,
      key,
      gateway,
      gateway_id,
      gateway_fee,
      gateway_data,
      payment_method,
      value,
      installments,
      installment_value,
      created_at,
      updated_at,
      paid_at,
      refused_at,
      pending_refund_at,
      refunded_at
    )
    SELECT
      c.id,
      c.id,
      CASE c.state
        WHEN 'pending' THEN 'pending'
        WHEN 'waiting_confirmation' THEN 'pending'
        WHEN 'refunded' THEN 'refunded'
        WHEN 'refunded_and_canceled' THEN 'deleted'
        WHEN 'requested_refund' THEN 'pending_refund'
        WHEN 'requested_refund' THEN 'pending_refund'
        WHEN 'canceled' THEN 'refused'
        WHEN 'invalid_payment' THEN 'refused'
        WHEN 'confirmed' THEN 'paid'
        WHEN 'chargeback' THEN 'chargeback'
        ELSE c.state
      END,
      coalesce(c.key, md5(id::text || current_timestamp::text)),
      CASE 
        WHEN c.credits THEN 'Credits'
        WHEN c.payment_method = 'Credits' THEN 'Credits'
        WHEN c.payment_method = 'PayPal' THEN 'PayPal'
        WHEN c.payment_method = 'Pagarme' THEN 'Pagarme'
        ELSE 'MoIP'
      END,
      c.payment_id,
      c.payment_service_fee,
      '{}',
      CASE
        WHEN c.credits OR c.payment_method = 'Credits' THEN 'Creditos'
        WHEN c.payment_choice IS NULL THEN 'Desconhecido'
        ELSE c.payment_choice
      END,
      c.value,
      c.installments,
      COALESCE(c.installment_value, c.value),
      c.created_at,
      c.updated_at,
      c.confirmed_at,
      c.canceled_at,
      c.requested_refund_at,
      c.refunded_at
    FROM
      contributions c
    WHERE
      c.state <> 'deleted';
    UPDATE payment_notifications SET payment_id = contribution_id WHERE EXISTS (SELECT true FROM payments p WHERE p.id = payment_notifications.contribution_id);
    SELECT setval('payments_id_seq', (SELECT max(id) FROM payments));
[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150306170412"]]
  [1m[36m (2.0ms)[0m  [1mCOMMIT[0m
Migrating to CreateRedactorAssets (20150309130152)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.7ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'redactor_assets'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (0.6ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'redactor_assets'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36m (8.2ms)[0m  [1mCREATE TABLE "redactor_assets" ("id" serial primary key, "user_id" integer, "data_file_name" character varying(255) NOT NULL, "data_content_type" character varying(255), "data_file_size" integer, "assetable_id" integer, "assetable_type" character varying(30), "type" character varying(30), "width" integer, "height" integer, "created_at" timestamp, "updated_at" timestamp, CONSTRAINT fk_redactor_assets_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id")) [0m
  [1m[35m (4.4ms)[0m  CREATE INDEX "fk__redactor_assets_user_id" ON "redactor_assets" ("user_id")
  [1m[36m (3.2ms)[0m  [1mCREATE INDEX "idx_redactor_assetable_type" ON "redactor_assets" ("assetable_type", "type", "assetable_id")[0m
  [1m[35m (3.4ms)[0m  CREATE INDEX "idx_redactor_assetable" ON "redactor_assets" ("assetable_type", "assetable_id")
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150309130152"]]
  [1m[35m (2.2ms)[0m  COMMIT
Migrating to RemoteNullConstraintFromComment (20150310134924)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "project_posts" ALTER "comment" DROP NOT NULL
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150310134924"]]
  [1m[35m (0.7ms)[0m  COMMIT
Migrating to AddSubscribedToProjectPostsToUsers (20150317203333)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (26.1ms)[0m  ALTER TABLE "users" ADD COLUMN "subscribed_to_project_posts" boolean DEFAULT 't'
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150317203333"]]
  [1m[35m (2.7ms)[0m  COMMIT
Migrating to ChangeProjectIdToNotNullInUnsubscribes (20150317203743)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (1.2ms)[0m  
    UPDATE users SET subscribed_to_project_posts = false
    WHERE EXISTS (SELECT true FROM unsubscribes u WHERE u.user_id = users.id AND u.project_id IS NULL);
    DELETE FROM unsubscribes WHERE project_id IS NULL;
    
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "unsubscribes" ALTER "project_id" SET NOT NULL[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150317203743"]]
  [1m[36m (2.2ms)[0m  [1mCOMMIT[0m
Migrating to AddBudgetHtmlToProjects (20150317230642)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.1ms)[0m  [1mALTER TABLE "projects" ADD COLUMN "budget_html" text[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150317230642"]]
  [1m[36m (2.2ms)[0m  [1mCOMMIT[0m
Migrating to RemoveOldColumns (20150318155437)
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36m (1.3ms)[0m  [1mDROP VIEW projects_for_home[0m
  [1m[35m (5.8ms)[0m      CREATE VIEW projects_for_home AS
    WITH recommended_projects AS (SELECT 'recommended'::text AS origin, recommends.id, recommends.name, recommends.user_id, recommends.category_id, recommends.goal,  recommends.headline, recommends.video_url, recommends.short_url, recommends.created_at, recommends.updated_at, recommends.about_html, recommends.recommended, recommends.home_page_comment, recommends.permalink, recommends.video_thumbnail, recommends.state, recommends.online_days, recommends.online_date, recommends.traffic_sources, recommends.more_links, recommends.first_contributions AS first_backers, recommends.uploaded_image, recommends.video_embed_url FROM projects recommends WHERE (recommends.recommended AND ((recommends.state)::text = 'online'::text)) ORDER BY random() LIMIT 3), recents_projects AS (SELECT 'recents'::text AS origin, recents.id, recents.name, recents.user_id, recents.category_id, recents.goal, recents.headline, recents.video_url, recents.short_url, recents.created_at, recents.updated_at, recents.about_html, recents.recommended, recents.home_page_comment, recents.permalink, recents.video_thumbnail, recents.state, recents.online_days, recents.online_date, recents.traffic_sources, recents.more_links, recents.first_contributions AS first_backers, recents.uploaded_image, recents.video_embed_url FROM projects recents WHERE ((((recents.state)::text = 'online'::text) AND ((now() - recents.online_date) <= '5 days'::interval)) AND (NOT (recents.id IN (SELECT recommends.id FROM recommended_projects recommends)))) ORDER BY random() LIMIT 3), expiring_projects AS (SELECT 'expiring'::text AS origin, expiring.id, expiring.name, expiring.user_id, expiring.category_id, expiring.goal, expiring.headline, expiring.video_url, expiring.short_url, expiring.created_at, expiring.updated_at, expiring.about_html, expiring.recommended, expiring.home_page_comment, expiring.permalink, expiring.video_thumbnail, expiring.state, expiring.online_days, expiring.online_date, expiring.traffic_sources, expiring.more_links, expiring.first_contributions AS first_backers, expiring.uploaded_image, expiring.video_embed_url FROM projects expiring WHERE ((((expiring.state)::text = 'online'::text) AND (expires_at(expiring.*) <= (now() + '14 days'::interval))) AND (NOT (expiring.id IN (SELECT recommends.id FROM recommended_projects recommends UNION SELECT recents.id FROM recents_projects recents)))) ORDER BY random() LIMIT 3) (SELECT recommended_projects.origin, recommended_projects.id, recommended_projects.name, recommended_projects.user_id, recommended_projects.category_id, recommended_projects.goal,  recommended_projects.headline, recommended_projects.video_url, recommended_projects.short_url, recommended_projects.created_at, recommended_projects.updated_at, recommended_projects.about_html, recommended_projects.recommended, recommended_projects.home_page_comment, recommended_projects.permalink, recommended_projects.video_thumbnail, recommended_projects.state, recommended_projects.online_days, recommended_projects.online_date, recommended_projects.traffic_sources, recommended_projects.more_links, recommended_projects.first_backers, recommended_projects.uploaded_image, recommended_projects.video_embed_url FROM recommended_projects UNION SELECT recents_projects.origin, recents_projects.id, recents_projects.name, recents_projects.user_id, recents_projects.category_id, recents_projects.goal,  recents_projects.headline, recents_projects.video_url, recents_projects.short_url, recents_projects.created_at, recents_projects.updated_at, recents_projects.about_html, recents_projects.recommended, recents_projects.home_page_comment, recents_projects.permalink, recents_projects.video_thumbnail, recents_projects.state, recents_projects.online_days, recents_projects.online_date, recents_projects.traffic_sources, recents_projects.more_links, recents_projects.first_backers, recents_projects.uploaded_image, recents_projects.video_embed_url FROM recents_projects) UNION SELECT expiring_projects.origin, expiring_projects.id, expiring_projects.name, expiring_projects.user_id, expiring_projects.category_id, expiring_projects.goal, expiring_projects.headline, expiring_projects.video_url, expiring_projects.short_url, expiring_projects.created_at, expiring_projects.updated_at, expiring_projects.about_html, expiring_projects.recommended, expiring_projects.home_page_comment, expiring_projects.permalink, expiring_projects.video_thumbnail, expiring_projects.state, expiring_projects.online_days, expiring_projects.online_date, expiring_projects.traffic_sources, expiring_projects.more_links, expiring_projects.first_backers, expiring_projects.uploaded_image, expiring_projects.video_embed_url FROM expiring_projects;

  [1m[36m (0.5ms)[0m  [1mALTER TABLE "projects" DROP "about"[0m
  [1m[35m (0.7ms)[0m  ALTER TABLE "users" DROP "bio"
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "users" DROP "image_url"[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "users" DROP "project_updates"
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "users" DROP "about"[0m
  [1m[35m (0.9ms)[0m  ALTER TABLE "project_posts" DROP "comment"
  [1m[36mSQL (1.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150318155437"]]
  [1m[35m (2.1ms)[0m  COMMIT
Migrating to AddCardKeyIntoCreditCards (20150319042359)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "credit_cards" ADD COLUMN "card_key" text
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "credit_cards" ALTER "subscription_id" DROP NOT NULL[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150319042359"]]
  [1m[36m (1.8ms)[0m  [1mCOMMIT[0m
Migrating to AddCompatibilityFunctions (20150320133058)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.7ms)[0m  [1m    CREATE OR REPLACE FUNCTION confirmed_states() RETURNS text[] AS $$
      SELECT '{"paid", "pending_refund", "refunded"}'::text[];
    $$ LANGUAGE SQL;

    CREATE OR REPLACE FUNCTION is_confirmed(contributions) RETURNS boolean AS $$
      SELECT EXISTS (
        SELECT true
        FROM 
          payments p 
        WHERE p.contribution_id = $1.id AND p.state = 'paid'
      );
    $$ LANGUAGE SQL;

    CREATE OR REPLACE FUNCTION was_confirmed(contributions) RETURNS boolean AS $$
      SELECT EXISTS (
        SELECT true
        FROM 
          payments p 
        WHERE p.contribution_id = $1.id AND p.state = ANY(confirmed_states())
      );
    $$ LANGUAGE SQL;
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150320133058"]]
  [1m[36m (2.5ms)[0m  [1mCOMMIT[0m
Migrating to RefactorContributionReports (20150320135444)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (6.1ms)[0m  [1m    DROP VIEW contribution_reports;
    CREATE OR REPLACE VIEW "1".contribution_reports AS
      SELECT 
        b.project_id,
        u.name,
        replace(b.value::text, '.'::text, ','::text) AS value,
        replace(r.minimum_value::text, '.'::text, ','::text) AS minimum_value,
        r.description,
        p.gateway,
        p.gateway_data->'acquirer_name' AS acquirer_name,
        p.gateway_data->'tid' AS acquirer_tid,
        p.payment_method,
        replace(p.gateway_fee::text, '.'::text, ','::text) AS payment_service_fee,
        p.key,
        b.created_at::date AS created_at,
        p.paid_at::date AS confirmed_at,
        u.email,
        b.payer_email,
        b.payer_name,
        COALESCE(b.payer_document, u.cpf) AS cpf,
        u.address_street,
        u.address_complement,
        u.address_number,
        u.address_neighbourhood,
        u.address_city,
        u.address_state,
        u.address_zip_code,
        p.state
      FROM contributions b
        JOIN users u ON u.id = b.user_id
        JOIN payments p ON p.contribution_id = b.id
        LEFT JOIN rewards r ON r.id = b.reward_id
      WHERE p.state::text = ANY (ARRAY['paid'::character varying::text, 'refunded'::character varying::text, 'pending_refund'::character varying::text]);
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150320135444"]]
  [1m[36m (2.0ms)[0m  [1mCOMMIT[0m
Migrating to RefactorRecommendations (20150320135621)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (6.1ms)[0m  [1m    DROP VIEW recommendations;
    CREATE OR REPLACE VIEW "1".recommendations AS
      SELECT 
        recommendations.user_id,
        recommendations.project_id,
        sum(recommendations.count)::bigint AS count
      FROM ( 
        SELECT 
          b.user_id,
          recommendations_1.id AS project_id,
          count(DISTINCT recommenders.user_id) AS count
        FROM 
          contributions b
          JOIN contributions backers_same_projects USING (project_id)
          JOIN contributions recommenders ON recommenders.user_id = backers_same_projects.user_id
          JOIN projects recommendations_1 ON recommendations_1.id = recommenders.project_id
        WHERE 
          b.was_confirmed
          AND backers_same_projects.was_confirmed
          AND recommenders.was_confirmed
          AND b.updated_at > (now() - '6 mons'::interval) 
          AND recommenders.updated_at > (now() - '2 mons'::interval) 
          AND recommendations_1.state::text = 'online'::text 
          AND b.user_id <> backers_same_projects.user_id 
          AND recommendations_1.id <> b.project_id AND NOT (EXISTS (
            SELECT true AS bool
            FROM contributions b2
            WHERE b2.was_confirmed AND b2.user_id = b.user_id AND b2.project_id = recommendations_1.id)
          )
          GROUP BY b.user_id, recommendations_1.id
          UNION
          SELECT 
            b.user_id,
            recommendations_1.id AS project_id,
            0 AS count
          FROM 
            contributions b
            JOIN projects p ON b.project_id = p.id
            JOIN projects recommendations_1 ON recommendations_1.category_id = p.category_id
          WHERE b.was_confirmed AND recommendations_1.state::text = 'online'::text
      ) recommendations
      WHERE NOT (EXISTS (
        SELECT true AS bool
        FROM contributions b2
        WHERE b2.was_confirmed AND b2.user_id = recommendations.user_id AND b2.project_id = recommendations.project_id)
      )
      GROUP BY recommendations.user_id, recommendations.project_id
      ORDER BY sum(recommendations.count)::bigint DESC;
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150320135621"]]
  [1m[36m (2.3ms)[0m  [1mCOMMIT[0m
Migrating to CreateDbheroDataclips (20150322232709)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (7.6ms)[0m  [1mCREATE TABLE "dbhero_dataclips" ("id" serial primary key, "description" text NOT NULL, "raw_query" text NOT NULL, "token" text NOT NULL, "user" text, "private" boolean DEFAULT 'f' NOT NULL, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (2.6ms)[0m  CREATE UNIQUE INDEX "index_dbhero_dataclips_on_token" ON "dbhero_dataclips" ("token")
  [1m[36m (3.0ms)[0m  [1mCREATE INDEX "index_dbhero_dataclips_on_user" ON "dbhero_dataclips" ("user")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150322232709"]]
  [1m[36m (1.9ms)[0m  [1mCOMMIT[0m
Migrating to MigrateFullName (20150324235028)
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36m (1.3ms)[0m  [1m      UPDATE users set name = full_name where full_name is not null;
[0m
  [1m[35m (3.3ms)[0m  DROP VIEW "contribution_reports_for_project_owners"
  [1m[36m (4.3ms)[0m  [1m          CREATE OR REPLACE VIEW contribution_reports_for_project_owners AS
          SELECT
            b.project_id,
            coalesce(r.id, 0) as reward_id,
            p.user_id as project_owner_id,
            r.description as reward_description,
            r.deliver_at::date as deliver_at,
            b.confirmed_at::date,
            b.value as contribution_value,
            (b.value* (SELECT value::numeric FROM settings WHERE name = 'catarse_fee') ) as service_fee,
            u.email as user_email,
            u.cpf as cpf,
            u.name as user_name,
            b.payer_email as payer_email,
            b.payment_method,
            b.anonymous,
            b.state as state,
            coalesce(u.address_street, b.address_street) as street,
            coalesce(u.address_complement, b.address_complement) as complement,
            coalesce(u.address_number, b.address_number) as address_number,
            coalesce(u.address_neighbourhood, b.address_neighbourhood) as neighbourhood,
            coalesce(u.address_city, b.address_city) as city,
            coalesce(u.address_state, b.address_state) as address_state,
            coalesce(u.address_zip_code, b.address_zip_code) as zip_code
          FROM
            contributions b
          JOIN users u ON u.id = b.user_id
          JOIN projects p ON b.project_id = p.id
          LEFT JOIN rewards r ON r.id = b.reward_id
          WHERE
            b.state IN ('confirmed', 'waiting_confirmation');
[0m
  [1m[35m (0.8ms)[0m  ALTER TABLE "users" DROP "full_name"
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150324235028"]]
  [1m[35m (2.5ms)[0m  COMMIT
Migrating to RefactorContributionReportsForProjectOwners (20150325135455)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (6.4ms)[0m       DROP VIEW contribution_reports_for_project_owners;
     CREATE OR REPLACE VIEW "1".contribution_reports_for_project_owners AS
     SELECT b.project_id,
        COALESCE(r.id, 0) AS reward_id,
        p.user_id AS project_owner_id,
        r.description AS reward_description,
        r.deliver_at::date AS deliver_at,
        pa.paid_at::date AS confirmed_at,
        pa.value AS contribution_value,
        pa.value * (( SELECT settings.value::numeric AS value
               FROM settings
              WHERE settings.name = 'catarse_fee'::text)) AS service_fee,
        u.email AS user_email,
        COALESCE(b.payer_document, u.cpf) AS cpf,
        u.name AS user_name,
        b.payer_email,
        pa.gateway,
        b.anonymous,
        pa.state,
        COALESCE(u.address_street, b.address_street) AS street,
        COALESCE(u.address_complement, b.address_complement) AS complement,
        COALESCE(u.address_number, b.address_number) AS address_number,
        COALESCE(u.address_neighbourhood, b.address_neighbourhood) AS neighbourhood,
        COALESCE(u.address_city, b.address_city) AS city,
        COALESCE(u.address_state, b.address_state) AS address_state,
        COALESCE(u.address_zip_code, b.address_zip_code) AS zip_code
       FROM contributions b
         JOIN users u ON u.id = b.user_id
         JOIN projects p ON b.project_id = p.id
         JOIN payments pa ON pa.contribution_id = b.id
         LEFT JOIN rewards r ON r.id = b.reward_id
      WHERE pa.state::text = ANY (ARRAY['paid'::character varying, 'pending'::character varying]::text[]);

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150325135455"]]
  [1m[35m (2.1ms)[0m  COMMIT
Migrating to RefactorUserTotals (20150326160558)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (3.0ms)[0m        CREATE OR REPLACE FUNCTION uses_credits(payments) RETURNS boolean AS $$
        SELECT $1.gateway = 'Credits';
      $$ LANGUAGE SQL;
      DROP VIEW IF EXISTS user_totals_detail;
      DROP VIEW user_totals;
      CREATE VIEW "1".user_totals AS
      SELECT b.user_id AS id,
        b.user_id,
        count(DISTINCT b.project_id) AS total_contributed_projects,
        sum(pa.value) AS sum,
        count(DISTINCT b.id) AS count,
        sum(
            CASE
                WHEN p.state::text <> 'failed'::text AND NOT pa.uses_credits THEN 0::numeric
                WHEN p.state::text = 'failed'::text AND pa.uses_credits THEN 0::numeric
                WHEN p.state::text = 'failed'::text AND ((pa.state::text = ANY (ARRAY['pending_refund'::character varying::text, 'refunded'::character varying::text])) AND NOT pa.uses_credits OR pa.uses_credits AND NOT (pa.state::text = ANY (ARRAY['pending_refund'::character varying::text, 'refunded'::character varying::text]))) THEN 0::numeric
                WHEN p.state::text = 'failed'::text AND NOT pa.uses_credits AND pa.state::text = 'paid'::text THEN pa.value
                ELSE pa.value * (-1)::numeric
            END) AS credits
      FROM 
        contributions b
        JOIN payments pa ON b.id = pa.contribution_id
        JOIN projects p ON b.project_id = p.id
      WHERE pa.state::text = ANY (confirmed_states())
      GROUP BY b.user_id;

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150326160558"]]
  [1m[35m (2.7ms)[0m  COMMIT
Migrating to RefactorProjectTotals (20150326180807)
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35m (4.1ms)[0m        DROP VIEW IF EXISTS project_financials;
      DROP VIEW project_totals;
      CREATE VIEW "1".project_totals AS
      SELECT c.project_id,
        sum(p.value) AS pledged,
        sum(p.value) / projects.goal * 100::numeric AS progress,
        sum(p.gateway_fee) AS total_payment_service_fee,
        count(DISTINCT c.id) AS total_contributions
      FROM 
        contributions c
        JOIN projects ON c.project_id = projects.id
        JOIN payments p ON p.contribution_id = c.id
      WHERE p.state::text = ANY (confirmed_states())
      GROUP BY c.project_id, projects.id;

  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150326180807"]]
  [1m[35m (2.5ms)[0m  COMMIT
Migrating to RefactorStatistics (20150326183059)
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35m (2.7ms)[0m        DROP VIEW statistics;
      CREATE OR REPLACE VIEW "1".statistics AS
      SELECT
        (SELECT count(*) FROM users) AS total_users,
        contributions_totals.total_contributions,
        contributions_totals.total_contributors,
        contributions_totals.total_contributed,
        projects_totals.total_projects,
        projects_totals.total_projects_success,
        projects_totals.total_projects_online
      FROM 
        (
          SELECT 
            count(DISTINCT c.id) AS total_contributions,
            count(DISTINCT c.user_id) AS total_contributors,
            sum(p.value) AS total_contributed
          FROM 
            contributions c
            JOIN payments p ON p.contribution_id = c.id
          WHERE p.state::text = ANY (confirmed_states())
        ) contributions_totals,
        (
          SELECT count(*) AS total_projects,
            count(
                CASE
                    WHEN projects.state::text = 'successful'::text THEN 1
                    ELSE NULL::integer
                END) AS total_projects_success,
            count(
                CASE
                    WHEN projects.state::text = 'online'::text THEN 1
                    ELSE NULL::integer
                END) AS total_projects_online
          FROM projects
          WHERE projects.state::text <> ALL (ARRAY['draft'::character varying::text, 'rejected'::character varying::text])
        ) projects_totals;

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150326183059"]]
  [1m[35m (2.1ms)[0m  COMMIT
Migrating to RefactorCanRefundFunction (20150330180921)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.6ms)[0m      CREATE OR REPLACE FUNCTION can_refund(contributions) RETURNS boolean AS $$
      SELECT
        $1.was_confirmed AND
        EXISTS(
          SELECT true
          FROM projects p
          WHERE p.id = $1.project_id and p.state = 'failed'
        )
    $$ LANGUAGE sql;

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150330180921"]]
  [1m[35m (2.4ms)[0m  COMMIT
Migrating to RemoveNotNullFromBank (20150408154506)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (1.5ms)[0m  ALTER TABLE "project_accounts" ALTER COLUMN "bank_id" TYPE integer
  [1m[36m (0.3ms)[0m  [1mALTER TABLE "project_accounts" ALTER "bank_id" DROP NOT NULL[0m
  [1m[35m (0.7ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'project_accounts'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36m (0.7ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'project_accounts'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "project_accounts" DROP CONSTRAINT fk_project_accounts_bank_id
  [1m[36m (3.0ms)[0m  [1mCREATE INDEX "fk__project_accounts_bank_id" ON "project_accounts" ("bank_id")[0m
  [1m[35m (2.4ms)[0m  ALTER TABLE "project_accounts" ADD CONSTRAINT fk_project_accounts_bank_id FOREIGN KEY ("bank_id") REFERENCES "banks" ("id")
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150408154506"]]
  [1m[35m (2.3ms)[0m  COMMIT
Migrating to MergeProjectAccountsFields (20150409173450)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.6ms)[0m        update project_accounts set owner_name = full_name, owner_document = cpf where cpf IS NOT NULL AND full_name IS NOT NULL;

  [1m[36m (0.4ms)[0m  [1mALTER TABLE "project_accounts" DROP "full_name"[0m
  [1m[35m (1.0ms)[0m  ALTER TABLE "project_accounts" DROP "cpf"
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150409173450"]]
  [1m[35m (2.2ms)[0m  COMMIT
Migrating to AddDatesToContributionDetails (20150415142035)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (4.5ms)[0m      DROP VIEW "1".contribution_details;
    CREATE OR REPLACE VIEW "1".contribution_details AS
    SELECT
      pa.id,
      c.id AS contribution_id,
      pa.id AS payment_id,
      c.user_id,
      c.project_id,
      c.reward_id,
      p.permalink,
      p.name AS project_name,
      u.name AS user_name,
      u.email,
      u.uploaded_image,
      pa.key,
      pa.value,
      pa.installments,
      pa.installment_value,
      pa.state,
      c.anonymous,
      c.payer_email,
      pa.gateway,
      pa.gateway_id,
      pa.gateway_fee,
      pa.gateway_data,
      pa.payment_method,
      pa.state AS payment_state,
      EXISTS(SELECT 1 FROM rewards r WHERE r.id = c.reward_id) AS "has_rewards",
      pa.created_at,
      pa.paid_at,
      pa.refused_at,
      pa.pending_refund_at,
      pa.refunded_at
    FROM
      projects p
      JOIN contributions c ON c.project_id = p.id
      JOIN payments pa ON c.id = pa.contribution_id
      JOIN users u ON c.user_id = u.id;

  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150415142035"]]
  [1m[35m (2.4ms)[0m  COMMIT
Migrating to AdjustContributionDetailsToHandleWithPendingAt (20150415165652)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (6.0ms)[0m      DROP VIEW "1".contribution_details;
    CREATE OR REPLACE VIEW "1".contribution_details AS
    SELECT
      pa.id,
      c.id AS contribution_id,
      pa.id AS payment_id,
      c.user_id,
      c.project_id,
      c.reward_id,
      p.permalink,
      p.name AS project_name,
      u.name AS user_name,
      u.email,
      u.uploaded_image,
      pa.key,
      pa.value,
      pa.installments,
      pa.installment_value,
      pa.state,
      c.anonymous,
      c.payer_email,
      pa.gateway,
      pa.gateway_id,
      pa.gateway_fee,
      pa.gateway_data,
      pa.payment_method,
      pa.state AS payment_state,
      EXISTS(SELECT 1 FROM rewards r WHERE r.id = c.reward_id) AS "has_rewards",
      pa.created_at,
      pa.created_at as pending_at,
      pa.paid_at,
      pa.refused_at,
      pa.pending_refund_at,
      pa.refunded_at
    FROM
      projects p
      JOIN contributions c ON c.project_id = p.id
      JOIN payments pa ON c.id = pa.contribution_id
      JOIN users u ON c.user_id = u.id;

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150415165652"]]
  [1m[35m (2.0ms)[0m  COMMIT
Migrating to ChangePaymentsInstallmentsValueNull (20150420204243)
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "payments" ALTER "installment_value" DROP NOT NULL
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150420204243"]]
  [1m[35m (2.1ms)[0m  COMMIT
Migrating to AddExpiresAtToProjects (20150423142646)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (2.5ms)[0m  
    DROP VIEW IF EXISTS user_feeds;
    DROP VIEW IF EXISTS financial_reports;
    DROP VIEW IF EXISTS projects_for_home;
    DROP VIEW IF EXISTS project_financials;
    DROP FUNCTION expires_at(projects);
    
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "projects" ADD COLUMN "expires_at" timestamp[0m
  [1m[35m (1.6ms)[0m   CREATE OR REPLACE VIEW financial_reports AS 
      SELECT p.name,
    u.moip_login,
    p.goal,
    p.expires_at,
    p.state
   FROM projects p
     JOIN users u ON u.id = p.user_id;
  [1m[36m (5.4ms)[0m  [1m      CREATE VIEW projects_for_home AS
    WITH recommended_projects AS (SELECT 'recommended'::text AS origin, recommends.id, recommends.name, recommends.user_id, recommends.category_id, recommends.goal,  recommends.headline, recommends.video_url, recommends.short_url, recommends.created_at, recommends.updated_at, recommends.about_html, recommends.recommended, recommends.home_page_comment, recommends.permalink, recommends.video_thumbnail, recommends.state, recommends.online_days, recommends.online_date, recommends.traffic_sources, recommends.more_links, recommends.first_contributions AS first_backers, recommends.uploaded_image, recommends.video_embed_url FROM projects recommends WHERE (recommends.recommended AND ((recommends.state)::text = 'online'::text)) ORDER BY random() LIMIT 3), recents_projects AS (SELECT 'recents'::text AS origin, recents.id, recents.name, recents.user_id, recents.category_id, recents.goal, recents.headline, recents.video_url, recents.short_url, recents.created_at, recents.updated_at, recents.about_html, recents.recommended, recents.home_page_comment, recents.permalink, recents.video_thumbnail, recents.state, recents.online_days, recents.online_date, recents.traffic_sources, recents.more_links, recents.first_contributions AS first_backers, recents.uploaded_image, recents.video_embed_url FROM projects recents WHERE ((((recents.state)::text = 'online'::text) AND ((now() - recents.online_date) <= '5 days'::interval)) AND (NOT (recents.id IN (SELECT recommends.id FROM recommended_projects recommends)))) ORDER BY random() LIMIT 3), expiring_projects AS (SELECT 'expiring'::text AS origin, expiring.id, expiring.name, expiring.user_id, expiring.category_id, expiring.goal, expiring.headline, expiring.video_url, expiring.short_url, expiring.created_at, expiring.updated_at, expiring.about_html, expiring.recommended, expiring.home_page_comment, expiring.permalink, expiring.video_thumbnail, expiring.state, expiring.online_days, expiring.online_date, expiring.traffic_sources, expiring.more_links, expiring.first_contributions AS first_backers, expiring.uploaded_image, expiring.video_embed_url FROM projects expiring WHERE ((((expiring.state)::text = 'online'::text) AND (expiring.expires_at <= (now() + '14 days'::interval))) AND (NOT (expiring.id IN (SELECT recommends.id FROM recommended_projects recommends UNION SELECT recents.id FROM recents_projects recents)))) ORDER BY random() LIMIT 3) (SELECT recommended_projects.origin, recommended_projects.id, recommended_projects.name, recommended_projects.user_id, recommended_projects.category_id, recommended_projects.goal,  recommended_projects.headline, recommended_projects.video_url, recommended_projects.short_url, recommended_projects.created_at, recommended_projects.updated_at, recommended_projects.about_html, recommended_projects.recommended, recommended_projects.home_page_comment, recommended_projects.permalink, recommended_projects.video_thumbnail, recommended_projects.state, recommended_projects.online_days, recommended_projects.online_date, recommended_projects.traffic_sources, recommended_projects.more_links, recommended_projects.first_backers, recommended_projects.uploaded_image, recommended_projects.video_embed_url FROM recommended_projects UNION SELECT recents_projects.origin, recents_projects.id, recents_projects.name, recents_projects.user_id, recents_projects.category_id, recents_projects.goal,  recents_projects.headline, recents_projects.video_url, recents_projects.short_url, recents_projects.created_at, recents_projects.updated_at, recents_projects.about_html, recents_projects.recommended, recents_projects.home_page_comment, recents_projects.permalink, recents_projects.video_thumbnail, recents_projects.state, recents_projects.online_days, recents_projects.online_date, recents_projects.traffic_sources, recents_projects.more_links, recents_projects.first_backers, recents_projects.uploaded_image, recents_projects.video_embed_url FROM recents_projects) UNION SELECT expiring_projects.origin, expiring_projects.id, expiring_projects.name, expiring_projects.user_id, expiring_projects.category_id, expiring_projects.goal, expiring_projects.headline, expiring_projects.video_url, expiring_projects.short_url, expiring_projects.created_at, expiring_projects.updated_at, expiring_projects.about_html, expiring_projects.recommended, expiring_projects.home_page_comment, expiring_projects.permalink, expiring_projects.video_thumbnail, expiring_projects.state, expiring_projects.online_days, expiring_projects.online_date, expiring_projects.traffic_sources, expiring_projects.more_links, expiring_projects.first_backers, expiring_projects.uploaded_image, expiring_projects.video_embed_url FROM expiring_projects;
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150423142646"]]
  [1m[36m (2.7ms)[0m  [1mCOMMIT[0m
Migrating to MigrateExpiresAt (20150423180704)
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36m (0.7ms)[0m  [1mUPDATE projects SET expires_at = 
 (((
  (online_date AT TIME ZONE coalesce((SELECT value FROM settings WHERE name = 'timezone'), 'America/Sao_Paulo')
   + (online_days || ' days')::interval)
)::date::text || ' 23:59:59')::timestamp AT TIME ZONE coalesce((SELECT value FROM settings WHERE name = 'timezone'), 'America/Sao_Paulo'))::timestamptz;[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150423180704"]]
  [1m[36m (2.7ms)[0m  [1mCOMMIT[0m
Migrating to CreateNewViewProjectFinancials (20150427164636)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (4.6ms)[0m  [1m     CREATE OR REPLACE VIEW project_financials AS
     WITH catarse_fee_percentage AS (
         SELECT c.value::numeric AS total,
            1::numeric - c.value::numeric AS complement
           FROM settings c
          WHERE c.name = 'catarse_fee'::text
        ), catarse_base_url AS (
         SELECT c.value
           FROM settings c
          WHERE c.name = 'base_url'::text
        )
    SELECT
      p.id AS project_id,
      p.name,
      u.moip_login AS moip,
      p.goal,
      pt.pledged AS reached,
      pt.total_payment_service_fee AS payment_tax,
      cp.total * pt.pledged AS catarse_fee,
      pt.pledged * cp.complement AS repass_value,
      to_char(expires_at(p.*) AT TIME ZONE coalesce((SELECT value FROM settings WHERE name = 'timezone'), 'America/Sao_Paulo'), 'dd/mm/yyyy'::text) AS expires_at,
      (catarse_base_url.value || '/admin/reports/contribution_reports.csv?project_id='::text) || p.id AS contribution_report,
      p.state
    FROM projects p
    JOIN users u ON u.id = p.user_id
    LEFT JOIN "1".project_totals pt ON pt.project_id = p.id
    CROSS JOIN catarse_fee_percentage cp
    CROSS JOIN catarse_base_url;
[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150427164636"]]
  [1m[36m (2.3ms)[0m  [1mCOMMIT[0m
Migrating to FixProjectsForHome (20150507022419)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (1.3ms)[0m  [1mDROP VIEW IF EXISTS projects_for_home;[0m
  [1m[35m (5.8ms)[0m        CREATE OR REPLACE VIEW projects_for_home AS
    WITH recommended_projects AS (SELECT 'recommended'::text AS origin, recommends.id, recommends.name, recommends.expires_at, recommends.user_id, recommends.category_id, recommends.goal,  recommends.headline, recommends.video_url, recommends.short_url, recommends.created_at, recommends.updated_at, recommends.about_html, recommends.recommended, recommends.home_page_comment, recommends.permalink, recommends.video_thumbnail, recommends.state, recommends.online_days, recommends.online_date, recommends.traffic_sources, recommends.more_links, recommends.first_contributions AS first_backers, recommends.uploaded_image, recommends.video_embed_url FROM projects recommends WHERE (recommends.recommended AND ((recommends.state)::text = 'online'::text)) ORDER BY random() LIMIT 3), recents_projects AS (SELECT 'recents'::text AS origin, recents.id, recents.name, recents.expires_at, recents.user_id, recents.category_id, recents.goal, recents.headline, recents.video_url, recents.short_url, recents.created_at, recents.updated_at, recents.about_html, recents.recommended, recents.home_page_comment, recents.permalink, recents.video_thumbnail, recents.state, recents.online_days, recents.online_date, recents.traffic_sources, recents.more_links, recents.first_contributions AS first_backers, recents.uploaded_image, recents.video_embed_url FROM projects recents WHERE ((((recents.state)::text = 'online'::text) AND ((now() - recents.online_date) <= '5 days'::interval)) AND (NOT (recents.id IN (SELECT recommends.id FROM recommended_projects recommends)))) ORDER BY random() LIMIT 3), expiring_projects AS (SELECT 'expiring'::text AS origin, expiring.id, expiring.name, expiring.expires_at, expiring.user_id, expiring.category_id, expiring.goal, expiring.headline, expiring.video_url, expiring.short_url, expiring.created_at, expiring.updated_at, expiring.about_html, expiring.recommended, expiring.home_page_comment, expiring.permalink, expiring.video_thumbnail, expiring.state, expiring.online_days, expiring.online_date, expiring.traffic_sources, expiring.more_links, expiring.first_contributions AS first_backers, expiring.uploaded_image, expiring.video_embed_url FROM projects expiring WHERE ((((expiring.state)::text = 'online'::text) AND (expiring.expires_at <= (now() + '14 days'::interval))) AND (NOT (expiring.id IN (SELECT recommends.id FROM recommended_projects recommends UNION SELECT recents.id FROM recents_projects recents)))) ORDER BY random() LIMIT 3) (SELECT recommended_projects.origin, recommended_projects.id, recommended_projects.name, recommended_projects.expires_at, recommended_projects.user_id, recommended_projects.category_id, recommended_projects.goal,  recommended_projects.headline, recommended_projects.video_url, recommended_projects.short_url, recommended_projects.created_at, recommended_projects.updated_at, recommended_projects.about_html, recommended_projects.recommended, recommended_projects.home_page_comment, recommended_projects.permalink, recommended_projects.video_thumbnail, recommended_projects.state, recommended_projects.online_days, recommended_projects.online_date, recommended_projects.traffic_sources, recommended_projects.more_links, recommended_projects.first_backers, recommended_projects.uploaded_image, recommended_projects.video_embed_url FROM recommended_projects UNION SELECT recents_projects.origin, recents_projects.id, recents_projects.name, recents_projects.expires_at, recents_projects.user_id, recents_projects.category_id, recents_projects.goal,  recents_projects.headline, recents_projects.video_url, recents_projects.short_url, recents_projects.created_at, recents_projects.updated_at, recents_projects.about_html, recents_projects.recommended, recents_projects.home_page_comment, recents_projects.permalink, recents_projects.video_thumbnail, recents_projects.state, recents_projects.online_days, recents_projects.online_date, recents_projects.traffic_sources, recents_projects.more_links, recents_projects.first_backers, recents_projects.uploaded_image, recents_projects.video_embed_url FROM recents_projects) UNION SELECT expiring_projects.origin, expiring_projects.id, expiring_projects.name, expiring_projects.expires_at, expiring_projects.user_id, expiring_projects.category_id, expiring_projects.goal, expiring_projects.headline, expiring_projects.video_url, expiring_projects.short_url, expiring_projects.created_at, expiring_projects.updated_at, expiring_projects.about_html, expiring_projects.recommended, expiring_projects.home_page_comment, expiring_projects.permalink, expiring_projects.video_thumbnail, expiring_projects.state, expiring_projects.online_days, expiring_projects.online_date, expiring_projects.traffic_sources, expiring_projects.more_links, expiring_projects.first_backers, expiring_projects.uploaded_image, expiring_projects.video_embed_url FROM expiring_projects;

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150507022419"]]
  [1m[35m (2.2ms)[0m  COMMIT
Migrating to AddProjectStatusToContributionDetails (20150507141628)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (5.6ms)[0m      DROP VIEW "1".contribution_details;
    CREATE OR REPLACE VIEW "1".contribution_details AS
    SELECT
      pa.id,
      c.id AS contribution_id,
      pa.id AS payment_id,
      c.user_id,
      c.project_id,
      c.reward_id,
      p.permalink,
      p.name AS project_name,
      u.name AS user_name,
      u.email,
      u.uploaded_image,
      pa.key,
      pa.value,
      pa.installments,
      pa.installment_value,
      pa.state,
      c.anonymous,
      c.payer_email,
      pa.gateway,
      pa.gateway_id,
      pa.gateway_fee,
      pa.gateway_data,
      pa.payment_method,
      p.state AS project_state,
      EXISTS(SELECT 1 FROM rewards r WHERE r.id = c.reward_id) AS "has_rewards",
      pa.created_at,
      pa.created_at as pending_at,
      pa.paid_at,
      pa.refused_at,
      pa.pending_refund_at,
      pa.refunded_at
    FROM
      projects p
      JOIN contributions c ON c.project_id = p.id
      JOIN payments pa ON c.id = pa.contribution_id
      JOIN users u ON c.user_id = u.id;

  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150507141628"]]
  [1m[35m (2.7ms)[0m  COMMIT
Migrating to AddNameFrToCategories (20150514133948)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "categories" ADD COLUMN "name_fr" character varying(255)
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150514133948"]]
  [1m[35m (2.2ms)[0m  COMMIT
Migrating to ChangeToNullTitleProjectPosts (20150518182232)
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "project_posts" ALTER "title" SET NOT NULL
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150518182232"]]
  [1m[35m (2.1ms)[0m  COMMIT
Migrating to DropCanCancelFunction (20150519154030)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  DROP FUNCTION can_cancel(contributions);
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150519154030"]]
  [1m[35m (2.3ms)[0m  COMMIT
Migrating to CreateCanDeleteFunction (20150519154711)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (2.0ms)[0m      CREATE OR REPLACE FUNCTION public.can_delete(payments)
     RETURNS boolean
     LANGUAGE sql
    AS $function$
            SELECT
              $1.state = 'pending' 
              AND
              (
                SELECT count(1) AS total_of_days
                FROM generate_series($1.created_at::date, current_date, '1 day') day
                WHERE extract(dow from day) not in (0,1)
              )  >= 5
          $function$

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150519154711"]]
  [1m[35m (2.1ms)[0m  COMMIT
Migrating to RemoveOldContributionFields (20150519172925)
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35m (0.3ms)[0m  DROP VIEW IF EXISTS temp.contribution_to_fix_details;
  [1m[36m (0.4ms)[0m  [1mDROP VIEW IF EXISTS user_feeds;[0m
  [1m[35m (0.7ms)[0m  DROP VIEW IF EXISTS contributions_by_periods;
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "contributions" DROP "confirmed_at"[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "contributions" DROP "key"
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "contributions" DROP "credits"[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "contributions" DROP "payment_method"
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "contributions" DROP "payment_token"[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "contributions" DROP "payment_id"
  [1m[36m (0.8ms)[0m  [1mALTER TABLE "contributions" DROP "state"[0m
  [1m[35m (1.2ms)[0m  ALTER TABLE "contributions" DROP "waiting_confirmation_at"
  [1m[36m (1.0ms)[0m  [1mALTER TABLE "contributions" DROP "canceled_at"[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "contributions" DROP "refunded_at"
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "contributions" DROP "requested_refund_at"[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "contributions" DROP "refunded_and_canceled_at"
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "contributions" DROP "invalid_payment_at"[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "contributions" DROP "slip_url"
  [1m[36m (0.7ms)[0m  [1mALTER TABLE "contributions" DROP "installments"[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "contributions" DROP "address_country"
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "contributions" DROP "acquirer_name"[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "contributions" DROP "acquirer_tid"
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "contributions" DROP "installment_value"[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "contributions" DROP "card_brand"
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150519172925"]]
  [1m[35m (2.7ms)[0m  COMMIT
Migrating to ChangeContributionsPayerNameNull (20150519202619)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (1.1ms)[0m  UPDATE contributions SET payer_name = (SELECT coalesce(name, email, 'Usuário ' || u.id::text) FROM users u WHERE u.id = contributions.user_id) WHERE payer_name IS NULL;
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "contributions" ALTER "payer_name" SET NOT NULL[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150519202619"]]
  [1m[36m (1.8ms)[0m  [1mCOMMIT[0m
Migrating to ChangeContributionsPayerEmailNull (20150519202707)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.7ms)[0m  [1mUPDATE contributions SET payer_email = (SELECT coalesce(email, 'usuario+sem+email@catarse.me') FROM users u WHERE u.id = contributions.user_id) WHERE payer_email IS NULL;[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "contributions" ALTER "payer_email" SET NOT NULL
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150519202707"]]
  [1m[35m (0.6ms)[0m  COMMIT
Migrating to ChangeContributionsAnonymousNull (20150519203123)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "contributions" ALTER "anonymous" SET NOT NULL
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150519203123"]]
  [1m[35m (0.7ms)[0m  COMMIT
Migrating to CreatePaymentLogs (20150519214945)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.7ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'payment_logs'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36m (7.9ms)[0m  [1mCREATE TABLE "payment_logs" ("id" serial primary key, "gateway_id" character varying(255) NOT NULL, "data" json NOT NULL, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150519214945"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
Migrating to ChangeColumnContribuniosPayerNameNull (20150521193439)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "contributions" ALTER "payer_name" DROP NOT NULL[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150521193439"]]
  [1m[36m (2.7ms)[0m  [1mCOMMIT[0m
Migrating to FixProjectFinancialsForSearch (20150525140009)
  [1m[35m (0.8ms)[0m  BEGIN
  [1m[36m (3.4ms)[0m  [1m     CREATE OR REPLACE VIEW project_financials AS(
     WITH catarse_fee_percentage AS (
         SELECT c.value::numeric AS total,
            1::numeric - c.value::numeric AS complement
           FROM settings c
          WHERE c.name = 'catarse_fee'::text
        ), catarse_base_url AS (
         SELECT c.value
           FROM settings c
          WHERE c.name = 'base_url'::text
        )
      SELECT
        p.id AS project_id,
        p.name,
        u.moip_login AS moip,
        p.goal,
        pt.pledged AS reached,
        pt.total_payment_service_fee AS payment_tax,
        cp.total * pt.pledged AS catarse_fee,
        pt.pledged * cp.complement AS repass_value,
        to_char(expires_at(p.*) AT TIME ZONE coalesce((SELECT value FROM settings WHERE name = 'timezone'), 'America/Sao_Paulo'), 'dd/mm/yyyy'::text) AS expires_at,
        (catarse_base_url.value || '/admin/reports/contribution_reports.csv?project_id='::text) || p.id AS contribution_report,
        p.state
      FROM projects p
      JOIN users u ON u.id = p.user_id
      LEFT JOIN "1".project_totals pt ON pt.project_id = p.id
      CROSS JOIN catarse_fee_percentage cp
      CROSS JOIN catarse_base_url)
[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150525140009"]]
  [1m[36m (2.3ms)[0m  [1mCOMMIT[0m
Migrating to RenameProjectsReferalLink (20150602201705)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.3ms)[0m  [1mALTER TABLE "projects" RENAME COLUMN "referal_link" TO "referral_link"[0m
  [1m[35m (2.0ms)[0m  
           SELECT distinct i.relname, d.indisunique, d.indkey, pg_get_indexdef(d.indexrelid), t.oid,
                  m.amname, pg_get_expr(d.indpred, t.oid) as conditions, pg_get_expr(d.indexprs, t.oid) as expression,
                  d.indclass
           FROM pg_class t
           INNER JOIN pg_index d ON t.oid = d.indrelid
           INNER JOIN pg_class i ON d.indexrelid = i.oid
           INNER JOIN pg_am m ON i.relam = m.oid
           WHERE i.relkind = 'i'
             AND d.indisprimary = 'f'
             AND t.relname = 'projects'
             AND i.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
          ORDER BY i.relname

  [1m[36mColumns for index index_projects_on_category_id on projects (0.8ms)[0m  [1m              SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16485
[0m
  [1m[35mOp classes for index index_projects_on_category_id on projects (0.4ms)[0m                SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)

  [1m[36mColumns for index index_projects_on_name on projects (0.6ms)[0m  [1m              SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16485
[0m
  [1m[35mOp classes for index index_projects_on_name on projects (0.3ms)[0m                SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (3126)

  [1m[36mColumns for index index_projects_on_permalink on projects (0.6ms)[0m  [1m              SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16485
[0m
  [1m[35mOp classes for index index_projects_on_permalink on projects (0.3ms)[0m                SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (3126)

  [1m[36mColumns for index index_projects_on_user_id on projects (0.6ms)[0m  [1m              SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16485
[0m
  [1m[35mOp classes for index index_projects_on_user_id on projects (0.3ms)[0m                SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)

  [1m[36mColumns for index projects_full_text_index_ix on projects (0.6ms)[0m  [1m              SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16485
[0m
  [1m[35mOp classes for index projects_full_text_index_ix on projects (0.3ms)[0m                SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (10111)

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150602201705"]]
  [1m[35m (2.0ms)[0m  COMMIT
Migrating to RenameContributionsReferalLink (20150602201957)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "contributions" RENAME COLUMN "referal_link" TO "referral_link"
  [1m[36m (1.4ms)[0m  [1m
           SELECT distinct i.relname, d.indisunique, d.indkey, pg_get_indexdef(d.indexrelid), t.oid,
                  m.amname, pg_get_expr(d.indpred, t.oid) as conditions, pg_get_expr(d.indexprs, t.oid) as expression,
                  d.indclass
           FROM pg_class t
           INNER JOIN pg_index d ON t.oid = d.indrelid
           INNER JOIN pg_class i ON d.indexrelid = i.oid
           INNER JOIN pg_am m ON i.relam = m.oid
           WHERE i.relkind = 'i'
             AND d.indisprimary = 'f'
             AND t.relname = 'contributions'
             AND i.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
          ORDER BY i.relname
[0m
  [1m[35mColumns for index fk__contributions_country_id on contributions (0.7ms)[0m                SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16465

  [1m[36mOp classes for index fk__contributions_country_id on contributions (0.3ms)[0m  [1m              SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)
[0m
  [1m[35mColumns for index index_contributions_on_created_at on contributions (0.6ms)[0m                SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16465

  [1m[36mOp classes for index index_contributions_on_created_at on contributions (0.3ms)[0m  [1m              SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (3128)
[0m
  [1m[35mColumns for index index_contributions_on_project_id on contributions (0.6ms)[0m                SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16465

  [1m[36mOp classes for index index_contributions_on_project_id on contributions (0.3ms)[0m  [1m              SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)
[0m
  [1m[35mColumns for index index_contributions_on_reward_id on contributions (0.6ms)[0m                SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16465

  [1m[36mOp classes for index index_contributions_on_reward_id on contributions (0.3ms)[0m  [1m              SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)
[0m
  [1m[35mColumns for index index_contributions_on_user_id on contributions (0.5ms)[0m                SELECT CAST(a.attnum as VARCHAR), a.attname, t.typname
              FROM pg_attribute a
              INNER JOIN pg_type t ON a.atttypid = t.oid
              WHERE a.attrelid = 16465

  [1m[36mOp classes for index index_contributions_on_user_id on contributions (0.3ms)[0m  [1m              SELECT oid, opcname FROM pg_opclass
              WHERE (NOT opcdefault) AND oid IN (1978)
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150602201957"]]
  [1m[36m (2.0ms)[0m  [1mCOMMIT[0m
Migrating to MoveStatisticsToMaterializedView (20150604044427)
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36m (9.1ms)[0m  [1m      DROP VIEW "1".statistics;
      CREATE MATERIALIZED VIEW "1".statistics AS
      SELECT
        (SELECT count(*) FROM users) AS total_users,
        contributions_totals.total_contributions,
        contributions_totals.total_contributors,
        contributions_totals.total_contributed,
        projects_totals.total_projects,
        projects_totals.total_projects_success,
        projects_totals.total_projects_online
      FROM
        (
          SELECT
            count(DISTINCT c.id) AS total_contributions,
            count(DISTINCT c.user_id) AS total_contributors,
            sum(p.value) AS total_contributed
          FROM
            contributions c
            JOIN payments p ON p.contribution_id = c.id
          WHERE p.state::text = ANY (confirmed_states())
        ) contributions_totals,
        (
          SELECT count(*) AS total_projects,
            count(
                CASE
                    WHEN projects.state::text = 'successful'::text THEN 1
                    ELSE NULL::integer
                END) AS total_projects_success,
            count(
                CASE
                    WHEN projects.state::text = 'online'::text THEN 1
                    ELSE NULL::integer
                END) AS total_projects_online
          FROM projects
          WHERE projects.state::text <> ALL (ARRAY['draft'::character varying::text, 'rejected'::character varying::text])
        ) projects_totals;
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150604044427"]]
  [1m[36m (2.0ms)[0m  [1mCOMMIT[0m
Migrating to MovesUserTotalsToMaterializedViews (20150604143801)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (9.2ms)[0m  [1m    DROP VIEW "1".user_totals;
    CREATE MATERIALIZED VIEW "1".user_totals AS
      SELECT b.user_id AS id,
        b.user_id,
        count(DISTINCT b.project_id) AS total_contributed_projects,
        sum(pa.value) AS sum,
        count(DISTINCT b.id) AS count,
        sum(
            CASE
                WHEN p.state::text <> 'failed'::text AND NOT uses_credits(pa.*) THEN 0::numeric
                WHEN p.state::text = 'failed'::text AND uses_credits(pa.*) THEN 0::numeric
                WHEN p.state::text = 'failed'::text AND ((pa.state = ANY (ARRAY['pending_refund'::character varying::text, 'refunded'::character varying::text])) AND NOT uses_credits(pa.*) OR uses_credits(pa.*) AND NOT (pa.state = ANY (ARRAY['pending_refund'::character varying::text, 'refunded'::character varying::text]))) THEN 0::numeric
                WHEN p.state::text = 'failed'::text AND NOT uses_credits(pa.*) AND pa.state = 'paid'::text THEN pa.value
                ELSE pa.value * (-1)::numeric
            END) AS credits
      FROM contributions b
        JOIN payments pa ON b.id = pa.contribution_id
        JOIN projects p ON b.project_id = p.id
      WHERE pa.state = ANY (confirmed_states())
      GROUP BY b.user_id;
[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150604143801"]]
  [1m[36m (2.3ms)[0m  [1mCOMMIT[0m
Migrating to CreatePaymentTransfers (20150605153541)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.7ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'payment_transfers'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (0.6ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'payment_transfers'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36m (0.6ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'payment_transfers'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (7.8ms)[0m  CREATE TABLE "payment_transfers" ("id" serial primary key, "user_id" integer NOT NULL, "payment_id" integer NOT NULL, "transfer_id" text NOT NULL, "transfer_data" json, "created_at" timestamp, "updated_at" timestamp, CONSTRAINT fk_payment_transfers_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id"), CONSTRAINT fk_payment_transfers_payment_id FOREIGN KEY ("payment_id") REFERENCES "payments" ("id")) 
  [1m[36m (4.1ms)[0m  [1mCREATE INDEX "fk__payment_transfers_user_id" ON "payment_transfers" ("user_id")[0m
  [1m[35m (4.3ms)[0m  CREATE INDEX "fk__payment_transfers_payment_id" ON "payment_transfers" ("payment_id")
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150605153541"]]
  [1m[35m (2.2ms)[0m  COMMIT
Migrating to AddPostgrestAuthTable (20150605192639)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (5.7ms)[0m        CREATE SCHEMA postgrest;

      CREATE TABLE postgrest.auth (
        id text NOT NULL,
        rolname name NOT NULL,
        pass character(60) NOT NULL,
        CONSTRAINT auth_pkey PRIMARY KEY (id)
      ) WITH ( OIDS=FALSE );

      CREATE FUNCTION postgrest.check_role_exists() RETURNS trigger
          LANGUAGE plpgsql
          AS $$
      begin 
      if not exists (select 1 from pg_roles as r where r.rolname = new.rolname) then
         raise foreign_key_violation using message = 'Cannot create user with unknown role: ' || new.rolname;
         return null;
       end if;
       return new;
      end
      $$;

      CREATE CONSTRAINT TRIGGER ensure_auth_role_exists
        AFTER INSERT OR UPDATE
        ON postgrest.auth
        FOR EACH ROW
        EXECUTE PROCEDURE postgrest.check_role_exists();

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150605192639"]]
  [1m[35m (1.9ms)[0m  COMMIT
Migrating to CreateAdminRole (20150605214509)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (6.3ms)[0m      DO
      $body$
    BEGIN
      IF NOT EXISTS (SELECT * FROM pg_catalog.pg_roles WHERE rolname = 'postgrest') THEN
        CREATE ROLE postgrest NOLOGIN;
      END IF;
    END
    $body$;

    DO
      $body$
    BEGIN
      IF NOT EXISTS (SELECT * FROM pg_catalog.pg_roles WHERE rolname = 'admin') THEN
        CREATE ROLE admin NOLOGIN;
      END IF;
    END
    $body$;
    -- This script assumes a role postgrest and a role anonymous already created
    GRANT usage ON SCHEMA postgrest TO admin;
    GRANT usage ON SCHEMA "1" TO admin;
    GRANT select, insert ON postgrest.auth TO admin;
    GRANT select ON ALL TABLES IN SCHEMA "1" TO admin;
    GRANT admin TO postgrest;

  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150605214509"]]
  [1m[35m (2.8ms)[0m  COMMIT
Migrating to CreateUserRole (20150605215906)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (1.1ms)[0m      DO
      $body$
    BEGIN
      IF NOT EXISTS (SELECT * FROM pg_catalog.pg_roles WHERE rolname = 'web_user') THEN
        CREATE ROLE web_user NOLOGIN;
      END IF;
    END
    $body$;
    -- This script assumes a role postgrest and a role anonymous already created
    GRANT usage ON SCHEMA "1" TO web_user;
    GRANT select ON ALL TABLES IN SCHEMA "1" TO web_user;
    GRANT web_user TO postgrest;

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150605215906"]]
  [1m[35m (0.6ms)[0m  COMMIT
Migrating to CreateUserAndPostgrestAuthSync (20150605220249)
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35m (11.2ms)[0m      CREATE EXTENSION pgcrypto;
    CREATE OR REPLACE FUNCTION postgrest.create_api_user() RETURNS TRIGGER AS $$
    BEGIN
      INSERT INTO postgrest.auth (id, rolname, pass) VALUES (new.id::text, CASE WHEN new.admin THEN 'admin' ELSE 'web_user' END, public.crypt(new.authentication_token, public.gen_salt('bf')));
      return new;
    END;
    $$ LANGUAGE plpgsql;

    CREATE OR REPLACE FUNCTION postgrest.update_api_user() RETURNS TRIGGER AS $$
    BEGIN
      UPDATE postgrest.auth SET 
        id = new.id::text,
        rolname = CASE WHEN new.admin THEN 'admin' ELSE 'web_user' END, 
        pass = CASE WHEN new.authentication_token <> old.authentication_token THEN public.crypt(new.authentication_token, public.gen_salt('bf')) ELSE pass END
      WHERE id = old.id::text;
      return new;
    END;
    $$ LANGUAGE plpgsql;

    CREATE OR REPLACE FUNCTION postgrest.delete_api_user() RETURNS TRIGGER AS $$
    BEGIN
      DELETE FROM postgrest.auth WHERE id = old.id::text;
      return old;
    END;
    $$ LANGUAGE plpgsql;

    CREATE TRIGGER create_api_user AFTER INSERT
    ON public.users
    FOR EACH ROW
    EXECUTE PROCEDURE postgrest.create_api_user();

    CREATE TRIGGER update_api_user AFTER UPDATE OF id, admin, authentication_token 
    ON public.users
    FOR EACH ROW
    EXECUTE PROCEDURE postgrest.update_api_user();

    CREATE TRIGGER delete_api_user AFTER DELETE
    ON public.users
    FOR EACH ROW
    EXECUTE PROCEDURE postgrest.delete_api_user();

  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150605220249"]]
  [1m[35m (2.1ms)[0m  COMMIT
Migrating to CreateContributorNumbers (20150608202210)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (5.7ms)[0m        CREATE MATERIALIZED VIEW public.contributor_numbers AS
      WITH confirmed AS (
          SELECT
            user_id, min(c.id) AS id
          FROM
            "1".contribution_details c
          WHERE
            c.state = ANY(confirmed_states())
          GROUP BY
            user_id
          ORDER BY
            id
      )
      SELECT user_id, row_number() OVER (ORDER BY id) AS number FROM confirmed

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150608202210"]]
  [1m[35m (2.4ms)[0m  COMMIT
Migrating to ChangePaymentSlipDeleteDate (20150624172046)
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35m (0.5ms)[0m      CREATE OR REPLACE FUNCTION can_delete(payments) RETURNS boolean AS $$
      SELECT
               $1.state = 'pending'
               AND
               (
                 SELECT count(1) AS total_of_days
                 FROM generate_series($1.created_at::date, current_date, '1 day') day
                 WHERE extract(dow from day) not in (0,1)
               )  >= 4
     $$ LANGUAGE sql;

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150624172046"]]
  [1m[35m (0.6ms)[0m  COMMIT
Migrating to AddUserProfileImgToContributionDetails (20150629204701)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (12.6ms)[0m      CREATE OR REPLACE FUNCTION public.profile_img_thumbnail(users) RETURNS text AS $$ 
    SELECT 
      'https://' || (SELECT value FROM settings WHERE name = 'aws_host') || 
      '/' || (SELECT value FROM settings WHERE name = 'aws_bucket') ||
      '/uploads/user/uploaded_image/' || $1.id::text ||
      '/thumb_avatar_' || $1.uploaded_image
    
    $$ LANGUAGE SQL STABLE;

    DROP MATERIALIZED VIEW public.contributor_numbers;
    DROP VIEW "1".contribution_details;
    CREATE OR REPLACE VIEW "1".contribution_details AS
     SELECT pa.id,
    c.id AS contribution_id,
    pa.id AS payment_id,
    c.user_id,
    c.project_id,
    c.reward_id,
    p.permalink,
    p.name AS project_name,
    u.name AS user_name,
    u.profile_img_thumbnail AS user_profile_img,
    u.email,
    u.uploaded_image,
    pa.key,
    pa.value,
    pa.installments,
    pa.installment_value,
    pa.state,
    c.anonymous,
    c.payer_email,
    pa.gateway,
    pa.gateway_id,
    pa.gateway_fee,
    pa.gateway_data,
    pa.payment_method,
    p.state AS project_state,
    (EXISTS ( SELECT 1
           FROM rewards r
          WHERE r.id = c.reward_id)) AS has_rewards,
    pa.created_at,
    pa.created_at AS pending_at,
    pa.paid_at,
    pa.refused_at,
    pa.pending_refund_at,
    pa.refunded_at
   FROM projects p
     JOIN contributions c ON c.project_id = p.id
     JOIN payments pa ON c.id = pa.contribution_id
     JOIN users u ON c.user_id = u.id;
    CREATE MATERIALIZED VIEW public.contributor_numbers AS
     WITH confirmed AS (
         SELECT c.user_id,
            min(c.id) AS id
           FROM "1".contribution_details c
          WHERE c.state = ANY (confirmed_states())
          GROUP BY c.user_id
          ORDER BY min(c.id)
        )
 SELECT confirmed.user_id,
    row_number() OVER (ORDER BY confirmed.id) AS number
   FROM confirmed;
   GRANT select ON ALL TABLES IN SCHEMA "1" TO admin;
   GRANT SELECT on settings to admin;

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150629204701"]]
  [1m[35m (2.3ms)[0m  COMMIT
Migrating to AddProjectImgToContributionDetails (20150706190911)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (10.9ms)[0m      CREATE OR REPLACE FUNCTION public.img_thumbnail(projects) RETURNS text AS $$ 
    SELECT 
      'https://' || (SELECT value FROM settings WHERE name = 'aws_host') || 
      '/' || (SELECT value FROM settings WHERE name = 'aws_bucket') ||
      '/uploads/project/uploaded_image/' || $1.id::text ||
      '/project_thumb_small_' || $1.uploaded_image
    $$ LANGUAGE SQL STABLE;

    DROP MATERIALIZED VIEW public.contributor_numbers;
    DROP VIEW "1".contribution_details;
    CREATE OR REPLACE VIEW "1".contribution_details AS
     SELECT pa.id,
    c.id AS contribution_id,
    pa.id AS payment_id,
    c.user_id,
    c.project_id,
    c.reward_id,
    p.permalink,
    p.name AS project_name,
    p.img_thumbnail AS project_img,
    u.name AS user_name,
    u.profile_img_thumbnail AS user_profile_img,
    u.email,
    pa.key,
    pa.value,
    pa.installments,
    pa.installment_value,
    pa.state,
    c.anonymous,
    c.payer_email,
    pa.gateway,
    pa.gateway_id,
    pa.gateway_fee,
    pa.gateway_data,
    pa.payment_method,
    p.state AS project_state,
    (EXISTS ( SELECT 1
           FROM rewards r
          WHERE r.id = c.reward_id)) AS has_rewards,
    pa.created_at,
    pa.created_at AS pending_at,
    pa.paid_at,
    pa.refused_at,
    pa.pending_refund_at,
    pa.refunded_at,
    (
      p.permalink
      || ' ' || p.name ||
      coalesce(' ' || u.name, '') ||
      coalesce(' ' || u.email, '') ||
      coalesce(' ' || pa.key, '') ||
      coalesce(' ' || c.payer_email, '') ||
      coalesce(' ' || pa.gateway_id, '') ||
      coalesce(' ' || (pa.gateway_data->>'acquirer_name'), '') || 
      coalesce(' ' || (pa.gateway_data->>'card_brand'), '') || 
      coalesce(' ' || (pa.gateway_data->>'tid'), '')
    ) AS search_text
   FROM projects p
     JOIN contributions c ON c.project_id = p.id
     JOIN payments pa ON c.id = pa.contribution_id
     JOIN users u ON c.user_id = u.id;
    CREATE MATERIALIZED VIEW public.contributor_numbers AS
     WITH confirmed AS (
         SELECT c.user_id,
            min(c.id) AS id
           FROM "1".contribution_details c
          WHERE c.state = ANY (confirmed_states())
          GROUP BY c.user_id
          ORDER BY min(c.id)
        )
 SELECT confirmed.user_id,
    row_number() OVER (ORDER BY confirmed.id) AS number
   FROM confirmed;
   GRANT select ON ALL TABLES IN SCHEMA "1" TO admin;
   GRANT SELECT on settings to admin;

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150706190911"]]
  [1m[35m (2.2ms)[0m  COMMIT
Migrating to AddWaitingPaymentFunc (20150707154308)
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35m (0.6ms)[0m        DROP FUNCTION public.can_delete(payments);
      CREATE OR REPLACE FUNCTION public.waiting_payment(payments) RETURNS boolean
          LANGUAGE sql
          AS $_$
            SELECT
                     $1.state = 'pending'
                     AND
                     (
                       SELECT count(1) AS total_of_days
                       FROM generate_series($1.created_at::date, current_date, '1 day') day
                       WHERE extract(dow from day) not in (0,1)
                     )  <= 4
           $_$ STABLE;

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150707154308"]]
  [1m[35m (2.4ms)[0m  COMMIT
Migrating to AddFullTextIndexToPayments (20150713153329)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "payments" ADD COLUMN "full_text_index" tsvector
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150713153329"]]
  [1m[35m (1.8ms)[0m  COMMIT
Migrating to CreateUpdatePaymentsFullTextIndex (20150713153732)
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35m (2.1ms)[0m      CREATE INDEX payments_full_text_index_ix ON payments USING GIN (full_text_index);
    CREATE FUNCTION update_payments_full_text_index() RETURNS TRIGGER AS $$
     DECLARE
       v_contribution contributions;
     BEGIN
       SELECT * INTO v_contribution FROM contributions c WHERE c.id = NEW.contribution_id;
       NEW.full_text_index :=  setweight(to_tsvector('portuguese', unaccent(coalesce(NEW.key::text, ''))), 'A') ||
                               setweight(to_tsvector('portuguese', unaccent(coalesce(NEW.gateway::text, ''))), 'A') ||
                               setweight(to_tsvector('portuguese', unaccent(coalesce(NEW.gateway_id::text, ''))), 'A') ||
                               setweight(to_tsvector('portuguese', unaccent(coalesce(NEW.state::text, ''))), 'A') ||
                               setweight(to_tsvector('portuguese', unaccent(coalesce((NEW.gateway_data->>'acquirer_name'), ''))), 'B') ||
                               setweight(to_tsvector('portuguese', unaccent(coalesce((NEW.gateway_data->>'card_brand'), ''))), 'B') ||
                               setweight(to_tsvector('portuguese', unaccent(coalesce((NEW.gateway_data->>'tid'), ''))), 'C');
       NEW.full_text_index :=  NEW.full_text_index ||
                               setweight(to_tsvector('portuguese', unaccent(coalesce(v_contribution.payer_email::text, ''))), 'A') ||
                               setweight(to_tsvector('portuguese', unaccent(coalesce(v_contribution.payer_document::text, ''))), 'A') ||
                               setweight(to_tsvector('portuguese', unaccent(coalesce(v_contribution.referral_link::text, ''))), 'B') ||
                               setweight(to_tsvector('portuguese', unaccent(coalesce(v_contribution.user_id::text, ''))), 'B') ||
                               setweight(to_tsvector('portuguese', unaccent(coalesce(v_contribution.project_id::text, ''))), 'C');
       NEW.full_text_index :=  NEW.full_text_index || (SELECT full_text_index FROM projects p WHERE p.id = v_contribution.project_id);
       RETURN NEW;
     END;
    $$ LANGUAGE plpgsql;
    CREATE TRIGGER update_payments_full_text_index 
    BEFORE INSERT OR UPDATE OF key, gateway, gateway_id, gateway_data, state
    ON payments FOR EACH ROW EXECUTE PROCEDURE update_payments_full_text_index();

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150713153732"]]
  [1m[35m (2.5ms)[0m  COMMIT
Migrating to AddsFullTextIndexToContributionDetails (20150713154753)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (9.5ms)[0m      DROP MATERIALIZED VIEW public.contributor_numbers;
    DROP VIEW "1".contribution_details;
    CREATE OR REPLACE VIEW "1".contribution_details AS
     SELECT pa.id,
    c.id AS contribution_id,
    pa.id AS payment_id,
    c.user_id,
    c.project_id,
    c.reward_id,
    p.permalink,
    p.name AS project_name,
    p.img_thumbnail AS project_img,
    p.online_date AS project_online_date,
    p.expires_at AS project_expires_at,
    u.name AS user_name,
    u.profile_img_thumbnail AS user_profile_img,
    u.email,
    pa.key,
    pa.value,
    pa.installments,
    pa.installment_value,
    pa.state,
    c.anonymous,
    c.payer_email,
    pa.gateway,
    pa.gateway_id,
    pa.gateway_fee,
    pa.gateway_data,
    pa.payment_method,
    p.state AS project_state,
    (EXISTS ( SELECT 1
           FROM rewards r
          WHERE r.id = c.reward_id)) AS has_rewards,
    pa.created_at,
    pa.created_at AS pending_at,
    pa.paid_at,
    pa.refused_at,
    pa.pending_refund_at,
    pa.refunded_at,
    pa.full_text_index
   FROM projects p
     JOIN contributions c ON c.project_id = p.id
     JOIN payments pa ON c.id = pa.contribution_id
     JOIN users u ON c.user_id = u.id;
    CREATE MATERIALIZED VIEW public.contributor_numbers AS
     WITH confirmed AS (
         SELECT c.user_id,
            min(c.id) AS id
           FROM "1".contribution_details c
          WHERE c.state = ANY (confirmed_states())
          GROUP BY c.user_id
          ORDER BY min(c.id)
        )
 SELECT confirmed.user_id,
    row_number() OVER (ORDER BY confirmed.id) AS number
   FROM confirmed;
   GRANT select ON ALL TABLES IN SCHEMA "1" TO admin;
   GRANT SELECT on settings to admin;

  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150713154753"]]
  [1m[35m (1.9ms)[0m  COMMIT
Migrating to AddDeliverAtToNotifications (20150713210123)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "category_notifications" ADD COLUMN "deliver_at" timestamp
  [1m[36m (0.7ms)[0m  [1mALTER TABLE "channel_post_notifications" ADD COLUMN "deliver_at" timestamp[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "contribution_notifications" ADD COLUMN "deliver_at" timestamp
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "project_notifications" ADD COLUMN "deliver_at" timestamp[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "project_post_notifications" ADD COLUMN "deliver_at" timestamp
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "user_notifications" ADD COLUMN "deliver_at" timestamp[0m
  [1m[35m (1.2ms)[0m  ALTER TABLE category_notifications ALTER deliver_at SET DEFAULT current_timestamp
  [1m[36m (0.4ms)[0m  [1mALTER TABLE channel_post_notifications ALTER deliver_at SET DEFAULT current_timestamp[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE contribution_notifications ALTER deliver_at SET DEFAULT current_timestamp
  [1m[36m (0.4ms)[0m  [1mALTER TABLE project_notifications ALTER deliver_at SET DEFAULT current_timestamp[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE project_post_notifications ALTER deliver_at SET DEFAULT current_timestamp
  [1m[36m (0.4ms)[0m  [1mALTER TABLE user_notifications ALTER deliver_at SET DEFAULT current_timestamp[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150713210123"]]
  [1m[36m (2.4ms)[0m  [1mCOMMIT[0m
Migrating to AddsUserNameToPaymentsFti (20150714190441)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.5ms)[0m  [1m    CREATE OR REPLACE FUNCTION update_payments_full_text_index() RETURNS TRIGGER AS $$
     DECLARE
       v_contribution contributions;
       v_name text;
     BEGIN
       SELECT * INTO v_contribution FROM contributions c WHERE c.id = NEW.contribution_id;
       SELECT u.name INTO v_name FROM users u WHERE u.id = v_contribution.user_id;
       NEW.full_text_index :=  setweight(to_tsvector(unaccent(coalesce(NEW.key::text, ''))), 'A') ||
                               setweight(to_tsvector(unaccent(coalesce(NEW.gateway::text, ''))), 'A') ||
                               setweight(to_tsvector(unaccent(coalesce(NEW.gateway_id::text, ''))), 'A') ||
                               setweight(to_tsvector(unaccent(coalesce(NEW.state::text, ''))), 'A') ||
                               setweight(to_tsvector(unaccent(coalesce((NEW.gateway_data->>'acquirer_name'), ''))), 'B') ||
                               setweight(to_tsvector(unaccent(coalesce((NEW.gateway_data->>'card_brand'), ''))), 'B') ||
                               setweight(to_tsvector(unaccent(coalesce((NEW.gateway_data->>'tid'), ''))), 'C');
       NEW.full_text_index :=  NEW.full_text_index ||
                               setweight(to_tsvector(unaccent(coalesce(v_contribution.payer_email::text, ''))), 'A') ||
                               setweight(to_tsvector(unaccent(coalesce(v_contribution.payer_document::text, ''))), 'A') ||
                               setweight(to_tsvector(unaccent(coalesce(v_contribution.referral_link::text, ''))), 'B') ||
                               setweight(to_tsvector(unaccent(coalesce(v_contribution.user_id::text, ''))), 'B') ||
                               setweight(to_tsvector(unaccent(coalesce(v_contribution.project_id::text, ''))), 'C');
       NEW.full_text_index :=  NEW.full_text_index || setweight(to_tsvector(unaccent(coalesce(v_name::text, ''))), 'A');
       NEW.full_text_index :=  NEW.full_text_index || (SELECT full_text_index FROM projects p WHERE p.id = v_contribution.project_id);
       RETURN NEW;
     END;
    $$ LANGUAGE plpgsql;
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150714190441"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
Migrating to DropContributorNumbers (20150717151336)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.7ms)[0m  [1m    DROP MATERIALIZED VIEW public.contributor_numbers;
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150717151336"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
Migrating to AddIsSecondSlipFunctionAndAdjustContributionDetails (20150717154642)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (7.9ms)[0m  [1m      CREATE OR REPLACE FUNCTION public.is_second_slip(payments) RETURNS boolean
        LANGUAGE sql AS $_$
          SELECT lower($1.payment_method) = 'boletobancario' and EXISTS (select true from payments p
               where p.contribution_id = $1.contribution_id
               and p.id < $1.id
               and lower(p.payment_method) = 'boletobancario')
        $_$ STABLE;

    DROP VIEW "1".contribution_details;
    CREATE OR REPLACE VIEW "1".contribution_details AS
     SELECT
        pa.id,
        c.id AS contribution_id,
        pa.id AS payment_id,
        c.user_id,
        c.project_id,
        c.reward_id,
        p.permalink,
        p.name AS project_name,
        p.img_thumbnail AS project_img,
        p.online_date AS project_online_date,
        p.expires_at AS project_expires_at,
        p.state AS project_state,
        u.name AS user_name,
        u.profile_img_thumbnail AS user_profile_img,
        u.email,
        c.anonymous,
        c.payer_email,
        pa.key,
        pa.value,
        pa.installments,
        pa.installment_value,
        pa.state,
        pa.is_second_slip,
        pa.gateway,
        pa.gateway_id,
        pa.gateway_fee,
        pa.gateway_data,
        pa.payment_method,
        pa.created_at,
        pa.created_at AS pending_at,
        pa.paid_at,
        pa.refused_at,
        pa.pending_refund_at,
        pa.refunded_at,
        pa.full_text_index,
        (r.id IS NOT NULL) as has_rewards,
        r.minimum_value as reward_minimum_value
        FROM projects p
         JOIN contributions c ON c.project_id = p.id
         JOIN payments pa ON c.id = pa.contribution_id
         JOIN users u ON c.user_id = u.id
         LEFT JOIN rewards r ON r.id = c.reward_id;
       GRANT select ON ALL TABLES IN SCHEMA "1" TO admin;
       GRANT select ON payments TO admin;
[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150717154642"]]
  [1m[36m (2.4ms)[0m  [1mCOMMIT[0m
Migrating to AddDefaultCreatedAt (20150724142700)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (4.6ms)[0m  [1m     ALTER TABLE public.contributions ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.projects ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.payments ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.rewards ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.users ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.authorizations ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.bank_accounts ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.banks ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.categories ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.category_followers ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.category_notifications ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.channel_partners ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.channel_post_notifications ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.channel_posts ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.channels ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.settings ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.contribution_notifications ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.countries ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.credit_cards ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.dbhero_dataclips ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.oauth_providers ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.payment_notifications ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.project_accounts ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.project_budgets ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.project_notifications ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.project_post_notifications ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.project_posts ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.redactor_assets ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.states ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.unsubscribes ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.user_links ALTER created_at SET DEFAULT current_timestamp;
     ALTER TABLE public.user_notifications ALTER created_at SET DEFAULT current_timestamp;
[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150724142700"]]
  [1m[36m (2.8ms)[0m  [1mCOMMIT[0m
Migrating to AddWaitingPaymentToContributionReport (20150724154819)
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36m (6.5ms)[0m  [1m    DROP VIEW "1".contribution_reports_for_project_owners;
    CREATE VIEW "1".contribution_reports_for_project_owners AS
    SELECT 
      b.project_id,
      COALESCE(r.id, 0) AS reward_id,
      p.user_id AS project_owner_id,
      r.description AS reward_description,
      r.deliver_at::date AS deliver_at,
      pa.paid_at::date AS confirmed_at,
      pa.value AS contribution_value,
      pa.value * (( SELECT settings.value::numeric AS value
             FROM settings
            WHERE settings.name = 'catarse_fee'::text)) AS service_fee,
      u.email AS user_email,
      COALESCE(b.payer_document, u.cpf) AS cpf,
      u.name AS user_name,
      b.payer_email,
      pa.gateway,
      b.anonymous,
      pa.state,
      pa.waiting_payment,
      COALESCE(u.address_street, b.address_street) AS street,
      COALESCE(u.address_complement, b.address_complement) AS complement,
      COALESCE(u.address_number, b.address_number) AS address_number,
      COALESCE(u.address_neighbourhood, b.address_neighbourhood) AS neighbourhood,
      COALESCE(u.address_city, b.address_city) AS city,
      COALESCE(u.address_state, b.address_state) AS address_state,
      COALESCE(u.address_zip_code, b.address_zip_code) AS zip_code
     FROM contributions b
       JOIN users u ON u.id = b.user_id
       JOIN projects p ON b.project_id = p.id
       JOIN payments pa ON pa.contribution_id = b.id
       LEFT JOIN rewards r ON r.id = b.reward_id
    WHERE pa.state = ANY (ARRAY['paid'::character varying::text, 'pending'::character varying::text]);
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150724154819"]]
  [1m[36m (2.5ms)[0m  [1mCOMMIT[0m
Migrating to AddDeletedAtToPayments (20150724171045)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.3ms)[0m  [1mALTER TABLE "payments" ADD COLUMN "deleted_at" timestamp[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150724171045"]]
  [1m[36m (2.3ms)[0m  [1mCOMMIT[0m
Migrating to AddChargebackAtToPayments (20150724171145)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "payments" ADD COLUMN "chargeback_at" timestamp[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150724171145"]]
  [1m[36m (2.2ms)[0m  [1mCOMMIT[0m
Migrating to CreateRewardDetails (20150728150417)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (1.7ms)[0m  [1m    CREATE OR REPLACE FUNCTION paid_count(rewards) RETURNS bigint AS $$
      SELECT count(*) 
      FROM payments p join contributions c on c.id = p.contribution_id 
      WHERE p.state = 'paid' AND c.reward_id = $1.id
    $$ LANGUAGE SQL STABLE SECURITY DEFINER;

    CREATE OR REPLACE FUNCTION waiting_payment_count(rewards) RETURNS bigint AS $$
      SELECT count(*) 
      FROM payments p join contributions c on c.id = p.contribution_id 
      WHERE p.waiting_payment AND c.reward_id = $1.id
    $$ LANGUAGE SQL STABLE SECURITY DEFINER;

    CREATE VIEW "1".reward_details AS
    SELECT 
      r.id,
      r.description,
      r.minimum_value,
      r.maximum_contributions,
      r.deliver_at,
      r.updated_at,
      r.paid_count,
      r.waiting_payment_count
     FROM rewards r;
    GRANT select ON ALL TABLES IN SCHEMA "1" TO admin;
[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150728150417"]]
  [1m[36m (2.2ms)[0m  [1mCOMMIT[0m
Migrating to AddRewardDescriptionToContributionDetails (20150728150418)
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36m (6.6ms)[0m  [1m    DROP VIEW "1".contribution_details;
    CREATE VIEW "1".contribution_details AS
    SELECT pa.id,
      c.id AS contribution_id,
      pa.id AS payment_id,
      c.user_id,
      c.project_id,
      c.reward_id,
      p.permalink,
      p.name AS project_name,
      img_thumbnail(p.*) AS project_img,
      p.online_date AS project_online_date,
      p.expires_at AS project_expires_at,
      p.state AS project_state,
      u.name AS user_name,
      profile_img_thumbnail(u.*) AS user_profile_img,
      u.email,
      c.anonymous,
      c.payer_email,
      pa.key,
      pa.value,
      pa.installments,
      pa.installment_value,
      pa.state,
      is_second_slip(pa.*) AS is_second_slip,
      pa.gateway,
      pa.gateway_id,
      pa.gateway_fee,
      pa.gateway_data,
      pa.payment_method,
      pa.created_at,
      pa.created_at AS pending_at,
      pa.paid_at,
      pa.refused_at,
      pa.pending_refund_at,
      pa.refunded_at,
      pa.full_text_index,
      row_to_json(r.*) AS reward
     FROM projects p
       JOIN contributions c ON c.project_id = p.id
       JOIN payments pa ON c.id = pa.contribution_id
       JOIN users u ON c.user_id = u.id
       LEFT JOIN "1".reward_details r ON r.id = c.reward_id;
    GRANT select ON ALL TABLES IN SCHEMA "1" TO admin;
[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150728150418"]]
  [1m[36m (2.3ms)[0m  [1mCOMMIT[0m
Migrating to RemoveDaysToDeliveryFromRewards (20150728170415)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "rewards" DROP "days_to_delivery"[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150728170415"]]
  [1m[36m (2.0ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"   ORDER BY version
  [1m[36mCatarseSettingsDb::Setting Load (0.7ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_uri' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_test' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_id' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_secret' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.8ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_key_base' LIMIT 1
  [1m[36mOauthProvider Load (0.6ms)[0m  [1mSELECT "oauth_providers".* FROM "oauth_providers"[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_api_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_list_id' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_successful_projects_list' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_failed_projects_list' LIMIT 1[0m
  [1m[35mOauthProvider Load (0.8ms)[0m  SELECT "oauth_providers".* FROM "oauth_providers"
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_api_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.7ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_encryption_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_slip_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_credit_card_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_interest_rate' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.7ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_cents_fee' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'host' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_max_installments' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_minimum_value_for_installment' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'stone_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_diners_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_diners_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_amex_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_amex_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.3ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "settings" ("created_at", "name", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["created_at", "2015-10-03 13:50:17.323840"], ["name", "secret_token"], ["updated_at", "2015-10-03 13:50:17.323840"]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  UPDATE "settings" SET "updated_at" = $1, "value" = $2 WHERE "settings"."id" = 1  [["updated_at", "2015-10-03 13:50:17.329082"], ["value", "8d8ef3e9cce1434932cd1cf282b632440fba16254441e0f17ff8919888ef4c5099be74884a6d7c4045d3a35dc29e6be53cbb97090b00921bba490d5a0ad61fe1"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.8ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.1ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_system' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.6ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_contact' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'company_name' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (1.3ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.9ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mCategory Load (1.2ms)[0m  [1mSELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Arte' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (0.5ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE "categories"."name_pt" = 'Arte' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "categories" ("created_at", "name_en", "name_pt", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.032008"], ["name_en", "Art"], ["name_pt", "Arte"], ["updated_at", "2015-10-03 13:50:20.032008"]]
  [1m[36m (2.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Arte' AND "categories"."id" != 8) LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  UPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 8  [["name_fr", "Art"], ["updated_at", "2015-10-03 13:50:20.040513"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mCategory Load (0.4ms)[0m  SELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Artes plásticas' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.4ms)[0m  SELECT  1 AS one FROM "categories"  WHERE "categories"."name_pt" = 'Artes plásticas' LIMIT 1
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "categories" ("created_at", "name_en", "name_pt", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["created_at", "2015-10-03 13:50:20.047052"], ["name_en", "Visual Arts"], ["name_pt", "Artes plásticas"], ["updated_at", "2015-10-03 13:50:20.047052"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.5ms)[0m  SELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Artes plásticas' AND "categories"."id" != 9) LIMIT 1
  [1m[36mSQL (0.3ms)[0m  [1mUPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 9[0m  [["name_fr", "Art plastique"], ["updated_at", "2015-10-03 13:50:20.051764"]]
  [1m[35m (0.6ms)[0m  COMMIT
  [1m[36mCategory Load (0.4ms)[0m  [1mSELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Circo' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE "categories"."name_pt" = 'Circo' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "categories" ("created_at", "name_en", "name_pt", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.057970"], ["name_en", "Circus"], ["name_pt", "Circo"], ["updated_at", "2015-10-03 13:50:20.057970"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mCategory Exists (0.5ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Circo' AND "categories"."id" != 10) LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  UPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 10  [["name_fr", "Cirque"], ["updated_at", "2015-10-03 13:50:20.063487"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mCategory Load (0.4ms)[0m  SELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Comunidade' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.5ms)[0m  SELECT  1 AS one FROM "categories"  WHERE "categories"."name_pt" = 'Comunidade' LIMIT 1
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "categories" ("created_at", "name_en", "name_pt", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["created_at", "2015-10-03 13:50:20.070601"], ["name_en", "Community"], ["name_pt", "Comunidade"], ["updated_at", "2015-10-03 13:50:20.070601"]]
  [1m[35m (0.6ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.4ms)[0m  SELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Comunidade' AND "categories"."id" != 11) LIMIT 1
  [1m[36mSQL (0.3ms)[0m  [1mUPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 11[0m  [["name_fr", "Comunauté"], ["updated_at", "2015-10-03 13:50:20.075933"]]
  [1m[35m (0.6ms)[0m  COMMIT
  [1m[36mCategory Load (0.4ms)[0m  [1mSELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Humor' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE "categories"."name_pt" = 'Humor' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "categories" ("created_at", "name_en", "name_pt", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.082247"], ["name_en", "Humor"], ["name_pt", "Humor"], ["updated_at", "2015-10-03 13:50:20.082247"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Humor' AND "categories"."id" != 12) LIMIT 1[0m
  [1m[35mSQL (0.3ms)[0m  UPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 12  [["name_fr", "Humour"], ["updated_at", "2015-10-03 13:50:20.086873"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mCategory Load (0.4ms)[0m  SELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Quadrinhos' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.5ms)[0m  SELECT  1 AS one FROM "categories"  WHERE "categories"."name_pt" = 'Quadrinhos' LIMIT 1
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "categories" ("created_at", "name_en", "name_pt", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["created_at", "2015-10-03 13:50:20.093629"], ["name_en", "Comicbooks"], ["name_pt", "Quadrinhos"], ["updated_at", "2015-10-03 13:50:20.093629"]]
  [1m[35m (0.6ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.4ms)[0m  SELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Quadrinhos' AND "categories"."id" != 13) LIMIT 1
  [1m[36mSQL (0.4ms)[0m  [1mUPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 13[0m  [["name_fr", "bd"], ["updated_at", "2015-10-03 13:50:20.098470"]]
  [1m[35m (0.6ms)[0m  COMMIT
  [1m[36mCategory Load (0.4ms)[0m  [1mSELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Dança' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mCategory Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE "categories"."name_pt" = 'Dança' LIMIT 1[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "categories" ("created_at", "name_en", "name_pt", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.104405"], ["name_en", "Dance"], ["name_pt", "Dança"], ["updated_at", "2015-10-03 13:50:20.104405"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Dança' AND "categories"."id" != 14) LIMIT 1[0m
  [1m[35mSQL (0.3ms)[0m  UPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 14  [["name_fr", "Dance"], ["updated_at", "2015-10-03 13:50:20.109353"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35mCategory Load (0.4ms)[0m  SELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Design' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.5ms)[0m  SELECT  1 AS one FROM "categories"  WHERE "categories"."name_pt" = 'Design' LIMIT 1
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "categories" ("created_at", "name_en", "name_pt", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["created_at", "2015-10-03 13:50:20.115837"], ["name_en", "Design"], ["name_pt", "Design"], ["updated_at", "2015-10-03 13:50:20.115837"]]
  [1m[35m (0.3ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.4ms)[0m  SELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Design' AND "categories"."id" != 15) LIMIT 1
  [1m[36mSQL (0.3ms)[0m  [1mUPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 15[0m  [["name_fr", "Design"], ["updated_at", "2015-10-03 13:50:20.120062"]]
  [1m[35m (1.6ms)[0m  COMMIT
  [1m[36mCategory Load (0.8ms)[0m  [1mSELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Eventos' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mCategory Exists (0.5ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE "categories"."name_pt" = 'Eventos' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "categories" ("created_at", "name_en", "name_pt", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.129185"], ["name_en", "Events"], ["name_pt", "Eventos"], ["updated_at", "2015-10-03 13:50:20.129185"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Eventos' AND "categories"."id" != 16) LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  UPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 16  [["name_fr", "Événementiel"], ["updated_at", "2015-10-03 13:50:20.134230"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35mCategory Load (1.6ms)[0m  SELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Moda' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (1.3ms)[0m  SELECT  1 AS one FROM "categories"  WHERE "categories"."name_pt" = 'Moda' LIMIT 1
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "categories" ("created_at", "name_en", "name_pt", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["created_at", "2015-10-03 13:50:20.145354"], ["name_en", "Fashion"], ["name_pt", "Moda"], ["updated_at", "2015-10-03 13:50:20.145354"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.6ms)[0m  SELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Moda' AND "categories"."id" != 17) LIMIT 1
  [1m[36mSQL (0.4ms)[0m  [1mUPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 17[0m  [["name_fr", "Mode"], ["updated_at", "2015-10-03 13:50:20.151229"]]
  [1m[35m (0.9ms)[0m  COMMIT
  [1m[36mCategory Load (0.5ms)[0m  [1mSELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Gastronomia' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE "categories"."name_pt" = 'Gastronomia' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "categories" ("created_at", "name_en", "name_pt", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.159157"], ["name_en", "Gastronomy"], ["name_pt", "Gastronomia"], ["updated_at", "2015-10-03 13:50:20.159157"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Gastronomia' AND "categories"."id" != 18) LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  UPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 18  [["name_fr", "Gastronomie"], ["updated_at", "2015-10-03 13:50:20.163995"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mCategory Load (0.9ms)[0m  SELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Cinema e Vídeo' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.6ms)[0m  SELECT  1 AS one FROM "categories"  WHERE "categories"."name_pt" = 'Cinema e Vídeo' LIMIT 1
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "categories" ("created_at", "name_en", "name_pt", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["created_at", "2015-10-03 13:50:20.173845"], ["name_en", "Film & Video"], ["name_pt", "Cinema e Vídeo"], ["updated_at", "2015-10-03 13:50:20.173845"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.4ms)[0m  SELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Cinema e Vídeo' AND "categories"."id" != 19) LIMIT 1
  [1m[36mSQL (0.4ms)[0m  [1mUPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 19[0m  [["name_fr", "Cinéma"], ["updated_at", "2015-10-03 13:50:20.178606"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36mCategory Load (0.5ms)[0m  [1mSELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Jogos' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE "categories"."name_pt" = 'Jogos' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "categories" ("created_at", "name_en", "name_pt", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.187233"], ["name_en", "Games"], ["name_pt", "Jogos"], ["updated_at", "2015-10-03 13:50:20.187233"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36mCategory Exists (0.9ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Jogos' AND "categories"."id" != 20) LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  UPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 20  [["name_fr", "Jeux"], ["updated_at", "2015-10-03 13:50:20.194674"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35mCategory Load (0.5ms)[0m  SELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Jornalismo' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.8ms)[0m  SELECT  1 AS one FROM "categories"  WHERE "categories"."name_pt" = 'Jornalismo' LIMIT 1
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "categories" ("created_at", "name_en", "name_pt", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["created_at", "2015-10-03 13:50:20.203101"], ["name_en", "Journalism"], ["name_pt", "Jornalismo"], ["updated_at", "2015-10-03 13:50:20.203101"]]
  [1m[35m (1.2ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.5ms)[0m  SELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Jornalismo' AND "categories"."id" != 21) LIMIT 1
  [1m[36mSQL (0.4ms)[0m  [1mUPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 21[0m  [["name_fr", "Journalisme"], ["updated_at", "2015-10-03 13:50:20.210083"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36mCategory Load (0.5ms)[0m  [1mSELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Música' LIMIT 1[0m
  [1m[35m (0.6ms)[0m  BEGIN
  [1m[36mCategory Exists (1.3ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE "categories"."name_pt" = 'Música' LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "categories" ("created_at", "name_en", "name_pt", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.219193"], ["name_en", "Music"], ["name_pt", "Música"], ["updated_at", "2015-10-03 13:50:20.219193"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mCategory Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Música' AND "categories"."id" != 22) LIMIT 1[0m
  [1m[35mSQL (0.3ms)[0m  UPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 22  [["name_fr", "Musique"], ["updated_at", "2015-10-03 13:50:20.225942"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mCategory Load (0.5ms)[0m  SELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Fotografia' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.5ms)[0m  SELECT  1 AS one FROM "categories"  WHERE "categories"."name_pt" = 'Fotografia' LIMIT 1
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "categories" ("created_at", "name_en", "name_pt", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["created_at", "2015-10-03 13:50:20.233152"], ["name_en", "Photography"], ["name_pt", "Fotografia"], ["updated_at", "2015-10-03 13:50:20.233152"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (1.2ms)[0m  SELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Fotografia' AND "categories"."id" != 23) LIMIT 1
  [1m[36mSQL (0.8ms)[0m  [1mUPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 23[0m  [["name_fr", "Photographie"], ["updated_at", "2015-10-03 13:50:20.240241"]]
  [1m[35m (0.6ms)[0m  COMMIT
  [1m[36mCategory Load (0.7ms)[0m  [1mSELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Ciência e Tecnologia' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE "categories"."name_pt" = 'Ciência e Tecnologia' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "categories" ("created_at", "name_en", "name_pt", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.249338"], ["name_en", "Science & Technology"], ["name_pt", "Ciência e Tecnologia"], ["updated_at", "2015-10-03 13:50:20.249338"]]
  [1m[36m (1.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (0.5ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Ciência e Tecnologia' AND "categories"."id" != 24) LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  UPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 24  [["name_fr", "Sciences et technologies"], ["updated_at", "2015-10-03 13:50:20.256199"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35mCategory Load (1.8ms)[0m  SELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Teatro' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.4ms)[0m  SELECT  1 AS one FROM "categories"  WHERE "categories"."name_pt" = 'Teatro' LIMIT 1
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "categories" ("created_at", "name_en", "name_pt", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["created_at", "2015-10-03 13:50:20.265678"], ["name_en", "Theatre"], ["name_pt", "Teatro"], ["updated_at", "2015-10-03 13:50:20.265678"]]
  [1m[35m (1.6ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.5ms)[0m  SELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Teatro' AND "categories"."id" != 25) LIMIT 1
  [1m[36mSQL (0.3ms)[0m  [1mUPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 25[0m  [["name_fr", "Théatre"], ["updated_at", "2015-10-03 13:50:20.271979"]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36mCategory Load (0.4ms)[0m  [1mSELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Esporte' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (0.3ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE "categories"."name_pt" = 'Esporte' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "categories" ("created_at", "name_en", "name_pt", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.278291"], ["name_en", "Sport"], ["name_pt", "Esporte"], ["updated_at", "2015-10-03 13:50:20.278291"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Esporte' AND "categories"."id" != 26) LIMIT 1[0m
  [1m[35mSQL (0.3ms)[0m  UPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 26  [["name_fr", "Sport"], ["updated_at", "2015-10-03 13:50:20.282975"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35mCategory Load (0.8ms)[0m  SELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Web' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.4ms)[0m  SELECT  1 AS one FROM "categories"  WHERE "categories"."name_pt" = 'Web' LIMIT 1
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "categories" ("created_at", "name_en", "name_pt", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["created_at", "2015-10-03 13:50:20.290635"], ["name_en", "Web"], ["name_pt", "Web"], ["updated_at", "2015-10-03 13:50:20.290635"]]
  [1m[35m (2.3ms)[0m  COMMIT
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.5ms)[0m  SELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Web' AND "categories"."id" != 27) LIMIT 1
  [1m[36mSQL (0.3ms)[0m  [1mUPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 27[0m  [["name_fr", "Web"], ["updated_at", "2015-10-03 13:50:20.298305"]]
  [1m[35m (0.6ms)[0m  COMMIT
  [1m[36mCategory Load (0.4ms)[0m  [1mSELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Carnaval' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE "categories"."name_pt" = 'Carnaval' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "categories" ("created_at", "name_en", "name_pt", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.307031"], ["name_en", "Carnival"], ["name_pt", "Carnaval"], ["updated_at", "2015-10-03 13:50:20.307031"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (0.5ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Carnaval' AND "categories"."id" != 28) LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  UPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 28  [["name_fr", "Carnaval"], ["updated_at", "2015-10-03 13:50:20.312020"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35mCategory Load (0.4ms)[0m  SELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Arquitetura e Urbanismo' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.5ms)[0m  SELECT  1 AS one FROM "categories"  WHERE "categories"."name_pt" = 'Arquitetura e Urbanismo' LIMIT 1
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "categories" ("created_at", "name_en", "name_pt", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["created_at", "2015-10-03 13:50:20.319119"], ["name_en", "Architecture & Urbanism"], ["name_pt", "Arquitetura e Urbanismo"], ["updated_at", "2015-10-03 13:50:20.319119"]]
  [1m[35m (0.8ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.4ms)[0m  SELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Arquitetura e Urbanismo' AND "categories"."id" != 29) LIMIT 1
  [1m[36mSQL (0.4ms)[0m  [1mUPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 29[0m  [["name_fr", "Architecture et Urbanisme"], ["updated_at", "2015-10-03 13:50:20.323974"]]
  [1m[35m (0.6ms)[0m  COMMIT
  [1m[36mCategory Load (0.5ms)[0m  [1mSELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Literatura' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (1.1ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE "categories"."name_pt" = 'Literatura' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "categories" ("created_at", "name_en", "name_pt", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.331219"], ["name_en", "Literature"], ["name_pt", "Literatura"], ["updated_at", "2015-10-03 13:50:20.331219"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Literatura' AND "categories"."id" != 30) LIMIT 1[0m
  [1m[35mSQL (0.3ms)[0m  UPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 30  [["name_fr", "Literature"], ["updated_at", "2015-10-03 13:50:20.355310"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35mCategory Load (0.5ms)[0m  SELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Mobilidade e Transporte' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.5ms)[0m  SELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Mobilidade e Transporte' AND "categories"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Mobilidade e Transporte' AND "categories"."id" != 1) LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  UPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 1  [["name_fr", "Transport et Mobilité"], ["updated_at", "2015-10-03 13:50:20.364482"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mCategory Load (0.5ms)[0m  SELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Meio Ambiente' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.4ms)[0m  SELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Meio Ambiente' AND "categories"."id" != 2) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Meio Ambiente' AND "categories"."id" != 2) LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  UPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 2  [["name_fr", "Environement"], ["updated_at", "2015-10-03 13:50:20.373689"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35mCategory Load (0.6ms)[0m  SELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Negócios Sociais' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.4ms)[0m  SELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Negócios Sociais' AND "categories"."id" != 3) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Negócios Sociais' AND "categories"."id" != 3) LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  UPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 3  [["name_fr", "Social"], ["updated_at", "2015-10-03 13:50:20.382361"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35mCategory Load (0.5ms)[0m  SELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Educação' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.4ms)[0m  SELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Educação' AND "categories"."id" != 4) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Educação' AND "categories"."id" != 4) LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  UPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 4  [["name_fr", "Éducation"], ["updated_at", "2015-10-03 13:50:20.391698"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35mCategory Load (0.5ms)[0m  SELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Filmes de Ficção' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.2ms)[0m  SELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Filmes de Ficção' AND "categories"."id" != 5) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Filmes de Ficção' AND "categories"."id" != 5) LIMIT 1[0m
  [1m[35mSQL (0.3ms)[0m  UPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 5  [["name_fr", "Films de fiction"], ["updated_at", "2015-10-03 13:50:20.400589"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35mCategory Load (0.4ms)[0m  SELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Filmes Documentários' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.4ms)[0m  SELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Filmes Documentários' AND "categories"."id" != 6) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Filmes Documentários' AND "categories"."id" != 6) LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  UPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 6  [["name_fr", "Films documentaire"], ["updated_at", "2015-10-03 13:50:20.410225"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35mCategory Load (0.4ms)[0m  SELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Filmes Universitários' LIMIT 1
  [1m[36m (0.0ms)[0m  [1mBEGIN[0m
  [1m[35mCategory Exists (0.4ms)[0m  SELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Filmes Universitários' AND "categories"."id" != 7) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  BEGIN
  [1m[36mCategory Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Filmes Universitários' AND "categories"."id" != 7) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  COMMIT
  [1m[36mCategory Load (0.4ms)[0m  [1mSELECT  "categories".* FROM "categories"  WHERE "categories"."name_pt" = 'Saúde' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE "categories"."name_pt" = 'Saúde' LIMIT 1[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "categories" ("created_at", "name_en", "name_pt", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.422935"], ["name_en", "Health"], ["name_pt", "Saúde"], ["updated_at", "2015-10-03 13:50:20.422935"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mCategory Exists (0.7ms)[0m  [1mSELECT  1 AS one FROM "categories"  WHERE ("categories"."name_pt" = 'Saúde' AND "categories"."id" != 31) LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  UPDATE "categories" SET "name_fr" = $1, "updated_at" = $2 WHERE "categories"."id" = 31  [["name_fr", "Santé"], ["updated_at", "2015-10-03 13:50:20.427780"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.3ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'company_name' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.434763"], ["name", "company_name"], ["updated_at", "2015-10-03 13:50:20.434763"], ["value", "Catarse"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'company_logo' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.439474"], ["name", "company_logo"], ["updated_at", "2015-10-03 13:50:20.439474"], ["value", "http://catarse.me/assets/catarse_bootstrap/logo_icon_catarse.png"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'host' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.443961"], ["name", "host"], ["updated_at", "2015-10-03 13:50:20.443961"], ["value", "catarse.me"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'base_url' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.448664"], ["name", "base_url"], ["updated_at", "2015-10-03 13:50:20.448664"], ["value", "http://catarse.me"]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_contact' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.452450"], ["name", "email_contact"], ["updated_at", "2015-10-03 13:50:20.452450"], ["value", "contato@catarse.me"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_payments' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.457510"], ["name", "email_payments"], ["updated_at", "2015-10-03 13:50:20.457510"], ["value", "financeiro@catarse.me"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_projects' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.462136"], ["name", "email_projects"], ["updated_at", "2015-10-03 13:50:20.462136"], ["value", "projetos@catarse.me"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_system' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.466284"], ["name", "email_system"], ["updated_at", "2015-10-03 13:50:20.466284"], ["value", "system@catarse.me"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_no_reply' LIMIT 1
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.470260"], ["name", "email_no_reply"], ["updated_at", "2015-10-03 13:50:20.470260"], ["value", "no-reply@catarse.me"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'facebook_url' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.475336"], ["name", "facebook_url"], ["updated_at", "2015-10-03 13:50:20.475336"], ["value", "http://facebook.com/catarse.me"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.7ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'facebook_app_id' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.480462"], ["name", "facebook_app_id"], ["updated_at", "2015-10-03 13:50:20.480462"], ["value", "173747042661491"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'twitter_url' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.484815"], ["name", "twitter_url"], ["updated_at", "2015-10-03 13:50:20.484815"], ["value", "http://twitter.com/catarse"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'twitter_username' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.488345"], ["name", "twitter_username"], ["updated_at", "2015-10-03 13:50:20.488345"], ["value", "catarse"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_url' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.493578"], ["name", "mailchimp_url"], ["updated_at", "2015-10-03 13:50:20.493578"], ["value", "http://catarse.us5.list-manage.com/subscribe/post?u=ebfcd0d16dbb0001a0bea3639&amp;id=149c39709e"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'catarse_fee' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.497868"], ["name", "catarse_fee"], ["updated_at", "2015-10-03 13:50:20.497868"], ["value", "0.13"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'support_forum' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.502251"], ["name", "support_forum"], ["updated_at", "2015-10-03 13:50:20.502251"], ["value", "http://suporte.catarse.me/"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'base_domain' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.507145"], ["name", "base_domain"], ["updated_at", "2015-10-03 13:50:20.507145"], ["value", "catarse.me"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'uservoice_secret_gadget' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.511536"], ["name", "uservoice_secret_gadget"], ["updated_at", "2015-10-03 13:50:20.511536"], ["value", "change_this"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'uservoice_key' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.515652"], ["name", "uservoice_key"], ["updated_at", "2015-10-03 13:50:20.515652"], ["value", "uservoice_key"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'faq_url' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.519771"], ["name", "faq_url"], ["updated_at", "2015-10-03 13:50:20.519771"], ["value", "http://suporte.catarse.me/"]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'feedback_url' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.524062"], ["name", "feedback_url"], ["updated_at", "2015-10-03 13:50:20.524062"], ["value", "http://suporte.catarse.me/forums/103171-catarse-ideias-gerais"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'terms_url' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.528502"], ["name", "terms_url"], ["updated_at", "2015-10-03 13:50:20.528502"], ["value", "http://suporte.catarse.me/knowledgebase/articles/161100-termos-de-uso"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'privacy_url' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.533251"], ["name", "privacy_url"], ["updated_at", "2015-10-03 13:50:20.533251"], ["value", "http://suporte.catarse.me/knowledgebase/articles/161103-pol%C3%ADtica-de-privacidade"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'about_channel_url' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.537705"], ["name", "about_channel_url"], ["updated_at", "2015-10-03 13:50:20.537705"], ["value", "http://blog.catarse.me/conheca-os-canais-do-catarse/"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'instagram_url' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.542158"], ["name", "instagram_url"], ["updated_at", "2015-10-03 13:50:20.542158"], ["value", "http://instagram.com/catarse_"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'blog_url' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.546221"], ["name", "blog_url"], ["updated_at", "2015-10-03 13:50:20.546221"], ["value", "http://blog.catarse.me"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'github_url' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.550817"], ["name", "github_url"], ["updated_at", "2015-10-03 13:50:20.550817"], ["value", "http://github.com/catarse"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'contato_url' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "settings" ("created_at", "name", "updated_at", "value") VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.555447"], ["name", "contato_url"], ["updated_at", "2015-10-03 13:50:20.555447"], ["value", "http://suporte.catarse.me/"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mOauthProvider Load (0.4ms)[0m  SELECT  "oauth_providers".* FROM "oauth_providers"  WHERE "oauth_providers"."name" = 'facebook' LIMIT 1
  [1m[36m (5.3ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "oauth_providers" ("created_at", "key", "name", "path", "secret", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"  [["created_at", "2015-10-03 13:50:20.567896"], ["key", "your_facebook_app_key"], ["name", "facebook"], ["path", "facebook"], ["secret", "your_facebook_app_secret"], ["updated_at", "2015-10-03 13:50:20.567896"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mOauthProvider Load (0.4ms)[0m  SELECT "oauth_providers".* FROM "oauth_providers"
  [1m[36mCatarseSettingsDb::Setting Load (0.8ms)[0m  [1mSELECT "settings".* FROM "settings"[0m
  [1m[36mCatarseSettingsDb::Setting Load (0.7ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_uri' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_test' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.6ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_id' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_secret' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.8ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_key_base' LIMIT 1
  [1m[36mOauthProvider Load (0.7ms)[0m  [1mSELECT "oauth_providers".* FROM "oauth_providers"[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.6ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_api_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_list_id' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_successful_projects_list' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.3ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_failed_projects_list' LIMIT 1[0m
  [1m[35mOauthProvider Load (0.4ms)[0m  SELECT "oauth_providers".* FROM "oauth_providers"
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_api_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_encryption_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_slip_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_credit_card_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_interest_rate' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_cents_fee' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'host' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.8ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_max_installments' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.6ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_minimum_value_for_installment' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.6ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.6ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'stone_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_diners_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.6ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_diners_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.6ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_amex_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_amex_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.6ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_system' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_contact' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'company_name' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1


Started GET "/" for 10.0.2.2 at 2015-10-03 13:51:21 +0000
  [1m[36mActiveRecord::SchemaMigration Load (1.0ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by ProjectsController#index as HTML
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'company_name' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.8ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'support_forum' LIMIT 1[0m
  Rendered catarse_bootstrap/shared/_header.html.slim (108.8ms)
  Rendered catarse_bootstrap/shared/_header_big.html.slim (218.8ms)
  [1m[35mProjectsForHome Load (3.3ms)[0m  SELECT "projects_for_home".* FROM "projects_for_home"  WHERE "projects_for_home"."origin" = 'recommended'
  Rendered catarse_bootstrap/projects/_card.html.slim (0.1ms)
  [1m[36mProjectsForHome Load (1.6ms)[0m  [1mSELECT "projects_for_home".* FROM "projects_for_home"  WHERE "projects_for_home"."origin" = 'expiring'[0m
  Rendered catarse_bootstrap/projects/_card.html.slim (0.1ms)
  [1m[35mProjectsForHome Load (1.7ms)[0m  SELECT "projects_for_home".* FROM "projects_for_home"  WHERE "projects_for_home"."origin" = 'recents'
  Rendered catarse_bootstrap/projects/_card.html.slim (0.1ms)
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'blog_url' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.8ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'facebook_url' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'twitter_url' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.6ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'instagram_url' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.6ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'github_url' LIMIT 1[0m
  Rendered catarse_bootstrap/shared/_footer_welcome.html.slim (125.2ms)
  [1m[35mCatarseSettingsDb::Setting Load (0.8ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'zendesk_url' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.6ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'zendesk_dropbox_id' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.6ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'faq_url' LIMIT 1
  Rendered catarse_bootstrap/shared/_footer_about.html.slim (142.8ms)
  Rendered catarse_bootstrap/shared/_footer_navigate.html.slim (17.8ms)
  [1m[36mCatarseSettingsDb::Setting Load (0.6ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_url' LIMIT 1[0m
  Rendered catarse_bootstrap/shared/_newsletter.html.slim (60.6ms)
  Rendered layouts/_facebook_like.html.slim (8.1ms)
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'twitter_username' LIMIT 1
  Rendered catarse_bootstrap/shared/_footer_big.html.slim (584.1ms)
  Rendered catarse_bootstrap/projects/index.html.slim within layouts/catarse_bootstrap (4041.1ms)
  [1m[36mCatarseSettingsDb::Setting Load (14.3ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_verification_code' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'company_logo' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.6ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'facebook_app_id' LIMIT 1[0m
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (5.3ms)
  Rendered layouts/_facebook_sdk.html.slim (4.5ms)
Completed 200 OK in 21410ms (Views: 21263.1ms | ActiveRecord: 34.5ms)


Started GET "/assets/catarse_bootstrap/fonts.css?body=1" for 10.0.2.2 at 2015-10-03 13:51:44 +0000


Started GET "/assets/catarse_bootstrap/catarse.css?body=1" for 10.0.2.2 at 2015-10-03 13:51:44 +0000


Started GET "/assets/jquery.js?body=1" for 10.0.2.2 at 2015-10-03 13:51:45 +0000


Started GET "/assets/underscore.js?body=1" for 10.0.2.2 at 2015-10-03 13:51:46 +0000


Started GET "/assets/backbone.js?body=1" for 10.0.2.2 at 2015-10-03 13:51:47 +0000


Started GET "/assets/catarse_bootstrap/logo_big.png" for 10.0.2.2 at 2015-10-03 13:51:47 +0000


Started GET "/assets/jquery-ui/core.js?body=1" for 10.0.2.2 at 2015-10-03 13:51:48 +0000


Started GET "/assets/jquery-ui/widget.js?body=1" for 10.0.2.2 at 2015-10-03 13:51:49 +0000


Started GET "/assets/jquery-ui/accordion.js?body=1" for 10.0.2.2 at 2015-10-03 13:51:49 +0000


Started GET "/assets/jquery-ui/button.js?body=1" for 10.0.2.2 at 2015-10-03 13:51:50 +0000


Started GET "/assets/jquery-ui/datepicker.js?body=1" for 10.0.2.2 at 2015-10-03 13:51:51 +0000


Started GET "/assets/jquery-ui/autocomplete.js?body=1" for 10.0.2.2 at 2015-10-03 13:51:51 +0000


Started GET "/assets/jquery-ui/position.js?body=1" for 10.0.2.2 at 2015-10-03 13:51:52 +0000


Started GET "/assets/jquery-ui/menu.js?body=1" for 10.0.2.2 at 2015-10-03 13:51:52 +0000


Started GET "/assets/jquery-ui/mouse.js?body=1" for 10.0.2.2 at 2015-10-03 13:51:53 +0000


Started GET "/assets/jquery-ui/draggable.js?body=1" for 10.0.2.2 at 2015-10-03 13:51:54 +0000


Started GET "/assets/jquery-ui/effect.js?body=1" for 10.0.2.2 at 2015-10-03 13:51:54 +0000


Started GET "/assets/jquery-ui/resizable.js?body=1" for 10.0.2.2 at 2015-10-03 13:51:55 +0000


Started GET "/assets/jquery-ui/dialog.js?body=1" for 10.0.2.2 at 2015-10-03 13:51:56 +0000


Started GET "/assets/jquery-ui/droppable.js?body=1" for 10.0.2.2 at 2015-10-03 13:51:57 +0000


Started GET "/assets/jquery-ui/effect-blind.js?body=1" for 10.0.2.2 at 2015-10-03 13:51:57 +0000


Started GET "/assets/jquery-ui/effect-fade.js?body=1" for 10.0.2.2 at 2015-10-03 13:51:58 +0000


Started GET "/assets/jquery-ui/effect-bounce.js?body=1" for 10.0.2.2 at 2015-10-03 13:51:59 +0000


Started GET "/assets/jquery-ui/effect-clip.js?body=1" for 10.0.2.2 at 2015-10-03 13:51:59 +0000


Started GET "/assets/jquery-ui/effect-drop.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:00 +0000


Started GET "/assets/jquery-ui/effect-explode.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:00 +0000


Started GET "/assets/jquery-ui/effect-fold.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:01 +0000


Started GET "/assets/jquery-ui/effect-highlight.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:02 +0000


Started GET "/assets/jquery-ui/effect-size.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:03 +0000


Started GET "/assets/jquery-ui/effect-scale.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:04 +0000


Started GET "/assets/jquery-ui/effect-puff.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:05 +0000


Started GET "/assets/jquery-ui/effect-pulsate.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:05 +0000


Started GET "/assets/jquery-ui/effect-shake.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:06 +0000


Started GET "/assets/jquery-ui/effect-slide.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:07 +0000


Started GET "/assets/jquery-ui/progressbar.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:08 +0000


Started GET "/assets/jquery-ui/effect-transfer.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:08 +0000


Started GET "/assets/jquery-ui/selectable.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:09 +0000


Started GET "/assets/jquery-ui/selectmenu.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:10 +0000


Started GET "/assets/jquery-ui/slider.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:11 +0000


Started GET "/assets/jquery-ui/sortable.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:11 +0000


Started GET "/assets/jquery-ui/spinner.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:12 +0000


Started GET "/assets/jquery-ui/tabs.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:13 +0000


Started GET "/assets/jquery-ui/tooltip.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:14 +0000


Started GET "/assets/jquery-ui.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:14 +0000


Started GET "/assets/jquery.elastic.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:15 +0000


Started GET "/assets/best_in_place.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:16 +0000


Started GET "/assets/lib/skull.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:16 +0000


Started GET "/assets/lib/form.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:17 +0000


Started GET "/assets/lib/jquery.brbanks.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:18 +0000


Started GET "/assets/cocoon.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:18 +0000


Started GET "/assets/lib/jquery.headline.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:19 +0000


Started GET "/assets/lib/show_password_input.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:20 +0000


Started GET "/assets/lib/jquery.payment.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:21 +0000


Started GET "/assets/lib/modal.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:22 +0000


Started GET "/assets/lib/pagination.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:23 +0000


Started GET "/assets/lib/tabs.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:24 +0000


Started GET "/assets/lib/twitter.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:25 +0000


Started GET "/assets/lib/ui_helper.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:25 +0000


Started GET "/assets/app/app.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:26 +0000


Started GET "/assets/app/admin/admin.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:27 +0000


Started GET "/assets/app/admin/admin_sort.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:27 +0000


Started GET "/assets/app/bank_accounts/bank_account_form.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:28 +0000


Started GET "/assets/app/contribution/contribution.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:29 +0000


Started GET "/assets/app/contribution/contribution_payment.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:29 +0000


Started GET "/assets/app/pages/hello.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:30 +0000


Started GET "/assets/app/contribution/contribution_review.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:31 +0000


Started GET "/assets/app/pages/explore.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:31 +0000


Started GET "/assets/app/pages/guides.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:32 +0000


Started GET "/assets/app/pages/home.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:33 +0000


Started GET "/pt/login" for 10.0.2.2 at 2015-10-03 13:52:34 +0000
Processing by Devise::SessionsController#new as HTML
  Parameters: {"locale"=>"pt"}
  Rendered catarse_bootstrap/devise/shared/_header.html.slim (21.5ms)
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (10.5ms)
  Rendered catarse_bootstrap/devise/sessions/new.html.slim within layouts/catarse_bootstrap (473.2ms)
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (4.1ms)
  Rendered layouts/_facebook_sdk.html.slim (0.7ms)
Completed 200 OK in 972ms (Views: 933.4ms | ActiveRecord: 5.6ms)


Started GET "/assets/app/pages/how_it_works.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:36 +0000


Started GET "/assets/app/pages/registration.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:37 +0000


Started GET "/assets/app/pages/reset_password.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:38 +0000


Started GET "/assets/app/pages/search.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:39 +0000


Started GET "/assets/app/project/project.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:40 +0000


Started GET "/assets/app/project/project_comments.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:40 +0000


Started GET "/assets/app/project/project_dashboard_reward.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:41 +0000


Started GET "/assets/catarse_bootstrap/logo_icon_catarse.png" for 10.0.2.2 at 2015-10-03 13:52:42 +0000


Started GET "/assets/app/project/project_contributions.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:43 +0000


Started GET "/assets/app/project/project.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:45 +0000


Started GET "/assets/app/project/project_comments.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:45 +0000


Started GET "/assets/app/project/project_dashboard_user.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:46 +0000


Started GET "/assets/app/project/project_edit.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:47 +0000


Started GET "/assets/app/project/project_form.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:48 +0000


Started GET "/assets/app/project/project_metrics.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:49 +0000


Started GET "/assets/app/project/project_nav.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:51 +0000


Started GET "/assets/app/project/project_posts.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:52 +0000


Started GET "/assets/app/project/project_sidebar.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:53 +0000


Started GET "/assets/app/utils/mix_panel.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:54 +0000


Started GET "/assets/app/user/user.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:54 +0000


Started GET "/assets/app/user/user_document.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:55 +0000


Started GET "/assets/app/user/user_edit.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:56 +0000


Started GET "/assets/app/user/user_menu.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:57 +0000


Started GET "/assets/application.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:58 +0000


Started GET "/assets/app/pages/how_it_works.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:59 +0000


Started GET "/assets/app/pages/registration.js?body=1" for 10.0.2.2 at 2015-10-03 13:52:59 +0000


Started GET "/assets/app/pages/reset_password.js?body=1" for 10.0.2.2 at 2015-10-03 13:53:00 +0000


Started GET "/assets/app/pages/search.js?body=1" for 10.0.2.2 at 2015-10-03 13:53:01 +0000


Started POST "/pt/login" for 10.0.2.2 at 2015-10-03 13:53:02 +0000
Processing by Devise::SessionsController#create as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"UpSfZxifUIHda3vQSpRK2AaA1bFseuR8AxVQUK6xBK8=", "user"=>{"email"=>"bob7gopisri@gmail.com", "password"=>"[FILTERED]", "remember_me"=>"1"}, "commit"=>"Login", "locale"=>"pt"}
  [1m[35mUser Load (6.2ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."email" = 'bob7gopisri@gmail.com'  ORDER BY "users"."id" ASC LIMIT 1
Completed 401 Unauthorized in 17ms (ActiveRecord: 6.2ms)
Processing by Devise::SessionsController#new as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"UpSfZxifUIHda3vQSpRK2AaA1bFseuR8AxVQUK6xBK8=", "user"=>{"email"=>"bob7gopisri@gmail.com", "password"=>"[FILTERED]", "remember_me"=>"1"}, "commit"=>"Login", "locale"=>"pt"}
  Rendered catarse_bootstrap/devise/shared/_header.html.slim (2.4ms)
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (0.8ms)
  Rendered catarse_bootstrap/devise/sessions/new.html.slim within layouts/catarse_bootstrap (299.6ms)
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (3.6ms)
  Rendered layouts/_facebook_sdk.html.slim (0.8ms)
Completed 200 OK in 755ms (Views: 666.8ms | ActiveRecord: 0.0ms)


Started GET "/assets/app/pages/how_it_works.js?body=1" for 10.0.2.2 at 2015-10-03 13:53:04 +0000


Started GET "/assets/app/pages/registration.js?body=1" for 10.0.2.2 at 2015-10-03 13:53:04 +0000


Started GET "/assets/app/pages/reset_password.js?body=1" for 10.0.2.2 at 2015-10-03 13:53:05 +0000


Started GET "/assets/app/pages/search.js?body=1" for 10.0.2.2 at 2015-10-03 13:53:06 +0000


Started GET "/auth/facebook" for 10.0.2.2 at 2015-10-03 13:53:07 +0000


Started GET "/assets/jquery-ui/core.js?body=1" for 10.0.2.2 at 2015-10-03 13:53:18 +0000


Started GET "/assets/jquery-ui/widget.js?body=1" for 10.0.2.2 at 2015-10-03 13:53:19 +0000


Started GET "/assets/app/pages/how_it_works.js?body=1" for 10.0.2.2 at 2015-10-03 13:53:20 +0000


Started GET "/assets/app/pages/registration.js?body=1" for 10.0.2.2 at 2015-10-03 13:53:20 +0000


Started GET "/assets/app/pages/reset_password.js?body=1" for 10.0.2.2 at 2015-10-03 13:53:21 +0000


Started GET "/assets/app/pages/search.js?body=1" for 10.0.2.2 at 2015-10-03 13:53:22 +0000


Started GET "/pt/login" for 10.0.2.2 at 2015-10-03 13:53:23 +0000
Processing by Devise::SessionsController#new as HTML
  Parameters: {"locale"=>"pt"}
  Rendered catarse_bootstrap/devise/shared/_header.html.slim (2.5ms)
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (0.6ms)
  Rendered catarse_bootstrap/devise/sessions/new.html.slim within layouts/catarse_bootstrap (140.7ms)
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (3.4ms)
  Rendered layouts/_facebook_sdk.html.slim (0.7ms)
Completed 200 OK in 505ms (Views: 502.6ms | ActiveRecord: 0.0ms)


Started GET "/assets/favicon.ico" for 10.0.2.2 at 2015-10-03 13:53:24 +0000


Started GET "/auth/facebook" for 10.0.2.2 at 2015-10-03 13:53:25 +0000


Started GET "/assets/favicon.ico" for 10.0.2.2 at 2015-10-03 13:54:17 +0000


Started GET "/assets/favicon.ico" for 10.0.2.2 at 2015-10-03 13:54:18 +0000


Started GET "/assets/favicon.ico" for 10.0.2.2 at 2015-10-03 13:54:18 +0000


Started GET "/assets/favicon.ico" for 10.0.2.2 at 2015-10-03 13:54:19 +0000


Started GET "/assets/favicon.ico" for 10.0.2.2 at 2015-10-03 13:54:20 +0000


Started GET "/pt/sign_up" for 10.0.2.2 at 2015-10-03 13:54:42 +0000
Processing by Devise::RegistrationsController#new as HTML
  Parameters: {"locale"=>"pt"}
  Rendered catarse_bootstrap/devise/shared/_header.html.slim (2.9ms)
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (0.8ms)
  [1m[36mCatarseSettingsDb::Setting Load (0.8ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'terms_url' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.6ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'privacy_url' LIMIT 1
  Rendered catarse_bootstrap/devise/registrations/new.html.slim within layouts/catarse_bootstrap (438.1ms)
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (3.5ms)
  Rendered layouts/_facebook_sdk.html.slim (0.8ms)
Completed 200 OK in 803ms (Views: 799.5ms | ActiveRecord: 1.4ms)


Started GET "/assets/jquery.js?body=1" for 10.0.2.2 at 2015-10-03 13:54:43 +0000


Started GET "/assets/underscore.js?body=1" for 10.0.2.2 at 2015-10-03 13:54:44 +0000


Started GET "/assets/backbone.js?body=1" for 10.0.2.2 at 2015-10-03 13:54:45 +0000


Started GET "/assets/jquery-ui/core.js?body=1" for 10.0.2.2 at 2015-10-03 13:54:46 +0000


Started GET "/assets/jquery-ui/widget.js?body=1" for 10.0.2.2 at 2015-10-03 13:54:46 +0000


Started GET "/assets/jquery-ui/accordion.js?body=1" for 10.0.2.2 at 2015-10-03 13:54:47 +0000


Started GET "/assets/jquery-ui/position.js?body=1" for 10.0.2.2 at 2015-10-03 13:54:48 +0000


Started GET "/assets/jquery-ui/menu.js?body=1" for 10.0.2.2 at 2015-10-03 13:54:48 +0000


Started GET "/assets/jquery-ui/autocomplete.js?body=1" for 10.0.2.2 at 2015-10-03 13:54:49 +0000


Started GET "/assets/jquery-ui/button.js?body=1" for 10.0.2.2 at 2015-10-03 13:54:50 +0000


Started GET "/assets/jquery-ui/datepicker.js?body=1" for 10.0.2.2 at 2015-10-03 13:54:51 +0000


Started GET "/assets/jquery-ui/mouse.js?body=1" for 10.0.2.2 at 2015-10-03 13:54:51 +0000


Started GET "/assets/jquery-ui/draggable.js?body=1" for 10.0.2.2 at 2015-10-03 13:54:52 +0000


Started GET "/assets/jquery-ui/resizable.js?body=1" for 10.0.2.2 at 2015-10-03 13:54:53 +0000


Started GET "/assets/jquery-ui/dialog.js?body=1" for 10.0.2.2 at 2015-10-03 13:54:53 +0000


Started GET "/assets/jquery-ui/droppable.js?body=1" for 10.0.2.2 at 2015-10-03 13:54:54 +0000


Started GET "/assets/jquery-ui/effect.js?body=1" for 10.0.2.2 at 2015-10-03 13:54:55 +0000


Started GET "/assets/jquery-ui/effect-blind.js?body=1" for 10.0.2.2 at 2015-10-03 13:54:56 +0000


Started GET "/assets/jquery-ui/effect-bounce.js?body=1" for 10.0.2.2 at 2015-10-03 13:54:57 +0000


Started GET "/assets/jquery-ui/effect-clip.js?body=1" for 10.0.2.2 at 2015-10-03 13:54:58 +0000


Started GET "/assets/jquery-ui/effect-drop.js?body=1" for 10.0.2.2 at 2015-10-03 13:54:58 +0000


Started GET "/assets/jquery-ui/effect-explode.js?body=1" for 10.0.2.2 at 2015-10-03 13:54:59 +0000


Started GET "/assets/jquery-ui/effect-fade.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:00 +0000


Started GET "/assets/jquery-ui/effect-fold.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:00 +0000


Started POST "/pt/sign_up" for 10.0.2.2 at 2015-10-03 13:55:01 +0000
Processing by Devise::RegistrationsController#create as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"UpSfZxifUIHda3vQSpRK2AaA1bFseuR8AxVQUK6xBK8=", "user"=>{"email"=>"bob7gopisri@gmail.com", "show_password"=>"[FILTERED]", "password"=>"[FILTERED]", "newsletter"=>"1"}, "commit"=>"You register", "locale"=>"pt"}
Unpermitted parameters: show_password
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT  1 AS one FROM "users"  WHERE "users"."email" = 'bob7gopisri@gmail.com' LIMIT 1
  [1m[36mSQL (23.5ms)[0m  [1mINSERT INTO "users" ("created_at", "email", "encrypted_password", "newsletter", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["created_at", "2015-10-03 13:55:02.471636"], ["email", "bob7gopisri@gmail.com"], ["encrypted_password", "$2a$10$a1o.ccbLEZGbjXV2Lu/5zePO9ghp6znCBw2jD5UJsfpcwz6MXj0gC"], ["newsletter", "t"], ["updated_at", "2015-10-03 13:55:02.471636"]]
  [1m[35mSQL (2.8ms)[0m  INSERT INTO "user_notifications" ("created_at", "from_email", "from_name", "locale", "template_name", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"  [["created_at", "2015-10-03 13:55:02.570428"], ["from_email", "contato@catarse.me"], ["from_name", "Catarse"], ["locale", "pt"], ["template_name", "new_user_registration"], ["updated_at", "2015-10-03 13:55:02.570428"], ["user_id", 1]]
  [1m[36m (2.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mUPDATE "users" SET "current_sign_in_at" = $1, "current_sign_in_ip" = $2, "last_sign_in_at" = $3, "last_sign_in_ip" = $4, "sign_in_count" = $5, "updated_at" = $6 WHERE "users"."id" = 1[0m  [["current_sign_in_at", "2015-10-03 13:55:02.602953"], ["current_sign_in_ip", "10.0.2.2"], ["last_sign_in_at", "2015-10-03 13:55:02.602953"], ["last_sign_in_ip", "10.0.2.2"], ["sign_in_count", 1], ["updated_at", "2015-10-03 13:55:02.605855"]]
  [1m[35mProject Exists (0.3ms)[0m  SELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1  [["user_id", 1]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
Redirected to http://0.0.0.0:3000/
Completed 302 Found in 449ms (ActiveRecord: 35.5ms)


Started GET "/assets/jquery-ui/effect-highlight.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:02 +0000


Started GET "/assets/jquery-ui/effect-size.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:03 +0000


Started GET "/assets/jquery-ui/effect-scale.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:04 +0000


Started GET "/assets/jquery-ui/effect-puff.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:04 +0000


Started GET "/assets/jquery-ui/effect-pulsate.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:05 +0000


Started GET "/assets/jquery-ui/effect-shake.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:06 +0000


Started GET "/" for 10.0.2.2 at 2015-10-03 13:55:06 +0000
Processing by ProjectsController#index as HTML
  [1m[35mUser Load (1.1ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPayment Load (3.6ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mProject Load (1.6ms)[0m  SELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC  [["user_id", 1]]
  [1m[36mProject Load (0.7ms)[0m  [1mSELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/shared/_user_menu.html.slim (213.8ms)
  Rendered catarse_bootstrap/shared/_header.html.slim (474.2ms)
  Rendered catarse_bootstrap/shared/_header_big.html.slim (511.7ms)
  [1m[35mProject Load (0.9ms)[0m  SELECT  "projects".* FROM "projects"  WHERE ("projects"."state" IN ('online')) AND (EXISTS(SELECT true FROM users u WHERE u.id = projects.user_id AND lower(u.address_state) = lower(NULL)))  ORDER BY random() LIMIT 3
  [1m[36mProjectsForHome Load (3.0ms)[0m  [1mSELECT "projects_for_home".* FROM "projects_for_home"  WHERE "projects_for_home"."origin" = 'recommended'[0m
  Rendered catarse_bootstrap/projects/_card.html.slim (0.1ms)
  [1m[35mProjectsForHome Load (2.2ms)[0m  SELECT "projects_for_home".* FROM "projects_for_home"  WHERE "projects_for_home"."origin" = 'expiring'
  Rendered catarse_bootstrap/projects/_card.html.slim (0.1ms)
  [1m[36mProjectsForHome Load (2.1ms)[0m  [1mSELECT "projects_for_home".* FROM "projects_for_home"  WHERE "projects_for_home"."origin" = 'recents'[0m
  Rendered catarse_bootstrap/projects/_card.html.slim (0.2ms)
  Rendered catarse_bootstrap/shared/_footer_welcome.html.slim (16.6ms)
  Rendered catarse_bootstrap/shared/_footer_about.html.slim (17.3ms)
  Rendered catarse_bootstrap/shared/_footer_navigate.html.slim (4.3ms)
  Rendered catarse_bootstrap/shared/_newsletter.html.slim (5.8ms)
  Rendered layouts/_facebook_like.html.slim (0.5ms)
  Rendered catarse_bootstrap/shared/_footer_big.html.slim (232.0ms)
  Rendered catarse_bootstrap/projects/index.html.slim within layouts/catarse_bootstrap (966.5ms)
  [1m[35mCACHE (0.0ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  [1m[36mUserTotal Load (0.4ms)[0m  [1mSELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1[0m  [["user_id", 1]]
  [1m[35m (1.6ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))  [["user_id", 1]]
  [1m[36m (0.4ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))[0m  [["user_id", 1]]
  [1m[35mProject Exists (0.4ms)[0m  SELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1  [["user_id", 1]]
  [1m[36mCACHE (0.1ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (0.7ms)
  Rendered layouts/_facebook_sdk.html.slim (0.9ms)
Completed 200 OK in 1449ms (Views: 1420.5ms | ActiveRecord: 22.1ms)


Started GET "/assets/jquery-ui/effect-slide.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:08 +0000


Started GET "/assets/jquery-ui/effect-transfer.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:09 +0000


Started GET "/assets/jquery-ui/progressbar.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:10 +0000


Started GET "/assets/jquery-ui/selectable.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:12 +0000


Started GET "/assets/jquery-ui/selectmenu.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:13 +0000


Started GET "/assets/catarse_bootstrap/logo_big.png" for 10.0.2.2 at 2015-10-03 13:55:13 +0000


Started GET "/assets/jquery.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:14 +0000


Started GET "/assets/underscore.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:15 +0000


Started GET "/assets/backbone.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:17 +0000


Started GET "/assets/jquery-ui/core.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:18 +0000


Started GET "/assets/jquery-ui/widget.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:19 +0000


Started GET "/assets/jquery-ui/accordion.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:20 +0000


Started GET "/assets/jquery-ui/position.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:20 +0000


Started GET "/assets/jquery-ui/menu.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:21 +0000


Started GET "/assets/jquery-ui/autocomplete.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:22 +0000


Started GET "/assets/jquery-ui/button.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:23 +0000


Started GET "/assets/jquery-ui/datepicker.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:24 +0000


Started GET "/assets/jquery-ui/mouse.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:25 +0000


Started GET "/assets/jquery-ui/draggable.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:26 +0000


Started GET "/assets/jquery-ui/resizable.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:26 +0000


Started GET "/assets/jquery-ui/dialog.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:27 +0000


Started GET "/assets/jquery-ui/droppable.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:28 +0000


Started GET "/assets/jquery-ui/effect.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:28 +0000


Started GET "/assets/jquery-ui/effect-transfer.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:29 +0000


Started GET "/assets/jquery-ui/progressbar.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:30 +0000


Started GET "/assets/jquery-ui/selectable.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:30 +0000


Started GET "/assets/jquery-ui/selectmenu.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:31 +0000


Started GET "/assets/jquery-ui/slider.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:32 +0000


Started GET "/assets/jquery-ui/spinner.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:32 +0000


Started GET "/assets/jquery-ui/sortable.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:33 +0000


Started GET "/assets/jquery-ui/tabs.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:34 +0000


Started GET "/assets/jquery-ui/tooltip.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:35 +0000


Started GET "/assets/jquery-ui.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:36 +0000


Started GET "/assets/jquery.elastic.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:37 +0000


Started GET "/assets/best_in_place.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:38 +0000


Started GET "/assets/app/pages/how_it_works.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:38 +0000


Started GET "/assets/cocoon.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:39 +0000


Started GET "/assets/jquery-ui/effect-blind.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:40 +0000


Started GET "/assets/app/pages/registration.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:41 +0000


Started GET "/assets/app/pages/reset_password.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:42 +0000


Started GET "/assets/app/pages/search.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:42 +0000


Started GET "/assets/jquery-ui/effect-bounce.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:43 +0000


Started GET "/assets/jquery-ui/effect-drop.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:44 +0000


Started GET "/assets/jquery-ui/effect-explode.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:45 +0000


Started GET "/assets/jquery-ui/effect-fold.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:45 +0000


Started GET "/assets/jquery-ui/effect-highlight.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:46 +0000


Started GET "/assets/jquery-ui/effect-clip.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:47 +0000


Started GET "/assets/jquery-ui/effect-fade.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:48 +0000


Started GET "/assets/jquery-ui/effect-size.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:48 +0000


Started GET "/assets/jquery-ui/effect-scale.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:49 +0000


Started GET "/assets/jquery-ui/effect-puff.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:50 +0000


Started GET "/assets/jquery-ui/effect-pulsate.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:51 +0000


Started GET "/assets/jquery-ui/effect-shake.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:52 +0000


Started GET "/assets/jquery-ui/effect-slide.js?body=1" for 10.0.2.2 at 2015-10-03 13:55:52 +0000


Started GET "/assets/hero-new-home.jpg" for 10.0.2.2 at 2015-10-03 13:55:53 +0000


Started GET "/assets/catarse_bootstrap/user.jpg" for 10.0.2.2 at 2015-10-03 13:55:54 +0000


Started GET "/assets/catarse_bootstrap/lupa.png" for 10.0.2.2 at 2015-10-03 13:55:55 +0000


Started GET "/assets/catarse_bootstrap/loader.gif" for 10.0.2.2 at 2015-10-03 13:55:55 +0000


Started GET "/assets/catarse_bootstrap/icon-newsletter.png" for 10.0.2.2 at 2015-10-03 13:55:56 +0000


Started GET "/assets/logo-footer.png" for 10.0.2.2 at 2015-10-03 13:55:57 +0000


Started GET "/assets/icon-blog.png" for 10.0.2.2 at 2015-10-03 13:55:57 +0000


Started GET "/pt/users/1-sem-nome/edit" for 10.0.2.2 at 2015-10-03 13:56:25 +0000
Processing by UsersController#edit as HTML
  Parameters: {"id"=>"1-sem-nome", "locale"=>"pt"}
  [1m[35mUser Load (0.7ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."deactivated_at" IS NULL AND "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Load (1.9ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mProject Load (0.9ms)[0m  SELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC  [["user_id", 1]]
  [1m[36mBankAccount Load (0.8ms)[0m  [1mSELECT  "bank_accounts".* FROM "bank_accounts"  WHERE "bank_accounts"."user_id" = $1 LIMIT 1[0m  [["user_id", 1]]
  [1m[35mPayment Load (1.1ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC[0m  [["user_id", 1]]
  [1m[35mProject Load (0.6ms)[0m  SELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))  [["user_id", 1]]
  Rendered catarse_bootstrap/shared/_user_menu.html.slim (17.6ms)
  Rendered catarse_bootstrap/shared/_header.html.slim (58.1ms)
  Rendered catarse_bootstrap/shared/_header_big.html.slim (93.1ms)
  [1m[36mContribution Exists (0.3ms)[0m  [1mSELECT  1 AS one FROM "contributions"  WHERE "contributions"."user_id" = $1 LIMIT 1[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/users/_dashboard_contributions.html.slim (12.7ms)
  [1m[35mCACHE (0.0ms)[0m  SELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))  [["user_id", 1]]
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (1.2ms)
  [1m[36mUserLink Load (3.9ms)[0m  [1mSELECT "user_links".* FROM "user_links"  WHERE "user_links"."user_id" = $1[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/users/_link_fields.html.slim (27.3ms)
  Rendered catarse_bootstrap/users/_link_fields.html.slim (26.2ms)
  Rendered catarse_bootstrap/users/_dashboard_about_me.html.slim (246.0ms)
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (0.5ms)
  [1m[35mCountry Load (2.4ms)[0m  SELECT "countries".* FROM "countries"
  [1m[36m (6.0ms)[0m  [1mSELECT "states"."name", "states"."acronym" FROM "states"   ORDER BY "states"."name" ASC[0m
  Rendered catarse_bootstrap/users/_dashboard_settings.html.slim (513.8ms)
  [1m[35m (2.4ms)[0m  SELECT DISTINCT COUNT(DISTINCT "projects"."id") FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  [["user_id", 1]]
  [1m[36mCategoryFollower Load (5.6ms)[0m  [1mSELECT "category_followers".* FROM "category_followers"  WHERE "category_followers"."user_id" = $1[0m  [["user_id", 1]]
  [1m[35mProject Load (0.9ms)[0m  SELECT "projects".* FROM "projects"  WHERE 1=0
  Rendered catarse_bootstrap/users/_dashboard_notifications.html.slim (66.8ms)
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (1.1ms)
  [1m[36mCreditCard Load (4.0ms)[0m  [1mSELECT "credit_cards".* FROM "credit_cards"  WHERE "credit_cards"."user_id" = $1[0m  [["user_id", 1]]
  [1m[35mBank Load (3.8ms)[0m  SELECT banks.code, banks.id, banks.name, count(bank_accounts.bank_id) as total FROM "banks" left join bank_accounts on bank_accounts.bank_id = banks.id GROUP BY banks.id, bank_accounts.bank_id  ORDER BY total DESC
  Rendered catarse_bootstrap/users/_dashboard_billing.html.slim (490.2ms)
  Rendered catarse_bootstrap/users/_dashboard_talents.html.slim (9.0ms)
  Rendered catarse_bootstrap/shared/_footer_welcome.html.slim (16.9ms)
  Rendered catarse_bootstrap/shared/_footer_about.html.slim (10.7ms)
  Rendered catarse_bootstrap/shared/_footer_navigate.html.slim (2.5ms)
  Rendered catarse_bootstrap/shared/_newsletter.html.slim (6.0ms)
  Rendered layouts/_facebook_like.html.slim (0.7ms)
  Rendered catarse_bootstrap/shared/_footer_big.html.slim (212.5ms)
  Rendered catarse_bootstrap/users/edit.html.slim within layouts/catarse_bootstrap (2541.0ms)
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mUserTotal Load (0.6ms)[0m  SELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1  [["user_id", 1]]
  [1m[36m (0.4ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  [1m[35m (0.7ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))  [["user_id", 1]]
  [1m[36mProject Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1[0m  [["user_id", 1]]
  [1m[35mCACHE (0.2ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (0.7ms)
  Rendered layouts/_facebook_sdk.html.slim (0.4ms)
Completed 200 OK in 3067ms (Views: 2900.4ms | ActiveRecord: 51.7ms)


Started GET "/assets/redactor-rails/index.css?body=1" for 10.0.2.2 at 2015-10-03 13:56:29 +0000


Started GET "/assets/redactor-rails/css/redactor.css?body=1" for 10.0.2.2 at 2015-10-03 13:56:30 +0000


Started GET "/assets/redactor.css?body=1" for 10.0.2.2 at 2015-10-03 13:56:31 +0000


Started GET "/assets/catarse_bootstrap/logo_big.png" for 10.0.2.2 at 2015-10-03 13:56:31 +0000


Started GET "/assets/backbone.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:32 +0000


Started GET "/assets/jquery.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:33 +0000


Started GET "/assets/underscore.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:33 +0000


Started GET "/assets/jquery-ui/widget.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:34 +0000


Started GET "/assets/jquery-ui/core.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:35 +0000


Started GET "/assets/jquery-ui/accordion.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:35 +0000


Started GET "/assets/jquery-ui/position.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:36 +0000


Started GET "/assets/jquery-ui/menu.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:37 +0000


Started GET "/assets/jquery-ui/autocomplete.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:37 +0000


Started GET "/assets/jquery-ui/button.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:38 +0000


Started GET "/assets/jquery-ui/datepicker.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:39 +0000


Started GET "/assets/jquery-ui/mouse.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:39 +0000


Started GET "/assets/jquery-ui/draggable.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:40 +0000


Started GET "/assets/jquery-ui/resizable.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:40 +0000


Started GET "/assets/jquery-ui/dialog.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:41 +0000


Started GET "/assets/jquery-ui/droppable.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:42 +0000


Started GET "/assets/jquery-ui/effect.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:42 +0000


Started GET "/assets/jquery-ui/effect-blind.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:43 +0000


Started GET "/assets/jquery-ui/effect-bounce.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:44 +0000


Started GET "/assets/jquery-ui/effect-clip.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:44 +0000


Started GET "/assets/jquery-ui/effect-drop.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:45 +0000


Started GET "/assets/jquery-ui/effect-explode.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:46 +0000


Started GET "/assets/redactor-rails/redactor.min.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:46 +0000


Started GET "/assets/redactor-rails/langs/pt_br.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:47 +0000


Started GET "/assets/redactor-rails/video.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:47 +0000


Started GET "/assets/jquery-ui/effect-fold.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:48 +0000


Started GET "/assets/jquery-ui/effect-highlight.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:49 +0000


Started GET "/assets/redactor-rails/config.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:49 +0000


Started GET "/assets/redactor.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:50 +0000


Started GET "/assets/jquery-ui/effect-fade.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:51 +0000


Started GET "/assets/jquery-ui/effect-size.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:51 +0000


Started GET "/assets/jquery-ui/effect-scale.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:52 +0000


Started GET "/assets/jquery-ui/effect-puff.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:53 +0000


Started GET "/pt/users/1-sem-nome/edit" for 10.0.2.2 at 2015-10-03 13:56:53 +0000
Processing by UsersController#edit as HTML
  Parameters: {"id"=>"1-sem-nome", "locale"=>"pt"}
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."deactivated_at" IS NULL AND "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Load (0.7ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mProject Load (0.8ms)[0m  [1mSELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC[0m  [["user_id", 1]]
  [1m[35mBankAccount Load (0.5ms)[0m  SELECT  "bank_accounts".* FROM "bank_accounts"  WHERE "bank_accounts"."user_id" = $1 LIMIT 1  [["user_id", 1]]
  [1m[36mPayment Load (1.2ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mCACHE (0.0ms)[0m  SELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC  [["user_id", 1]]
  [1m[36mProject Load (0.6ms)[0m  [1mSELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/shared/_user_menu.html.slim (10.1ms)
  Rendered catarse_bootstrap/shared/_header.html.slim (49.9ms)
  Rendered catarse_bootstrap/shared/_header_big.html.slim (83.7ms)
  [1m[35mContribution Exists (0.4ms)[0m  SELECT  1 AS one FROM "contributions"  WHERE "contributions"."user_id" = $1 LIMIT 1  [["user_id", 1]]
  Rendered catarse_bootstrap/users/_dashboard_contributions.html.slim (3.2ms)
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (0.7ms)
  [1m[35mUserLink Load (0.5ms)[0m  SELECT "user_links".* FROM "user_links"  WHERE "user_links"."user_id" = $1  [["user_id", 1]]
  Rendered catarse_bootstrap/users/_link_fields.html.slim (27.7ms)
  Rendered catarse_bootstrap/users/_link_fields.html.slim (27.6ms)
  Rendered catarse_bootstrap/users/_dashboard_about_me.html.slim (346.6ms)
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (0.5ms)
  [1m[36mCountry Load (3.1ms)[0m  [1mSELECT "countries".* FROM "countries"[0m
  Rendered catarse_bootstrap/users/_dashboard_settings.html.slim (425.5ms)
  [1m[35m (0.9ms)[0m  SELECT DISTINCT COUNT(DISTINCT "projects"."id") FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  [["user_id", 1]]
  [1m[36mCategoryFollower Load (0.5ms)[0m  [1mSELECT "category_followers".* FROM "category_followers"  WHERE "category_followers"."user_id" = $1[0m  [["user_id", 1]]
  [1m[35mProject Load (0.5ms)[0m  SELECT "projects".* FROM "projects"  WHERE 1=0
  Rendered catarse_bootstrap/users/_dashboard_notifications.html.slim (12.7ms)
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (0.8ms)
  [1m[36mCreditCard Load (0.4ms)[0m  [1mSELECT "credit_cards".* FROM "credit_cards"  WHERE "credit_cards"."user_id" = $1[0m  [["user_id", 1]]
  [1m[35mBank Load (1.7ms)[0m  SELECT banks.code, banks.id, banks.name, count(bank_accounts.bank_id) as total FROM "banks" left join bank_accounts on bank_accounts.bank_id = banks.id GROUP BY banks.id, bank_accounts.bank_id  ORDER BY total DESC
  Rendered catarse_bootstrap/users/_dashboard_billing.html.slim (238.7ms)
  Rendered catarse_bootstrap/users/_dashboard_talents.html.slim (1.0ms)
  Rendered catarse_bootstrap/shared/_footer_welcome.html.slim (9.9ms)
  Rendered catarse_bootstrap/shared/_footer_about.html.slim (5.6ms)
  Rendered catarse_bootstrap/shared/_footer_navigate.html.slim (2.1ms)
  Rendered catarse_bootstrap/shared/_newsletter.html.slim (4.0ms)
  Rendered layouts/_facebook_like.html.slim (0.5ms)
  Rendered catarse_bootstrap/shared/_footer_big.html.slim (168.9ms)
  Rendered catarse_bootstrap/users/edit.html.slim within layouts/catarse_bootstrap (1522.9ms)
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mUserTotal Load (0.5ms)[0m  SELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1  [["user_id", 1]]
  [1m[36m (0.5ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  [1m[35m (0.5ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))  [["user_id", 1]]
  [1m[36mProject Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1[0m  [["user_id", 1]]
  [1m[35mCACHE (0.0ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (0.6ms)
  Rendered layouts/_facebook_sdk.html.slim (0.6ms)
Completed 200 OK in 1893ms (Views: 1866.9ms | ActiveRecord: 14.6ms)


Started GET "/assets/jquery-ui/effect-slide.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:56 +0000


Started GET "/assets/jquery-ui/effect-pulsate.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:56 +0000


Started GET "/assets/jquery-ui/effect-shake.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:57 +0000


Started GET "/assets/jquery-ui/effect-slide.js?body=1" for 10.0.2.2 at 2015-10-03 13:56:58 +0000


Started GET "/pt/start" for 10.0.2.2 at 2015-10-03 13:57:15 +0000
Processing by HighVoltage::PagesController#show as HTML
  Parameters: {"id"=>"start", "locale"=>"pt"}
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPayment Load (1.1ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  [1m[36mProject Load (1.5ms)[0m  [1mSELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC[0m  [["user_id", 1]]
  [1m[35mProject Load (0.6ms)[0m  SELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))  [["user_id", 1]]
  Rendered catarse_bootstrap/shared/_user_menu.html.slim (15.0ms)
  Rendered catarse_bootstrap/shared/_header.html.slim (55.7ms)
  Rendered catarse_bootstrap/shared/_header_big.html.slim (92.3ms)
  [1m[36mStatistics Load (0.9ms)[0m  [1mSELECT  "statistics".* FROM "statistics"   ORDER BY total_users DESC LIMIT 1[0m
  Rendered catarse_bootstrap/shared/_footer_welcome.html.slim (8.9ms)
  Rendered catarse_bootstrap/shared/_footer_about.html.slim (5.8ms)
  Rendered catarse_bootstrap/shared/_footer_navigate.html.slim (1.7ms)
  Rendered catarse_bootstrap/shared/_newsletter.html.slim (5.0ms)
  Rendered layouts/_facebook_like.html.slim (0.5ms)
  Rendered catarse_bootstrap/shared/_footer_big.html.slim (163.5ms)
  Rendered catarse_bootstrap/pages/start.html.slim within layouts/catarse_bootstrap (416.1ms)
  [1m[35mCACHE (0.0ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  [1m[36mUserTotal Load (0.4ms)[0m  [1mSELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1[0m  [["user_id", 1]]
  [1m[35m (0.4ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))  [["user_id", 1]]
  [1m[36m (0.5ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))[0m  [["user_id", 1]]
  [1m[35mProject Exists (0.6ms)[0m  SELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1  [["user_id", 1]]
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (0.7ms)
  Rendered layouts/_facebook_sdk.html.slim (0.6ms)
Completed 200 OK in 775ms (Views: 765.9ms | ActiveRecord: 8.5ms)


Started GET "/assets/catarse_bootstrap/logo_big.png" for 10.0.2.2 at 2015-10-03 13:57:17 +0000


Started GET "/assets/catarse_bootstrap/start/inscreva-seu-projeto.png" for 10.0.2.2 at 2015-10-03 13:57:17 +0000


Started GET "/assets/catarse_bootstrap/start/trabalhe-muito.png" for 10.0.2.2 at 2015-10-03 13:57:18 +0000


Started GET "/assets/catarse_bootstrap/start/tudo-ou-nada.png" for 10.0.2.2 at 2015-10-03 13:57:19 +0000


Started GET "/assets/catarse_bootstrap/start/mobilze-interessados.png" for 10.0.2.2 at 2015-10-03 13:57:20 +0000


Started GET "/assets/jquery.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:21 +0000


Started GET "/assets/underscore.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:21 +0000


Started GET "/assets/jquery.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:22 +0000


Started GET "/assets/underscore.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:23 +0000


Started GET "/assets/backbone.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:23 +0000


Started GET "/assets/jquery-ui/core.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:24 +0000


Started GET "/assets/jquery-ui/widget.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:25 +0000


Started GET "/assets/jquery-ui/accordion.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:25 +0000


Started GET "/assets/jquery-ui/button.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:26 +0000


Started GET "/assets/jquery-ui/datepicker.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:27 +0000


Started GET "/assets/jquery-ui/position.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:27 +0000


Started GET "/assets/jquery-ui/menu.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:28 +0000


Started GET "/assets/jquery-ui/autocomplete.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:29 +0000


Started GET "/assets/jquery-ui/mouse.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:30 +0000


Started GET "/assets/jquery-ui/draggable.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:30 +0000


Started GET "/assets/jquery-ui/effect.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:31 +0000


Started GET "/assets/jquery-ui/effect-blind.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:32 +0000


Started GET "/assets/jquery-ui/resizable.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:32 +0000


Started GET "/assets/jquery-ui/dialog.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:33 +0000


Started GET "/assets/jquery-ui/droppable.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:34 +0000


Started GET "/assets/jquery-ui/effect-bounce.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:34 +0000


Started GET "/assets/jquery-ui/effect-clip.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:35 +0000


Started GET "/assets/jquery-ui/effect-drop.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:35 +0000


Started GET "/assets/jquery-ui/effect-explode.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:36 +0000


Started GET "/assets/jquery-ui/effect-fade.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:37 +0000


Started GET "/assets/jquery-ui/effect-fold.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:37 +0000


Started GET "/assets/jquery-ui/effect-size.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:38 +0000


Started GET "/assets/jquery-ui/effect-highlight.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:39 +0000


Started GET "/assets/jquery-ui/effect-scale.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:39 +0000


Started GET "/assets/jquery-ui/effect-slide.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:40 +0000


Started GET "/assets/jquery-ui/effect-puff.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:41 +0000


Started GET "/assets/jquery-ui/effect-pulsate.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:41 +0000


Started GET "/assets/jquery-ui/effect-shake.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:42 +0000


Started GET "/pt/start" for 10.0.2.2 at 2015-10-03 13:57:47 +0000
Processing by HighVoltage::PagesController#show as HTML
  Parameters: {"id"=>"start", "locale"=>"pt"}
  [1m[35mUser Load (0.9ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPayment Load (1.1ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mProject Load (1.1ms)[0m  SELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC  [["user_id", 1]]
  [1m[36mProject Load (0.5ms)[0m  [1mSELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/shared/_user_menu.html.slim (11.7ms)
  Rendered catarse_bootstrap/shared/_header.html.slim (53.5ms)
  Rendered catarse_bootstrap/shared/_header_big.html.slim (84.7ms)
  [1m[35mStatistics Load (0.5ms)[0m  SELECT  "statistics".* FROM "statistics"   ORDER BY total_users DESC LIMIT 1
  Rendered catarse_bootstrap/shared/_footer_welcome.html.slim (9.7ms)
  Rendered catarse_bootstrap/shared/_footer_about.html.slim (7.2ms)
  Rendered catarse_bootstrap/shared/_footer_navigate.html.slim (2.0ms)
  Rendered catarse_bootstrap/shared/_newsletter.html.slim (3.8ms)
  Rendered layouts/_facebook_like.html.slim (0.6ms)
  Rendered catarse_bootstrap/shared/_footer_big.html.slim (171.8ms)
  Rendered catarse_bootstrap/pages/start.html.slim within layouts/catarse_bootstrap (347.3ms)
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mUserTotal Load (0.4ms)[0m  SELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1  [["user_id", 1]]
  [1m[36m (0.5ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  [1m[35m (0.4ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))  [["user_id", 1]]
  [1m[36mProject Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1[0m  [["user_id", 1]]
  [1m[35mCACHE (0.0ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (0.6ms)
  Rendered layouts/_facebook_sdk.html.slim (0.6ms)
Completed 200 OK in 709ms (Views: 702.7ms | ActiveRecord: 5.8ms)


Started GET "/assets/catarse_bootstrap/start/inscreva-seu-projeto.png" for 10.0.2.2 at 2015-10-03 13:57:48 +0000


Started GET "/assets/catarse_bootstrap/logo_big.png" for 10.0.2.2 at 2015-10-03 13:57:49 +0000


Started GET "/assets/catarse_bootstrap/start/tudo-ou-nada.png" for 10.0.2.2 at 2015-10-03 13:57:49 +0000


Started GET "/assets/catarse_bootstrap/start/mobilze-interessados.png" for 10.0.2.2 at 2015-10-03 13:57:50 +0000


Started GET "/assets/catarse_bootstrap/start/trabalhe-muito.png" for 10.0.2.2 at 2015-10-03 13:57:51 +0000


Started GET "/assets/jquery-ui/effect-transfer.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:51 +0000


Started GET "/assets/jquery-ui/selectmenu.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:52 +0000


Started GET "/assets/jquery-ui/slider.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:53 +0000


Started GET "/assets/jquery-ui/sortable.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:53 +0000


Started GET "/assets/jquery-ui/selectable.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:54 +0000


Started GET "/assets/jquery-ui/progressbar.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:55 +0000


Started GET "/assets/jquery-ui/spinner.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:55 +0000


Started GET "/assets/jquery-ui/tabs.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:56 +0000


Started GET "/assets/jquery-ui/tooltip.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:57 +0000


Started GET "/assets/jquery-ui.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:57 +0000


Started GET "/assets/jquery-ui/selectable.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:58 +0000


Started GET "/assets/jquery-ui/selectmenu.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:59 +0000


Started GET "/assets/jquery-ui/slider.js?body=1" for 10.0.2.2 at 2015-10-03 13:57:59 +0000


Started GET "/assets/jquery-ui/sortable.js?body=1" for 10.0.2.2 at 2015-10-03 13:58:00 +0000


Started GET "/assets/jquery-ui/spinner.js?body=1" for 10.0.2.2 at 2015-10-03 13:58:00 +0000


Started GET "/assets/jquery-ui/tabs.js?body=1" for 10.0.2.2 at 2015-10-03 13:58:01 +0000


Started GET "/assets/jquery-ui/tooltip.js?body=1" for 10.0.2.2 at 2015-10-03 13:58:02 +0000


Started GET "/assets/jquery-ui.js?body=1" for 10.0.2.2 at 2015-10-03 13:58:02 +0000


Started GET "/pt/logout" for 10.0.2.2 at 2015-10-03 14:02:41 +0000
Processing by ProjectsController#show as HTML
  Parameters: {"permalink"=>"logout", "locale"=>"pt"}
  [1m[36mProject Load (4.3ms)[0m  [1mSELECT  "projects".* FROM "projects"  WHERE ("projects"."state" NOT IN ('deleted')) AND (lower(permalink) = lower('logout'))  ORDER BY "projects"."id" ASC LIMIT 1[0m
  Rendered catarse_bootstrap/devise/shared/_header.html.slim (2.8ms)
  Rendered catarse_bootstrap/errors/not_found.html.slim within layouts/catarse_bootstrap (42.3ms)
  [1m[35mUser Load (0.7ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPayment Load (0.9ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mUserTotal Load (0.4ms)[0m  SELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1  [["user_id", 1]]
  [1m[36m (0.5ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  [1m[35m (0.5ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))  [["user_id", 1]]
  [1m[36mProject Exists (0.3ms)[0m  [1mSELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1[0m  [["user_id", 1]]
  [1m[35mProject Load (0.5ms)[0m  SELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))  [["user_id", 1]]
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (6.3ms)
  Rendered layouts/_facebook_sdk.html.slim (0.6ms)
Completed 404 Not Found in 466ms (Views: 454.1ms | ActiveRecord: 7.9ms)


Started GET "/assets/jquery.js?body=1" for 10.0.2.2 at 2015-10-03 14:02:42 +0000


Started GET "/assets/underscore.js?body=1" for 10.0.2.2 at 2015-10-03 14:02:43 +0000


Started GET "/assets/backbone.js?body=1" for 10.0.2.2 at 2015-10-03 14:02:43 +0000


Started GET "/assets/jquery-ui/core.js?body=1" for 10.0.2.2 at 2015-10-03 14:02:44 +0000


Started GET "/assets/jquery-ui/widget.js?body=1" for 10.0.2.2 at 2015-10-03 14:02:45 +0000


Started GET "/assets/jquery-ui/accordion.js?body=1" for 10.0.2.2 at 2015-10-03 14:02:45 +0000


Started GET "/assets/jquery-ui/position.js?body=1" for 10.0.2.2 at 2015-10-03 14:02:46 +0000


Started GET "/assets/jquery-ui/menu.js?body=1" for 10.0.2.2 at 2015-10-03 14:02:47 +0000


Started GET "/assets/jquery-ui/autocomplete.js?body=1" for 10.0.2.2 at 2015-10-03 14:02:47 +0000


Started GET "/assets/jquery-ui/button.js?body=1" for 10.0.2.2 at 2015-10-03 14:02:48 +0000


Started GET "/assets/jquery-ui/datepicker.js?body=1" for 10.0.2.2 at 2015-10-03 14:02:49 +0000


Started GET "/assets/jquery-ui/mouse.js?body=1" for 10.0.2.2 at 2015-10-03 14:02:50 +0000


Started GET "/assets/jquery-ui/draggable.js?body=1" for 10.0.2.2 at 2015-10-03 14:02:50 +0000


Started GET "/assets/jquery-ui/resizable.js?body=1" for 10.0.2.2 at 2015-10-03 14:02:51 +0000


Started GET "/assets/jquery-ui/dialog.js?body=1" for 10.0.2.2 at 2015-10-03 14:02:52 +0000


Started GET "/assets/jquery-ui/droppable.js?body=1" for 10.0.2.2 at 2015-10-03 14:02:53 +0000


Started GET "/assets/jquery-ui/effect.js?body=1" for 10.0.2.2 at 2015-10-03 14:02:53 +0000


Started GET "/assets/jquery-ui/effect-blind.js?body=1" for 10.0.2.2 at 2015-10-03 14:02:54 +0000


Started GET "/assets/jquery-ui/effect-bounce.js?body=1" for 10.0.2.2 at 2015-10-03 14:02:55 +0000


Started GET "/assets/jquery-ui/effect-clip.js?body=1" for 10.0.2.2 at 2015-10-03 14:02:55 +0000


Started GET "/assets/jquery-ui/effect-drop.js?body=1" for 10.0.2.2 at 2015-10-03 14:02:56 +0000


Started GET "/assets/jquery-ui/effect-explode.js?body=1" for 10.0.2.2 at 2015-10-03 14:02:57 +0000


Started GET "/assets/jquery-ui/effect-fade.js?body=1" for 10.0.2.2 at 2015-10-03 14:02:58 +0000


Started GET "/assets/jquery-ui/effect-fold.js?body=1" for 10.0.2.2 at 2015-10-03 14:02:59 +0000


Started GET "/assets/jquery-ui/effect-highlight.js?body=1" for 10.0.2.2 at 2015-10-03 14:02:59 +0000


Started GET "/assets/jquery-ui/effect-size.js?body=1" for 10.0.2.2 at 2015-10-03 14:03:00 +0000


Started GET "/assets/jquery-ui/effect-scale.js?body=1" for 10.0.2.2 at 2015-10-03 14:03:01 +0000


Started GET "/assets/jquery-ui/effect-puff.js?body=1" for 10.0.2.2 at 2015-10-03 14:03:02 +0000


Started GET "/assets/jquery-ui/effect-pulsate.js?body=1" for 10.0.2.2 at 2015-10-03 14:03:03 +0000


Started GET "/assets/jquery-ui/effect-shake.js?body=1" for 10.0.2.2 at 2015-10-03 14:03:04 +0000


Started GET "/assets/jquery-ui/effect-slide.js?body=1" for 10.0.2.2 at 2015-10-03 14:03:05 +0000


Started GET "/assets/jquery-ui/effect-transfer.js?body=1" for 10.0.2.2 at 2015-10-03 14:03:06 +0000


Started GET "/assets/jquery-ui/progressbar.js?body=1" for 10.0.2.2 at 2015-10-03 14:03:07 +0000


Started GET "/assets/jquery-ui/selectable.js?body=1" for 10.0.2.2 at 2015-10-03 14:03:07 +0000


Started GET "/assets/jquery-ui/selectmenu.js?body=1" for 10.0.2.2 at 2015-10-03 14:03:08 +0000


Started GET "/assets/jquery-ui/slider.js?body=1" for 10.0.2.2 at 2015-10-03 14:03:09 +0000


Started GET "/assets/jquery-ui/sortable.js?body=1" for 10.0.2.2 at 2015-10-03 14:03:10 +0000


Started GET "/assets/jquery-ui/spinner.js?body=1" for 10.0.2.2 at 2015-10-03 14:03:11 +0000


Started GET "/assets/jquery-ui/tabs.js?body=1" for 10.0.2.2 at 2015-10-03 14:03:12 +0000


Started GET "/assets/jquery-ui/tooltip.js?body=1" for 10.0.2.2 at 2015-10-03 14:03:13 +0000


Started GET "/assets/jquery-ui.js?body=1" for 10.0.2.2 at 2015-10-03 14:03:14 +0000


Started GET "/assets/jquery.elastic.js?body=1" for 10.0.2.2 at 2015-10-03 14:03:15 +0000


Started GET "/assets/best_in_place.js?body=1" for 10.0.2.2 at 2015-10-03 14:03:16 +0000


Started GET "/assets/cocoon.js?body=1" for 10.0.2.2 at 2015-10-03 14:03:17 +0000


Started GET "/pt/projects" for 10.0.2.2 at 2015-10-03 14:38:33 +0000
Processing by ProjectsController#index as HTML
  Parameters: {"locale"=>"pt"}
  [1m[35mUser Load (0.8ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPayment Load (0.4ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mProject Load (1.0ms)[0m  SELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC  [["user_id", 1]]
  [1m[36mProject Load (0.5ms)[0m  [1mSELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/shared/_user_menu.html.slim (13.0ms)
  Rendered catarse_bootstrap/shared/_header.html.slim (54.1ms)
  Rendered catarse_bootstrap/shared/_header_big.html.slim (91.4ms)
  [1m[35mProject Load (0.8ms)[0m  SELECT  "projects".* FROM "projects"  WHERE ("projects"."state" IN ('online')) AND (EXISTS(SELECT true FROM users u WHERE u.id = projects.user_id AND lower(u.address_state) = lower(NULL)))  ORDER BY random() LIMIT 3
  [1m[36mProjectsForHome Load (2.0ms)[0m  [1mSELECT "projects_for_home".* FROM "projects_for_home"  WHERE "projects_for_home"."origin" = 'recommended'[0m
  Rendered catarse_bootstrap/projects/_card.html.slim (0.1ms)
  [1m[35mProjectsForHome Load (2.2ms)[0m  SELECT "projects_for_home".* FROM "projects_for_home"  WHERE "projects_for_home"."origin" = 'expiring'
  Rendered catarse_bootstrap/projects/_card.html.slim (0.1ms)
  [1m[36mProjectsForHome Load (1.9ms)[0m  [1mSELECT "projects_for_home".* FROM "projects_for_home"  WHERE "projects_for_home"."origin" = 'recents'[0m
  Rendered catarse_bootstrap/projects/_card.html.slim (0.1ms)
  Rendered catarse_bootstrap/shared/_footer_welcome.html.slim (13.0ms)
  Rendered catarse_bootstrap/shared/_footer_about.html.slim (14.8ms)
  Rendered catarse_bootstrap/shared/_footer_navigate.html.slim (3.1ms)
  Rendered catarse_bootstrap/shared/_newsletter.html.slim (6.3ms)
  Rendered layouts/_facebook_like.html.slim (0.7ms)
  Rendered catarse_bootstrap/shared/_footer_big.html.slim (219.6ms)
  Rendered catarse_bootstrap/projects/index.html.slim within layouts/catarse_bootstrap (2686.7ms)
  [1m[35mCACHE (0.0ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  [1m[36mUserTotal Load (0.5ms)[0m  [1mSELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1[0m  [["user_id", 1]]
  [1m[35m (0.4ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))  [["user_id", 1]]
  [1m[36m (0.4ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))[0m  [["user_id", 1]]
  [1m[35mProject Exists (0.4ms)[0m  SELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1  [["user_id", 1]]
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (1.5ms)
  Rendered layouts/_facebook_sdk.html.slim (1.0ms)
Completed 200 OK in 3128ms (Views: 3111.9ms | ActiveRecord: 11.2ms)


Started GET "/assets/catarse_bootstrap/logo_big.png" for 10.0.2.2 at 2015-10-03 14:38:36 +0000


Started GET "/assets/catarse_bootstrap/loader.gif" for 10.0.2.2 at 2015-10-03 14:38:37 +0000


Started GET "/assets/catarse_bootstrap/lupa.png" for 10.0.2.2 at 2015-10-03 14:38:38 +0000


Started GET "/assets/catarse_bootstrap/user.jpg" for 10.0.2.2 at 2015-10-03 14:38:39 +0000


Started GET "/assets/icon-blog.png" for 10.0.2.2 at 2015-10-03 14:38:39 +0000


Started GET "/assets/jquery.js?body=1" for 10.0.2.2 at 2015-10-03 14:38:40 +0000


Started GET "/assets/underscore.js?body=1" for 10.0.2.2 at 2015-10-03 14:38:41 +0000


Started GET "/assets/backbone.js?body=1" for 10.0.2.2 at 2015-10-03 14:38:42 +0000


Started GET "/assets/jquery-ui/core.js?body=1" for 10.0.2.2 at 2015-10-03 14:38:43 +0000


Started GET "/assets/jquery-ui/widget.js?body=1" for 10.0.2.2 at 2015-10-03 14:38:44 +0000


Started GET "/assets/jquery-ui/accordion.js?body=1" for 10.0.2.2 at 2015-10-03 14:38:44 +0000


Started GET "/assets/jquery-ui/position.js?body=1" for 10.0.2.2 at 2015-10-03 14:38:45 +0000


Started GET "/assets/jquery-ui/menu.js?body=1" for 10.0.2.2 at 2015-10-03 14:38:46 +0000


Started GET "/assets/jquery-ui/autocomplete.js?body=1" for 10.0.2.2 at 2015-10-03 14:38:46 +0000


Started GET "/assets/jquery-ui/button.js?body=1" for 10.0.2.2 at 2015-10-03 14:38:47 +0000


Started GET "/assets/jquery-ui/datepicker.js?body=1" for 10.0.2.2 at 2015-10-03 14:38:48 +0000


Started GET "/assets/jquery-ui/mouse.js?body=1" for 10.0.2.2 at 2015-10-03 14:38:49 +0000


Started GET "/assets/jquery-ui/draggable.js?body=1" for 10.0.2.2 at 2015-10-03 14:38:49 +0000


Started GET "/pt/start" for 10.0.2.2 at 2015-10-03 14:38:50 +0000
Processing by HighVoltage::PagesController#show as HTML
  Parameters: {"id"=>"start", "locale"=>"pt"}
  [1m[35mUser Load (0.7ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPayment Load (0.5ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mProject Load (0.5ms)[0m  SELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC  [["user_id", 1]]
  [1m[36mProject Load (0.4ms)[0m  [1mSELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/shared/_user_menu.html.slim (11.8ms)
  Rendered catarse_bootstrap/shared/_header.html.slim (55.4ms)
  Rendered catarse_bootstrap/shared/_header_big.html.slim (90.4ms)
  [1m[35mStatistics Load (0.5ms)[0m  SELECT  "statistics".* FROM "statistics"   ORDER BY total_users DESC LIMIT 1
  Rendered catarse_bootstrap/shared/_footer_welcome.html.slim (15.4ms)
  Rendered catarse_bootstrap/shared/_footer_about.html.slim (8.6ms)
  Rendered catarse_bootstrap/shared/_footer_navigate.html.slim (2.3ms)
  Rendered catarse_bootstrap/shared/_newsletter.html.slim (4.0ms)
  Rendered layouts/_facebook_like.html.slim (0.7ms)
  Rendered catarse_bootstrap/shared/_footer_big.html.slim (201.7ms)
  Rendered catarse_bootstrap/pages/start.html.slim within layouts/catarse_bootstrap (374.9ms)
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mUserTotal Load (0.3ms)[0m  SELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1  [["user_id", 1]]
  [1m[36m (0.4ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  [1m[35m (1.2ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))  [["user_id", 1]]
  [1m[36mProject Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1[0m  [["user_id", 1]]
  [1m[35mCACHE (0.0ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (0.7ms)
  Rendered layouts/_facebook_sdk.html.slim (0.8ms)
Completed 200 OK in 789ms (Views: 783.3ms | ActiveRecord: 4.9ms)


Started GET "/assets/jquery-ui/resizable.js?body=1" for 10.0.2.2 at 2015-10-03 14:38:52 +0000


Started GET "/assets/jquery-ui/dialog.js?body=1" for 10.0.2.2 at 2015-10-03 14:38:53 +0000


Started GET "/assets/jquery-ui/droppable.js?body=1" for 10.0.2.2 at 2015-10-03 14:38:53 +0000


Started GET "/assets/jquery-ui/effect.js?body=1" for 10.0.2.2 at 2015-10-03 14:38:54 +0000


Started GET "/assets/jquery-ui/effect-blind.js?body=1" for 10.0.2.2 at 2015-10-03 14:38:55 +0000


Started GET "/assets/jquery-ui/effect-bounce.js?body=1" for 10.0.2.2 at 2015-10-03 14:38:55 +0000


Started GET "/assets/jquery-ui/effect-clip.js?body=1" for 10.0.2.2 at 2015-10-03 14:38:56 +0000


Started GET "/assets/catarse_bootstrap/icon-newsletter.png" for 10.0.2.2 at 2015-10-03 14:38:57 +0000


Started GET "/assets/jquery-ui/resizable.js?body=1" for 10.0.2.2 at 2015-10-03 14:38:57 +0000


Started GET "/assets/jquery-ui/dialog.js?body=1" for 10.0.2.2 at 2015-10-03 14:38:58 +0000


Started GET "/assets/jquery-ui/droppable.js?body=1" for 10.0.2.2 at 2015-10-03 14:38:59 +0000


Started GET "/assets/jquery-ui/effect.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:00 +0000


Started GET "/assets/jquery-ui/effect-blind.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:00 +0000


Started GET "/assets/jquery-ui/effect-bounce.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:01 +0000


Started GET "/assets/jquery-ui/effect-clip.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:02 +0000


Started GET "/assets/jquery-ui/effect-drop.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:02 +0000


Started GET "/assets/jquery-ui/effect-fade.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:03 +0000


Started GET "/assets/jquery-ui/effect-fold.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:04 +0000


Started GET "/assets/jquery-ui/effect-explode.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:04 +0000


Started GET "/assets/jquery-ui/effect-highlight.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:05 +0000


Started GET "/assets/jquery-ui/effect-size.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:06 +0000


Started GET "/assets/jquery-ui/effect-scale.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:06 +0000


Started GET "/assets/jquery-ui/effect-slide.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:07 +0000


Started GET "/assets/jquery-ui/effect-puff.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:08 +0000


Started GET "/assets/jquery-ui/effect-pulsate.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:08 +0000


Started GET "/assets/jquery-ui/effect-shake.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:09 +0000


Started GET "/assets/jquery-ui/effect-transfer.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:10 +0000


Started GET "/assets/jquery-ui/progressbar.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:10 +0000


Started GET "/assets/jquery-ui/selectable.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:11 +0000


Started GET "/assets/jquery-ui/selectmenu.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:12 +0000


Started GET "/assets/jquery-ui/slider.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:12 +0000


Started GET "/assets/jquery-ui/sortable.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:13 +0000


Started GET "/assets/jquery-ui/tooltip.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:14 +0000


Started GET "/assets/jquery-ui/spinner.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:15 +0000


Started GET "/assets/jquery-ui/tabs.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:16 +0000


Started GET "/assets/jquery-ui.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:16 +0000


Started GET "/assets/cocoon.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:17 +0000


Started GET "/assets/jquery.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:18 +0000


Started GET "/assets/underscore.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:19 +0000


Started GET "/assets/jquery.elastic.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:19 +0000


Started GET "/assets/best_in_place.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:20 +0000


Started GET "/assets/backbone.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:21 +0000


Started GET "/assets/jquery-ui/accordion.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:22 +0000


Started GET "/assets/jquery-ui/position.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:22 +0000


Started GET "/assets/jquery-ui/menu.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:23 +0000


Started GET "/assets/jquery-ui/core.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:23 +0000


Started GET "/assets/jquery-ui/widget.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:24 +0000


Started GET "/assets/jquery-ui/autocomplete.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:25 +0000


Started GET "/assets/jquery-ui/button.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:25 +0000


Started GET "/assets/jquery-ui/datepicker.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:26 +0000


Started GET "/assets/jquery-ui/mouse.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:27 +0000


Started GET "/assets/jquery-ui/draggable.js?body=1" for 10.0.2.2 at 2015-10-03 14:39:27 +0000


Started GET "/assets/catarse_bootstrap/start/inscreva-seu-projeto.png" for 10.0.2.2 at 2015-10-03 14:39:28 +0000


Started GET "/assets/catarse_bootstrap/start/trabalhe-muito.png" for 10.0.2.2 at 2015-10-03 14:39:29 +0000


Started GET "/assets/catarse_bootstrap/start/tudo-ou-nada.png" for 10.0.2.2 at 2015-10-03 14:39:29 +0000


Started GET "/assets/catarse_bootstrap/start/mobilze-interessados.png" for 10.0.2.2 at 2015-10-03 14:39:30 +0000


Started GET "/assets/logo-footer.png" for 10.0.2.2 at 2015-10-03 14:39:31 +0000


Started GET "/en/start" for 10.0.2.2 at 2015-10-03 14:41:02 +0000

ActionController::RoutingError (No route matches [GET] "/en/start"):
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/debug_exceptions.rb:21:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/show_exceptions.rb:30:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/rack/logger.rb:38:in `call_app'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/rack/logger.rb:20:in `block in call'
  /home.rvm/gems/ruby-2.1.2/gems/activesupport-4.1.12/lib/active_support/tagged_logging.rb:68:in `block in tagged'
  /home.rvm/gems/ruby-2.1.2/gems/activesupport-4.1.12/lib/active_support/tagged_logging.rb:26:in `tagged'
  /home.rvm/gems/ruby-2.1.2/gems/activesupport-4.1.12/lib/active_support/tagged_logging.rb:68:in `tagged'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/rack/logger.rb:20:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/request_store-1.2.0/lib/request_store/middleware.rb:8:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/request_id.rb:21:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/rack-1.5.5/lib/rack/methodoverride.rb:21:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/rack-1.5.5/lib/rack/runtime.rb:17:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/activesupport-4.1.12/lib/active_support/cache/strategy/local_cache_middleware.rb:26:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/rack-1.5.5/lib/rack/lock.rb:17:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/static.rb:84:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/rack-1.5.5/lib/rack/sendfile.rb:112:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/engine.rb:514:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/application.rb:144:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/railtie.rb:194:in `public_send'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/railtie.rb:194:in `method_missing'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/rack/developer_mode.rb:48:in `traced_call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/rack-1.5.5/lib/rack/content_length.rb:14:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/thin-1.6.3/lib/thin/connection.rb:86:in `block in pre_process'
  /home.rvm/gems/ruby-2.1.2/gems/thin-1.6.3/lib/thin/connection.rb:84:in `catch'
  /home.rvm/gems/ruby-2.1.2/gems/thin-1.6.3/lib/thin/connection.rb:84:in `pre_process'
  /home.rvm/gems/ruby-2.1.2/gems/thin-1.6.3/lib/thin/connection.rb:53:in `process'
  /home.rvm/gems/ruby-2.1.2/gems/thin-1.6.3/lib/thin/connection.rb:39:in `receive_data'
  /home.rvm/gems/ruby-2.1.2/gems/eventmachine-1.0.7/lib/eventmachine.rb:187:in `run_machine'
  /home.rvm/gems/ruby-2.1.2/gems/eventmachine-1.0.7/lib/eventmachine.rb:187:in `run'
  /home.rvm/gems/ruby-2.1.2/gems/thin-1.6.3/lib/thin/backends/base.rb:73:in `start'
  /home.rvm/gems/ruby-2.1.2/gems/thin-1.6.3/lib/thin/server.rb:162:in `start'
  /home.rvm/gems/ruby-2.1.2/gems/rack-1.5.5/lib/rack/handler/thin.rb:16:in `run'
  /home.rvm/gems/ruby-2.1.2/gems/rack-1.5.5/lib/rack/server.rb:264:in `start'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/commands/server.rb:69:in `start'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/commands/commands_tasks.rb:81:in `block in server'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/commands/commands_tasks.rb:76:in `tap'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/commands/commands_tasks.rb:76:in `server'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/commands/commands_tasks.rb:40:in `run_command!'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/commands.rb:17:in `<top (required)>'
  bin/rails:4:in `require'
  bin/rails:4:in `<main>'


  Rendered /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (4.0ms)
  Rendered /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/templates/routes/_route.html.erb (35.3ms)
  Rendered /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/templates/routes/_route.html.erb (1.3ms)
  Rendered /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/templates/routes/_route.html.erb (0.4ms)
  Rendered /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/templates/routes/_route.html.erb (1.6ms)
  Rendered /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/templates/routes/_route.html.erb (1.7ms)
  Rendered /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/templates/routes/_route.html.erb (2.1ms)
  Rendered /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/templates/routes/_route.html.erb (2.5ms)
  Rendered /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/templates/routes/_table.html.erb (9.9ms)
  Rendered /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/templates/rescues/routing_error.html.erb within rescues/layout (232.2ms)
  [1m[36mCatarseSettingsDb::Setting Load (0.7ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_uri' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.6ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_test' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.6ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_id' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_secret' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_key_base' LIMIT 1
  [1m[36mOauthProvider Load (0.7ms)[0m  [1mSELECT "oauth_providers".* FROM "oauth_providers"[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_api_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_list_id' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_successful_projects_list' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_failed_projects_list' LIMIT 1[0m
  [1m[35mOauthProvider Load (0.5ms)[0m  SELECT "oauth_providers".* FROM "oauth_providers"
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_api_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_encryption_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.6ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_slip_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_credit_card_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (1.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_interest_rate' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_cents_fee' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'host' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.6ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_max_installments' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.7ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_minimum_value_for_installment' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (1.2ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'stone_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_diners_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_diners_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.8ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_amex_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.9ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_amex_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.6ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.6ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.6ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.8ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_system' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_contact' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'company_name' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1


Started GET "/pt/talent" for 10.0.2.2 at 2015-10-03 15:25:44 +0000
  [1m[36mActiveRecord::SchemaMigration Load (1.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HighVoltage::PagesController#show as HTML
  Parameters: {"id"=>"start", "locale"=>"pt"}
  [1m[35mUser Load (1.3ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPayment Load (1.6ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mProject Load (1.2ms)[0m  SELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC  [["user_id", 1]]
  [1m[36mProject Load (0.7ms)[0m  [1mSELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/shared/_user_menu.html.slim (135.6ms)
  Rendered catarse_bootstrap/shared/_header.html.slim (357.2ms)
  Rendered catarse_bootstrap/shared/_header_big.html.slim (418.5ms)
  [1m[35mStatistics Load (1.3ms)[0m  SELECT  "statistics".* FROM "statistics"   ORDER BY total_users DESC LIMIT 1
  Rendered catarse_bootstrap/shared/_footer_welcome.html.slim (25.6ms)
  Rendered catarse_bootstrap/shared/_footer_about.html.slim (90.5ms)
  Rendered catarse_bootstrap/shared/_footer_navigate.html.slim (9.7ms)
  Rendered catarse_bootstrap/shared/_newsletter.html.slim (15.6ms)
  Rendered layouts/_facebook_like.html.slim (5.1ms)
  Rendered catarse_bootstrap/shared/_footer_big.html.slim (327.9ms)
  Rendered catarse_bootstrap/pages/start.html.slim within layouts/catarse_bootstrap (1349.4ms)
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mUserTotal Load (0.5ms)[0m  SELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1  [["user_id", 1]]
  [1m[36m (0.4ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  [1m[35m (0.4ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))  [["user_id", 1]]
  [1m[36mProject Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1[0m  [["user_id", 1]]
  [1m[35mCACHE (0.0ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (10.6ms)
  Rendered layouts/_facebook_sdk.html.slim (7.7ms)
Completed 200 OK in 3781ms (Views: 3761.1ms | ActiveRecord: 18.3ms)


Started GET "/assets/catarse_bootstrap/logo_big.png" for 10.0.2.2 at 2015-10-03 15:25:49 +0000


Started GET "/assets/catarse_bootstrap/loader.gif" for 10.0.2.2 at 2015-10-03 15:25:50 +0000


Started GET "/assets/catarse_bootstrap/lupa.png" for 10.0.2.2 at 2015-10-03 15:25:51 +0000


Started GET "/assets/catarse_bootstrap/user.jpg" for 10.0.2.2 at 2015-10-03 15:25:51 +0000


Started GET "/assets/catarse_bootstrap/start/inscreva-seu-projeto.png" for 10.0.2.2 at 2015-10-03 15:25:52 +0000


Started GET "/assets/jquery.js?body=1" for 10.0.2.2 at 2015-10-03 15:25:53 +0000


Started GET "/assets/underscore.js?body=1" for 10.0.2.2 at 2015-10-03 15:25:53 +0000


Started GET "/assets/backbone.js?body=1" for 10.0.2.2 at 2015-10-03 15:25:54 +0000


Started GET "/assets/jquery-ui/core.js?body=1" for 10.0.2.2 at 2015-10-03 15:25:55 +0000


Started GET "/assets/jquery-ui/widget.js?body=1" for 10.0.2.2 at 2015-10-03 15:25:56 +0000


Started GET "/assets/jquery-ui/accordion.js?body=1" for 10.0.2.2 at 2015-10-03 15:25:56 +0000


Started GET "/assets/jquery-ui/position.js?body=1" for 10.0.2.2 at 2015-10-03 15:25:57 +0000


Started GET "/assets/jquery-ui/menu.js?body=1" for 10.0.2.2 at 2015-10-03 15:25:58 +0000


Started GET "/assets/jquery-ui/autocomplete.js?body=1" for 10.0.2.2 at 2015-10-03 15:25:58 +0000


Started GET "/assets/jquery-ui/button.js?body=1" for 10.0.2.2 at 2015-10-03 15:25:59 +0000


Started GET "/assets/jquery-ui/datepicker.js?body=1" for 10.0.2.2 at 2015-10-03 15:26:00 +0000


Started GET "/assets/jquery-ui/mouse.js?body=1" for 10.0.2.2 at 2015-10-03 15:26:00 +0000


Started GET "/assets/jquery-ui/draggable.js?body=1" for 10.0.2.2 at 2015-10-03 15:26:01 +0000


Started GET "/assets/jquery-ui/resizable.js?body=1" for 10.0.2.2 at 2015-10-03 15:26:02 +0000


Started GET "/assets/jquery-ui/dialog.js?body=1" for 10.0.2.2 at 2015-10-03 15:26:02 +0000


Started GET "/assets/jquery-ui/droppable.js?body=1" for 10.0.2.2 at 2015-10-03 15:26:03 +0000


Started GET "/assets/jquery-ui/effect.js?body=1" for 10.0.2.2 at 2015-10-03 15:26:04 +0000


Started GET "/assets/jquery-ui/effect-blind.js?body=1" for 10.0.2.2 at 2015-10-03 15:26:05 +0000


Started GET "/assets/jquery-ui/effect-bounce.js?body=1" for 10.0.2.2 at 2015-10-03 15:26:05 +0000


Started GET "/assets/jquery-ui/effect-clip.js?body=1" for 10.0.2.2 at 2015-10-03 15:26:06 +0000


Started GET "/assets/jquery-ui/effect-drop.js?body=1" for 10.0.2.2 at 2015-10-03 15:26:07 +0000


Started GET "/assets/jquery-ui/effect-explode.js?body=1" for 10.0.2.2 at 2015-10-03 15:26:07 +0000


Started GET "/assets/jquery-ui/effect-fade.js?body=1" for 10.0.2.2 at 2015-10-03 15:26:08 +0000


Started GET "/assets/jquery-ui/effect-fold.js?body=1" for 10.0.2.2 at 2015-10-03 15:26:09 +0000


Started GET "/assets/jquery-ui/effect-highlight.js?body=1" for 10.0.2.2 at 2015-10-03 15:26:09 +0000
  [1m[36mCatarseSettingsDb::Setting Load (0.8ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_uri' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_test' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.6ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_id' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_secret' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_key_base' LIMIT 1
  [1m[36mOauthProvider Load (0.8ms)[0m  [1mSELECT "oauth_providers".* FROM "oauth_providers"[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_api_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_list_id' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_successful_projects_list' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_failed_projects_list' LIMIT 1[0m
  [1m[35mOauthProvider Load (0.5ms)[0m  SELECT "oauth_providers".* FROM "oauth_providers"
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_api_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_encryption_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_slip_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_credit_card_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_interest_rate' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_cents_fee' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'host' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_max_installments' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_minimum_value_for_installment' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.7ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'stone_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_diners_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_diners_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_amex_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_amex_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_system' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_contact' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'company_name' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1


Started GET "/pt/talent" for 10.0.2.2 at 2015-10-03 15:35:09 +0000
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by HighVoltage::PagesController#show as HTML
  Parameters: {"id"=>"start", "locale"=>"pt"}
  [1m[35mUser Load (1.3ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPayment Load (1.7ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mProject Load (1.0ms)[0m  SELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC  [["user_id", 1]]
  [1m[36mProject Load (0.5ms)[0m  [1mSELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/shared/_user_menu.html.slim (124.4ms)
  Rendered catarse_bootstrap/shared/_header.html.slim (344.2ms)
  Rendered catarse_bootstrap/shared/_header_big.html.slim (405.4ms)
  [1m[35mStatistics Load (1.1ms)[0m  SELECT  "statistics".* FROM "statistics"   ORDER BY total_users DESC LIMIT 1
  Rendered catarse_bootstrap/shared/_footer_welcome.html.slim (21.3ms)
  Rendered catarse_bootstrap/shared/_footer_about.html.slim (95.9ms)
  Rendered catarse_bootstrap/shared/_footer_navigate.html.slim (9.5ms)
  Rendered catarse_bootstrap/shared/_newsletter.html.slim (17.5ms)
  Rendered layouts/_facebook_like.html.slim (4.8ms)
  Rendered catarse_bootstrap/shared/_footer_big.html.slim (323.3ms)
  Rendered catarse_bootstrap/pages/start.html.slim within layouts/catarse_bootstrap (1259.4ms)
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mUserTotal Load (0.3ms)[0m  SELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1  [["user_id", 1]]
  [1m[36m (0.4ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  [1m[35m (0.4ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))  [["user_id", 1]]
  [1m[36mProject Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1[0m  [["user_id", 1]]
  [1m[35mCACHE (0.0ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (6.7ms)
  Rendered layouts/_facebook_sdk.html.slim (6.4ms)
Completed 200 OK in 3485ms (Views: 3467.1ms | ActiveRecord: 16.7ms)


Started GET "/assets/catarse_bootstrap/logo_big.png" for 10.0.2.2 at 2015-10-03 15:35:13 +0000


Started GET "/assets/catarse_bootstrap/loader.gif" for 10.0.2.2 at 2015-10-03 15:35:14 +0000


Started GET "/assets/catarse_bootstrap/lupa.png" for 10.0.2.2 at 2015-10-03 15:35:15 +0000


Started GET "/assets/catarse_bootstrap/user.jpg" for 10.0.2.2 at 2015-10-03 15:35:16 +0000


Started GET "/assets/catarse_bootstrap/start/inscreva-seu-projeto.png" for 10.0.2.2 at 2015-10-03 15:35:16 +0000


Started GET "/assets/catarse_bootstrap/start/trabalhe-muito.png" for 10.0.2.2 at 2015-10-03 15:35:17 +0000


Started GET "/assets/jquery.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:18 +0000


Started GET "/assets/underscore.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:19 +0000


Started GET "/assets/backbone.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:19 +0000


Started GET "/assets/jquery-ui/core.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:20 +0000


Started GET "/assets/jquery-ui/widget.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:21 +0000


Started GET "/assets/jquery-ui/accordion.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:21 +0000


Started GET "/assets/jquery-ui/position.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:22 +0000


Started GET "/assets/jquery-ui/menu.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:23 +0000


Started GET "/assets/jquery-ui/autocomplete.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:23 +0000


Started GET "/assets/jquery-ui/button.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:24 +0000


Started GET "/assets/jquery-ui/datepicker.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:25 +0000


Started GET "/assets/jquery-ui/mouse.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:26 +0000


Started GET "/assets/jquery-ui/draggable.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:27 +0000


Started GET "/assets/jquery-ui/resizable.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:28 +0000


Started GET "/assets/jquery-ui/dialog.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:28 +0000


Started GET "/assets/jquery-ui/droppable.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:29 +0000


Started GET "/assets/jquery-ui/effect.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:30 +0000


Started GET "/assets/jquery-ui/effect-blind.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:31 +0000


Started GET "/assets/jquery-ui/effect-bounce.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:31 +0000


Started GET "/assets/jquery-ui/effect-clip.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:32 +0000


Started GET "/assets/jquery-ui/effect-drop.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:33 +0000


Started GET "/assets/jquery-ui/effect-explode.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:34 +0000


Started GET "/assets/jquery-ui/effect-fade.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:34 +0000


Started GET "/assets/jquery-ui/effect-fold.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:35 +0000


Started GET "/assets/jquery-ui/effect-highlight.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:36 +0000


Started GET "/assets/jquery-ui/effect-size.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:36 +0000


Started GET "/assets/jquery-ui/effect-scale.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:37 +0000


Started GET "/assets/jquery-ui/effect-puff.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:38 +0000


Started GET "/assets/jquery-ui/effect-pulsate.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:39 +0000


Started GET "/assets/jquery-ui/effect-shake.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:39 +0000


Started GET "/assets/jquery-ui/effect-slide.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:40 +0000


Started GET "/assets/jquery-ui/effect-transfer.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:41 +0000


Started GET "/assets/jquery-ui/progressbar.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:42 +0000


Started GET "/assets/jquery-ui/selectable.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:43 +0000


Started GET "/assets/jquery-ui/selectmenu.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:43 +0000


Started GET "/assets/jquery-ui/slider.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:44 +0000


Started GET "/assets/jquery-ui/sortable.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:45 +0000


Started GET "/pt/explore" for 10.0.2.2 at 2015-10-03 15:35:46 +0000
Processing by HighVoltage::PagesController#show as HTML
  Parameters: {"id"=>"explore", "locale"=>"pt"}
  [1m[36mUser Load (0.7ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPayment Load (1.7ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  [1m[36mProject Load (1.0ms)[0m  [1mSELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC[0m  [["user_id", 1]]
  [1m[35mProject Load (0.4ms)[0m  SELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))  [["user_id", 1]]
  Rendered catarse_bootstrap/shared/_user_menu.html.slim (12.2ms)
  Rendered catarse_bootstrap/shared/_header.html.slim (57.8ms)
  Rendered catarse_bootstrap/shared/_header_big.html.slim (100.7ms)
  [1m[36m (0.7ms)[0m  [1mSELECT COUNT(*) FROM "categories"  WHERE (exists(select true from projects p where p.category_id = categories.id and p.state not in('draft', 'rejected')))[0m
  Rendered catarse_bootstrap/shared/_footer_welcome.html.slim (11.7ms)
  Rendered catarse_bootstrap/shared/_footer_about.html.slim (7.6ms)
  Rendered catarse_bootstrap/shared/_footer_navigate.html.slim (2.9ms)
  Rendered catarse_bootstrap/shared/_newsletter.html.slim (3.8ms)
  Rendered layouts/_facebook_like.html.slim (0.9ms)
  Rendered catarse_bootstrap/shared/_footer_big.html.slim (188.0ms)
  Rendered catarse_bootstrap/pages/explore.html.slim within layouts/catarse_bootstrap (416.7ms)
  [1m[35mCACHE (0.0ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  [1m[36mUserTotal Load (0.4ms)[0m  [1mSELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1[0m  [["user_id", 1]]
  [1m[35m (0.9ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))  [["user_id", 1]]
  [1m[36m (1.7ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))[0m  [["user_id", 1]]
  [1m[35mProject Exists (0.4ms)[0m  SELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1  [["user_id", 1]]
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (0.9ms)
  Rendered layouts/_facebook_sdk.html.slim (0.7ms)
Completed 200 OK in 876ms (Views: 864.3ms | ActiveRecord: 10.3ms)


Started GET "/assets/jquery-ui/spinner.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:47 +0000


Started GET "/assets/jquery-ui/tabs.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:48 +0000


Started GET "/assets/jquery-ui/tooltip.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:49 +0000


Started GET "/assets/jquery-ui.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:50 +0000


Started GET "/assets/jquery.elastic.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:50 +0000


Started GET "/assets/best_in_place.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:51 +0000


Started GET "/pt/explore" for 10.0.2.2 at 2015-10-03 15:35:52 +0000
Processing by HighVoltage::PagesController#show as HTML
  Parameters: {"id"=>"explore", "locale"=>"pt"}
  [1m[35mUser Load (0.7ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPayment Load (1.5ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mProject Load (2.3ms)[0m  SELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC  [["user_id", 1]]
  [1m[36mProject Load (0.5ms)[0m  [1mSELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/shared/_user_menu.html.slim (27.0ms)
  Rendered catarse_bootstrap/shared/_header.html.slim (116.7ms)
  Rendered catarse_bootstrap/shared/_header_big.html.slim (158.1ms)
  [1m[35m (1.1ms)[0m  SELECT COUNT(*) FROM "categories"  WHERE (exists(select true from projects p where p.category_id = categories.id and p.state not in('draft', 'rejected')))
  Rendered catarse_bootstrap/shared/_footer_welcome.html.slim (11.8ms)
  Rendered catarse_bootstrap/shared/_footer_about.html.slim (9.1ms)
  Rendered catarse_bootstrap/shared/_footer_navigate.html.slim (1.9ms)
  Rendered catarse_bootstrap/shared/_newsletter.html.slim (4.5ms)
  Rendered layouts/_facebook_like.html.slim (0.6ms)
  Rendered catarse_bootstrap/shared/_footer_big.html.slim (209.0ms)
  Rendered catarse_bootstrap/pages/explore.html.slim within layouts/catarse_bootstrap (490.7ms)
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mUserTotal Load (0.4ms)[0m  SELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1  [["user_id", 1]]
  [1m[36m (0.5ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  [1m[35m (0.3ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))  [["user_id", 1]]
  [1m[36mProject Exists (0.6ms)[0m  [1mSELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1[0m  [["user_id", 1]]
  [1m[35mCACHE (0.0ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (0.8ms)
  Rendered layouts/_facebook_sdk.html.slim (0.7ms)
Completed 200 OK in 896ms (Views: 886.1ms | ActiveRecord: 8.0ms)


Started GET "/assets/cocoon.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:54 +0000


Started GET "/assets/jquery-ui/button.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:54 +0000


Started GET "/assets/catarse_bootstrap/start/tudo-ou-nada.png" for 10.0.2.2 at 2015-10-03 15:35:55 +0000


Started GET "/assets/catarse_bootstrap/start/mobilze-interessados.png" for 10.0.2.2 at 2015-10-03 15:35:56 +0000


Started GET "/assets/logo-footer.png" for 10.0.2.2 at 2015-10-03 15:35:57 +0000


Started GET "/assets/jquery.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:57 +0000


Started GET "/assets/catarse_bootstrap/logo_big.png" for 10.0.2.2 at 2015-10-03 15:35:58 +0000


Started GET "/assets/underscore.js?body=1" for 10.0.2.2 at 2015-10-03 15:35:59 +0000


Started GET "/assets/backbone.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:00 +0000


Started GET "/assets/jquery-ui/core.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:01 +0000


Started GET "/assets/jquery-ui/widget.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:01 +0000


Started GET "/assets/jquery-ui/accordion.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:02 +0000


Started GET "/assets/jquery-ui/position.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:03 +0000


Started GET "/assets/jquery-ui/menu.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:03 +0000


Started GET "/assets/jquery-ui/autocomplete.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:04 +0000


Started GET "/assets/jquery-ui/button.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:05 +0000


Started GET "/assets/jquery-ui/datepicker.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:06 +0000


Started GET "/assets/jquery-ui/mouse.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:06 +0000


Started GET "/assets/jquery-ui/draggable.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:07 +0000


Started GET "/assets/jquery-ui/resizable.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:07 +0000


Started GET "/assets/jquery-ui/dialog.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:08 +0000


Started GET "/assets/jquery-ui/droppable.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:09 +0000


Started GET "/assets/jquery-ui/effect.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:09 +0000


Started GET "/assets/jquery-ui/effect-blind.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:10 +0000


Started GET "/assets/jquery-ui/effect-bounce.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:11 +0000


Started GET "/assets/jquery-ui/effect-clip.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:11 +0000


Started GET "/assets/jquery-ui/effect-drop.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:12 +0000


Started GET "/assets/cocoon.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:13 +0000


Started GET "/assets/hero-explore.jpg" for 10.0.2.2 at 2015-10-03 15:36:13 +0000


Started GET "/assets/catarse_bootstrap/lupa.png" for 10.0.2.2 at 2015-10-03 15:36:14 +0000


Started GET "/assets/logo-footer.png" for 10.0.2.2 at 2015-10-03 15:36:15 +0000


Started GET "/assets/jquery-ui/effect-explode.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:15 +0000


Started GET "/assets/jquery-ui/effect-fade.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:16 +0000


Started GET "/assets/jquery-ui/effect-fold.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:17 +0000


Started GET "/assets/jquery-ui/effect-highlight.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:17 +0000


Started GET "/assets/jquery-ui/effect-size.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:18 +0000


Started GET "/assets/jquery-ui/effect-scale.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:19 +0000


Started GET "/assets/jquery-ui/effect-puff.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:19 +0000


Started GET "/assets/jquery-ui/effect-pulsate.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:20 +0000


Started GET "/assets/jquery-ui/effect-shake.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:21 +0000


Started GET "/assets/jquery-ui/effect-slide.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:21 +0000


Started GET "/assets/jquery-ui/effect-transfer.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:22 +0000


Started GET "/assets/jquery-ui/progressbar.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:23 +0000


Started GET "/assets/jquery-ui/selectable.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:23 +0000


Started GET "/assets/jquery-ui/selectmenu.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:24 +0000


Started GET "/assets/jquery-ui/slider.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:25 +0000


Started GET "/assets/jquery-ui/sortable.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:25 +0000


Started GET "/assets/jquery-ui/spinner.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:26 +0000


Started GET "/assets/jquery-ui/tabs.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:27 +0000


Started GET "/assets/jquery-ui/tooltip.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:28 +0000


Started GET "/assets/jquery-ui.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:28 +0000


Started GET "/assets/jquery.elastic.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:29 +0000


Started GET "/assets/best_in_place.js?body=1" for 10.0.2.2 at 2015-10-03 15:36:30 +0000


Started GET "/pt/projects?recommended=true&not_expired=true&page=1" for 10.0.2.2 at 2015-10-03 15:36:30 +0000
Processing by ProjectsController#index as */*
  Parameters: {"recommended"=>"true", "not_expired"=>"true", "page"=>"1", "locale"=>"pt"}
  [1m[36mProject Load (1.3ms)[0m  [1mSELECT  "projects".* FROM "projects"  WHERE ("projects"."state" NOT IN ('draft','rejected','deleted','in_analysis','approved')) AND "projects"."recommended" = 't' AND (expires_at >= '2015-10-03 15:36:32.188966')  ORDER BY 
                                     CASE projects.state
                                     WHEN 'online' THEN 1
                                     WHEN 'waiting_funds' THEN 2
                                     WHEN 'successful' THEN 3
                                     WHEN 'failed' THEN 4
                                     END ASC, projects.online_date DESC, projects.created_at DESC LIMIT 18 OFFSET 0[0m
  Rendered catarse_bootstrap/projects/_card.html.slim (0.3ms)
Completed 200 OK in 49ms (Views: 44.1ms | ActiveRecord: 1.3ms)


Started GET "/pt/projects?recommended=true&not_expired=true&page=2" for 10.0.2.2 at 2015-10-03 15:36:32 +0000
Processing by ProjectsController#index as */*
  Parameters: {"recommended"=>"true", "not_expired"=>"true", "page"=>"2", "locale"=>"pt"}
  [1m[35mProject Load (1.1ms)[0m  SELECT  "projects".* FROM "projects"  WHERE ("projects"."state" NOT IN ('draft','rejected','deleted','in_analysis','approved')) AND "projects"."recommended" = 't' AND (expires_at >= '2015-10-03 15:36:32.964006')  ORDER BY 
                                     CASE projects.state
                                     WHEN 'online' THEN 1
                                     WHEN 'waiting_funds' THEN 2
                                     WHEN 'successful' THEN 3
                                     WHEN 'failed' THEN 4
                                     END ASC, projects.online_date DESC, projects.created_at DESC LIMIT 18 OFFSET 18
  Rendered catarse_bootstrap/projects/_card.html.slim (0.1ms)
Completed 200 OK in 37ms (Views: 33.8ms | ActiveRecord: 1.1ms)


Started GET "/pt/explore" for 10.0.2.2 at 2015-10-03 15:37:20 +0000
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1[0m
Processing by HighVoltage::PagesController#show as HTML
  Parameters: {"id"=>"explore", "locale"=>"pt"}
  [1m[35mUser Load (0.6ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPayment Load (1.2ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mProject Load (1.1ms)[0m  SELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC  [["user_id", 1]]
  [1m[36mProject Load (0.7ms)[0m  [1mSELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/shared/_user_menu.html.slim (35.5ms)
  Rendered catarse_bootstrap/shared/_header.html.slim (194.2ms)
  Rendered catarse_bootstrap/shared/_header_big.html.slim (228.8ms)
  [1m[35m (1.0ms)[0m  SELECT COUNT(*) FROM "categories"  WHERE (exists(select true from projects p where p.category_id = categories.id and p.state not in('draft', 'rejected')))
  Rendered catarse_bootstrap/shared/_footer_welcome.html.slim (9.6ms)
  Rendered catarse_bootstrap/shared/_footer_about.html.slim (6.9ms)
  Rendered catarse_bootstrap/shared/_footer_navigate.html.slim (2.6ms)
  Rendered catarse_bootstrap/shared/_newsletter.html.slim (4.5ms)
  Rendered layouts/_facebook_like.html.slim (0.9ms)
  Rendered catarse_bootstrap/shared/_footer_big.html.slim (176.3ms)
  Rendered catarse_bootstrap/pages/explore.html.slim within layouts/catarse_bootstrap (503.4ms)
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mUserTotal Load (0.5ms)[0m  SELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1  [["user_id", 1]]
  [1m[36m (0.4ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  [1m[35m (0.8ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))  [["user_id", 1]]
  [1m[36mProject Exists (0.8ms)[0m  [1mSELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1[0m  [["user_id", 1]]
  [1m[35mCACHE (0.1ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (1.4ms)
  Rendered layouts/_facebook_sdk.html.slim (0.9ms)
Completed 200 OK in 1230ms (Views: 1205.6ms | ActiveRecord: 13.4ms)


Started GET "/assets/catarse_bootstrap/logo_big.png" for 10.0.2.2 at 2015-10-03 15:37:23 +0000


Started GET "/assets/catarse_bootstrap/loader.gif" for 10.0.2.2 at 2015-10-03 15:37:24 +0000


Started GET "/assets/catarse_bootstrap/lupa.png" for 10.0.2.2 at 2015-10-03 15:37:25 +0000


Started GET "/assets/catarse_bootstrap/user.jpg" for 10.0.2.2 at 2015-10-03 15:37:25 +0000


Started GET "/assets/catarse_bootstrap/icon-newsletter.png" for 10.0.2.2 at 2015-10-03 15:37:26 +0000


Started GET "/assets/jquery.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:27 +0000


Started GET "/assets/underscore.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:27 +0000


Started GET "/assets/backbone.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:28 +0000


Started GET "/assets/jquery-ui/core.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:29 +0000


Started GET "/assets/jquery-ui/widget.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:29 +0000


Started GET "/assets/jquery-ui/accordion.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:30 +0000


Started GET "/assets/jquery-ui/position.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:31 +0000


Started GET "/assets/jquery-ui/menu.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:31 +0000


Started GET "/assets/jquery-ui/autocomplete.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:32 +0000


Started GET "/assets/jquery-ui/button.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:33 +0000


Started GET "/assets/jquery-ui/datepicker.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:34 +0000


Started GET "/assets/jquery-ui/mouse.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:34 +0000


Started GET "/assets/jquery-ui/draggable.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:35 +0000


Started GET "/assets/jquery-ui/resizable.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:36 +0000


Started GET "/assets/jquery-ui/dialog.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:36 +0000


Started GET "/assets/jquery-ui/droppable.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:37 +0000


Started GET "/assets/jquery-ui/effect.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:38 +0000


Started GET "/assets/jquery-ui/effect-blind.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:38 +0000


Started GET "/assets/jquery-ui/effect-bounce.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:39 +0000


Started GET "/assets/jquery-ui/effect-clip.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:39 +0000


Started GET "/assets/jquery-ui/effect-drop.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:40 +0000


Started GET "/assets/jquery-ui/effect-explode.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:41 +0000


Started GET "/assets/jquery-ui/effect-fade.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:41 +0000


Started GET "/assets/jquery-ui/effect-fold.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:42 +0000


Started GET "/assets/jquery-ui/effect-highlight.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:43 +0000


Started GET "/assets/jquery-ui/effect-size.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:44 +0000


Started GET "/assets/jquery-ui/effect-scale.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:45 +0000


Started GET "/assets/jquery-ui/effect-puff.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:45 +0000


Started GET "/assets/jquery-ui/effect-pulsate.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:46 +0000


Started GET "/assets/jquery-ui/effect-shake.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:47 +0000


Started GET "/assets/jquery-ui/effect-slide.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:47 +0000


Started GET "/assets/jquery-ui/effect-transfer.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:48 +0000


Started GET "/assets/jquery-ui/progressbar.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:49 +0000


Started GET "/assets/jquery-ui/selectable.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:49 +0000


Started GET "/assets/jquery-ui/selectmenu.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:50 +0000


Started GET "/assets/jquery-ui/slider.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:51 +0000


Started GET "/assets/jquery-ui/sortable.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:51 +0000


Started GET "/assets/jquery-ui/spinner.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:52 +0000


Started GET "/assets/jquery-ui/tabs.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:53 +0000


Started GET "/assets/jquery-ui/tooltip.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:53 +0000


Started GET "/assets/jquery-ui.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:54 +0000


Started GET "/assets/jquery.elastic.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:55 +0000


Started GET "/assets/best_in_place.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:55 +0000


Started GET "/assets/cocoon.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:56 +0000


Started GET "/assets/app/pages/how_it_works.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:56 +0000


Started GET "/assets/app/pages/registration.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:57 +0000


Started GET "/assets/app/pages/reset_password.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:58 +0000


Started GET "/assets/app/pages/search.js?body=1" for 10.0.2.2 at 2015-10-03 15:37:58 +0000


Started GET "/assets/logo-footer.png" for 10.0.2.2 at 2015-10-03 15:37:59 +0000


Started GET "/assets/hero-explore.jpg" for 10.0.2.2 at 2015-10-03 15:38:00 +0000


Started GET "/pt/projects?recommended=true&not_expired=true&page=1" for 10.0.2.2 at 2015-10-03 15:38:01 +0000
Processing by ProjectsController#index as */*
  Parameters: {"recommended"=>"true", "not_expired"=>"true", "page"=>"1", "locale"=>"pt"}
  [1m[36mProject Load (0.8ms)[0m  [1mSELECT  "projects".* FROM "projects"  WHERE ("projects"."state" NOT IN ('draft','rejected','deleted','in_analysis','approved')) AND "projects"."recommended" = 't' AND (expires_at >= '2015-10-03 15:38:02.560773')  ORDER BY 
                                     CASE projects.state
                                     WHEN 'online' THEN 1
                                     WHEN 'waiting_funds' THEN 2
                                     WHEN 'successful' THEN 3
                                     WHEN 'failed' THEN 4
                                     END ASC, projects.online_date DESC, projects.created_at DESC LIMIT 18 OFFSET 0[0m
  Rendered catarse_bootstrap/projects/_card.html.slim (0.1ms)
Completed 200 OK in 44ms (Views: 39.8ms | ActiveRecord: 0.8ms)


Started GET "/assets/favicon.ico" for 10.0.2.2 at 2015-10-03 15:38:02 +0000


Started GET "/pt/projects?recommended=true&not_expired=true&page=2" for 10.0.2.2 at 2015-10-03 15:38:03 +0000
Processing by ProjectsController#index as */*
  Parameters: {"recommended"=>"true", "not_expired"=>"true", "page"=>"2", "locale"=>"pt"}
  [1m[35mProject Load (0.8ms)[0m  SELECT  "projects".* FROM "projects"  WHERE ("projects"."state" NOT IN ('draft','rejected','deleted','in_analysis','approved')) AND "projects"."recommended" = 't' AND (expires_at >= '2015-10-03 15:38:03.890036')  ORDER BY 
                                     CASE projects.state
                                     WHEN 'online' THEN 1
                                     WHEN 'waiting_funds' THEN 2
                                     WHEN 'successful' THEN 3
                                     WHEN 'failed' THEN 4
                                     END ASC, projects.online_date DESC, projects.created_at DESC LIMIT 18 OFFSET 18
  Rendered catarse_bootstrap/projects/_card.html.slim (0.1ms)
Completed 200 OK in 39ms (Views: 35.7ms | ActiveRecord: 0.8ms)
  [1m[36mCatarseSettingsDb::Setting Load (1.1ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_uri' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_test' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_id' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_secret' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_key_base' LIMIT 1
  [1m[36mOauthProvider Load (0.7ms)[0m  [1mSELECT "oauth_providers".* FROM "oauth_providers"[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_api_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_list_id' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_successful_projects_list' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_failed_projects_list' LIMIT 1[0m
  [1m[35mOauthProvider Load (0.4ms)[0m  SELECT "oauth_providers".* FROM "oauth_providers"
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_api_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_encryption_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_slip_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_credit_card_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_interest_rate' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_cents_fee' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'host' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_max_installments' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_minimum_value_for_installment' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'stone_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_diners_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_diners_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_amex_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_amex_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.9ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_system' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.6ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_contact' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'company_name' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1


Started GET "/" for 10.0.2.2 at 2015-10-03 15:39:01 +0000
  [1m[36mActiveRecord::SchemaMigration Load (0.9ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by ProjectsController#index as HTML
  [1m[35mUser Load (1.4ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPayment Load (1.7ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mProject Load (1.3ms)[0m  SELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC  [["user_id", 1]]
  [1m[36mProject Load (0.4ms)[0m  [1mSELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/shared/_user_menu.html.slim (144.3ms)
  Rendered catarse_bootstrap/shared/_header.html.slim (299.6ms)
  Rendered catarse_bootstrap/shared/_header_big.html.slim (360.5ms)
  [1m[35mProject Load (1.1ms)[0m  SELECT  "projects".* FROM "projects"  WHERE ("projects"."state" IN ('online')) AND (EXISTS(SELECT true FROM users u WHERE u.id = projects.user_id AND lower(u.address_state) = lower(NULL)))  ORDER BY random() LIMIT 3
  [1m[36mProjectsForHome Load (2.7ms)[0m  [1mSELECT "projects_for_home".* FROM "projects_for_home"  WHERE "projects_for_home"."origin" = 'recommended'[0m
  Rendered catarse_bootstrap/projects/_card.html.slim (0.1ms)
  [1m[35mProjectsForHome Load (1.6ms)[0m  SELECT "projects_for_home".* FROM "projects_for_home"  WHERE "projects_for_home"."origin" = 'expiring'
  Rendered catarse_bootstrap/projects/_card.html.slim (0.1ms)
  [1m[36mProjectsForHome Load (1.7ms)[0m  [1mSELECT "projects_for_home".* FROM "projects_for_home"  WHERE "projects_for_home"."origin" = 'recents'[0m
  Rendered catarse_bootstrap/projects/_card.html.slim (0.1ms)
  Rendered catarse_bootstrap/shared/_footer_welcome.html.slim (14.9ms)
  Rendered catarse_bootstrap/shared/_footer_about.html.slim (16.0ms)
  Rendered catarse_bootstrap/shared/_footer_navigate.html.slim (32.9ms)
  Rendered catarse_bootstrap/shared/_newsletter.html.slim (16.4ms)
  Rendered layouts/_facebook_like.html.slim (6.6ms)
  Rendered catarse_bootstrap/shared/_footer_big.html.slim (259.8ms)
  Rendered catarse_bootstrap/projects/index.html.slim within layouts/catarse_bootstrap (7484.8ms)
  [1m[35mCACHE (0.0ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  [1m[36mUserTotal Load (0.5ms)[0m  [1mSELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1[0m  [["user_id", 1]]
  [1m[35m (1.0ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))  [["user_id", 1]]
  [1m[36m (0.4ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))[0m  [["user_id", 1]]
  [1m[35mProject Exists (0.6ms)[0m  SELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1  [["user_id", 1]]
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (7.1ms)
  Rendered layouts/_facebook_sdk.html.slim (7.8ms)
Completed 200 OK in 9706ms (Views: 9548.7ms | ActiveRecord: 23.5ms)


Started GET "/assets/catarse_bootstrap/logo_big.png" for 10.0.2.2 at 2015-10-03 15:39:11 +0000


Started GET "/assets/catarse_bootstrap/loader.gif" for 10.0.2.2 at 2015-10-03 15:39:12 +0000


Started GET "/assets/catarse_bootstrap/lupa.png" for 10.0.2.2 at 2015-10-03 15:39:13 +0000


Started GET "/assets/catarse_bootstrap/user.jpg" for 10.0.2.2 at 2015-10-03 15:39:13 +0000


Started GET "/assets/icon-blog.png" for 10.0.2.2 at 2015-10-03 15:39:14 +0000


Started GET "/assets/jquery.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:15 +0000


Started GET "/assets/underscore.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:15 +0000


Started GET "/assets/backbone.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:16 +0000


Started GET "/assets/jquery-ui/core.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:17 +0000


Started GET "/assets/jquery-ui/widget.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:17 +0000


Started GET "/assets/jquery-ui/accordion.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:18 +0000


Started GET "/assets/jquery-ui/position.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:19 +0000


Started GET "/assets/jquery-ui/menu.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:19 +0000


Started GET "/assets/jquery-ui/autocomplete.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:20 +0000


Started GET "/assets/jquery-ui/button.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:21 +0000


Started GET "/assets/jquery-ui/datepicker.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:22 +0000


Started GET "/assets/jquery-ui/mouse.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:22 +0000


Started GET "/assets/jquery-ui/draggable.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:23 +0000


Started GET "/assets/jquery-ui/resizable.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:24 +0000


Started GET "/assets/jquery-ui/dialog.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:25 +0000


Started GET "/assets/jquery-ui/droppable.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:26 +0000


Started GET "/assets/jquery-ui/effect.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:27 +0000


Started GET "/assets/jquery-ui/effect-blind.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:27 +0000


Started GET "/assets/jquery-ui/effect-bounce.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:28 +0000


Started GET "/assets/jquery-ui/effect-clip.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:29 +0000


Started GET "/assets/jquery-ui/effect-drop.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:30 +0000


Started GET "/assets/jquery-ui/effect-explode.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:31 +0000


Started GET "/assets/jquery-ui/effect-fade.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:31 +0000


Started GET "/assets/jquery-ui/effect-fold.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:32 +0000


Started GET "/assets/jquery-ui/effect-highlight.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:33 +0000


Started GET "/assets/jquery-ui/effect-size.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:33 +0000


Started GET "/assets/jquery-ui/effect-scale.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:34 +0000


Started GET "/assets/jquery-ui/effect-puff.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:35 +0000


Started GET "/assets/jquery-ui/effect-pulsate.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:35 +0000


Started GET "/assets/jquery-ui/effect-shake.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:36 +0000


Started GET "/assets/jquery-ui/effect-slide.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:37 +0000


Started GET "/assets/jquery-ui/effect-transfer.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:38 +0000


Started GET "/assets/jquery-ui/progressbar.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:38 +0000


Started GET "/assets/jquery-ui/selectable.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:39 +0000


Started GET "/assets/jquery-ui/selectmenu.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:40 +0000


Started GET "/assets/jquery-ui/slider.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:40 +0000


Started GET "/assets/jquery-ui/sortable.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:41 +0000


Started GET "/assets/jquery-ui/spinner.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:42 +0000


Started GET "/assets/jquery-ui/tabs.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:42 +0000


Started GET "/assets/jquery-ui/tooltip.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:43 +0000


Started GET "/assets/jquery-ui.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:44 +0000


Started GET "/assets/jquery.elastic.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:44 +0000


Started GET "/assets/best_in_place.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:45 +0000


Started GET "/assets/cocoon.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:46 +0000


Started GET "/assets/app/pages/how_it_works.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:46 +0000


Started GET "/assets/app/pages/registration.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:47 +0000


Started GET "/assets/app/pages/reset_password.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:48 +0000


Started GET "/assets/app/pages/search.js?body=1" for 10.0.2.2 at 2015-10-03 15:39:48 +0000


Started GET "/assets/catarse_bootstrap/icon-newsletter.png" for 10.0.2.2 at 2015-10-03 15:39:49 +0000


Started GET "/assets/hero-new-home.jpg" for 10.0.2.2 at 2015-10-03 15:39:50 +0000


Started GET "/assets/logo-footer.png" for 10.0.2.2 at 2015-10-03 15:39:50 +0000


Started GET "/pt/users/1-sem-nome/edit" for 10.0.2.2 at 2015-10-03 15:40:24 +0000
Processing by UsersController#edit as HTML
  Parameters: {"id"=>"1-sem-nome", "locale"=>"pt"}
  [1m[35mUser Load (0.8ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."deactivated_at" IS NULL AND "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Load (0.7ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mProject Load (1.0ms)[0m  SELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC  [["user_id", 1]]
  [1m[36mBankAccount Load (0.6ms)[0m  [1mSELECT  "bank_accounts".* FROM "bank_accounts"  WHERE "bank_accounts"."user_id" = $1 LIMIT 1[0m  [["user_id", 1]]
  [1m[35mPayment Load (1.0ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC[0m  [["user_id", 1]]
  [1m[35mProject Load (0.5ms)[0m  SELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))  [["user_id", 1]]
  Rendered catarse_bootstrap/shared/_user_menu.html.slim (10.4ms)
  Rendered catarse_bootstrap/shared/_header.html.slim (52.5ms)
  Rendered catarse_bootstrap/shared/_header_big.html.slim (85.0ms)
  [1m[36mContribution Exists (0.5ms)[0m  [1mSELECT  1 AS one FROM "contributions"  WHERE "contributions"."user_id" = $1 LIMIT 1[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/users/_dashboard_contributions.html.slim (14.5ms)
  [1m[35mCACHE (0.0ms)[0m  SELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))  [["user_id", 1]]
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (12.8ms)
  [1m[36mUserLink Load (0.4ms)[0m  [1mSELECT "user_links".* FROM "user_links"  WHERE "user_links"."user_id" = $1[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/users/_link_fields.html.slim (36.9ms)
  Rendered catarse_bootstrap/users/_link_fields.html.slim (33.9ms)
  Rendered catarse_bootstrap/users/_dashboard_about_me.html.slim (395.6ms)
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (0.5ms)
  [1m[35mCountry Load (2.3ms)[0m  SELECT "countries".* FROM "countries"
  [1m[36m (1.7ms)[0m  [1mSELECT "states"."name", "states"."acronym" FROM "states"   ORDER BY "states"."name" ASC[0m
  Rendered catarse_bootstrap/users/_dashboard_settings.html.slim (557.3ms)
  [1m[35m (0.6ms)[0m  SELECT DISTINCT COUNT(DISTINCT "projects"."id") FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  [["user_id", 1]]
  [1m[36mCategoryFollower Load (0.5ms)[0m  [1mSELECT "category_followers".* FROM "category_followers"  WHERE "category_followers"."user_id" = $1[0m  [["user_id", 1]]
  [1m[35mProject Load (0.6ms)[0m  SELECT "projects".* FROM "projects"  WHERE 1=0
  Rendered catarse_bootstrap/users/_dashboard_notifications.html.slim (75.9ms)
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (0.6ms)
  [1m[36mCreditCard Load (0.4ms)[0m  [1mSELECT "credit_cards".* FROM "credit_cards"  WHERE "credit_cards"."user_id" = $1[0m  [["user_id", 1]]
  [1m[35mBank Load (3.1ms)[0m  SELECT banks.code, banks.id, banks.name, count(bank_accounts.bank_id) as total FROM "banks" left join bank_accounts on bank_accounts.bank_id = banks.id GROUP BY banks.id, bank_accounts.bank_id  ORDER BY total DESC
  Rendered catarse_bootstrap/users/_dashboard_billing.html.slim (397.3ms)
  Rendered catarse_bootstrap/users/_dashboard_talents.html.slim (10.0ms)
  Rendered catarse_bootstrap/shared/_footer_welcome.html.slim (9.0ms)
  Rendered catarse_bootstrap/shared/_footer_about.html.slim (6.6ms)
  Rendered catarse_bootstrap/shared/_footer_navigate.html.slim (2.0ms)
  Rendered catarse_bootstrap/shared/_newsletter.html.slim (4.2ms)
  Rendered layouts/_facebook_like.html.slim (0.6ms)
  Rendered catarse_bootstrap/shared/_footer_big.html.slim (178.8ms)
  Rendered catarse_bootstrap/users/edit.html.slim within layouts/catarse_bootstrap (2117.1ms)
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mUserTotal Load (0.5ms)[0m  SELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1  [["user_id", 1]]
  [1m[36m (0.5ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  [1m[35m (0.6ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))  [["user_id", 1]]
  [1m[36mProject Exists (0.5ms)[0m  [1mSELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1[0m  [["user_id", 1]]
  [1m[35mCACHE (0.0ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (0.7ms)
  Rendered layouts/_facebook_sdk.html.slim (0.6ms)
Completed 200 OK in 2626ms (Views: 2467.2ms | ActiveRecord: 31.8ms)


Started GET "/assets/redactor-rails/css/redactor.css?body=1" for 10.0.2.2 at 2015-10-03 15:40:28 +0000


Started GET "/assets/redactor-rails/index.css?body=1" for 10.0.2.2 at 2015-10-03 15:40:29 +0000


Started GET "/assets/redactor.css?body=1" for 10.0.2.2 at 2015-10-03 15:40:29 +0000


Started GET "/assets/catarse_bootstrap/logo_big.png" for 10.0.2.2 at 2015-10-03 15:40:30 +0000


Started GET "/assets/jquery.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:31 +0000


Started GET "/assets/underscore.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:31 +0000


Started GET "/assets/backbone.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:32 +0000


Started GET "/assets/jquery-ui/core.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:33 +0000


Started GET "/assets/jquery-ui/widget.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:33 +0000


Started GET "/assets/jquery-ui/accordion.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:34 +0000


Started GET "/assets/jquery-ui/position.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:35 +0000


Started GET "/assets/jquery-ui/menu.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:35 +0000


Started GET "/assets/jquery-ui/autocomplete.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:36 +0000


Started GET "/assets/jquery-ui/button.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:37 +0000


Started GET "/assets/jquery-ui/datepicker.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:37 +0000


Started GET "/assets/jquery-ui/mouse.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:38 +0000


Started GET "/assets/jquery-ui/draggable.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:39 +0000


Started GET "/assets/jquery-ui/resizable.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:39 +0000


Started GET "/assets/jquery-ui/dialog.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:40 +0000


Started GET "/assets/jquery-ui/droppable.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:40 +0000


Started GET "/assets/jquery-ui/effect.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:41 +0000


Started GET "/assets/jquery-ui/effect-blind.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:42 +0000


Started GET "/assets/jquery-ui/effect-bounce.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:42 +0000


Started GET "/assets/jquery-ui/effect-clip.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:43 +0000


Started GET "/assets/jquery-ui/effect-drop.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:44 +0000


Started GET "/assets/jquery-ui/effect-explode.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:44 +0000


Started GET "/assets/jquery-ui/effect-fade.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:45 +0000


Started GET "/assets/jquery-ui/effect-fold.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:46 +0000


Started GET "/assets/jquery-ui/effect-highlight.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:46 +0000


Started GET "/assets/jquery-ui/effect-size.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:47 +0000


Started GET "/assets/jquery-ui/effect-scale.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:47 +0000


Started GET "/assets/jquery-ui/effect-puff.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:48 +0000


Started GET "/assets/jquery-ui/effect-pulsate.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:49 +0000


Started GET "/assets/jquery-ui/effect-shake.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:49 +0000


Started GET "/assets/jquery-ui/effect-slide.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:50 +0000


Started GET "/assets/jquery-ui/effect-transfer.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:51 +0000


Started GET "/assets/jquery-ui/progressbar.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:51 +0000


Started GET "/assets/jquery-ui/selectable.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:52 +0000


Started GET "/assets/jquery-ui/selectmenu.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:52 +0000


Started GET "/assets/jquery-ui/slider.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:53 +0000


Started GET "/assets/jquery-ui/sortable.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:54 +0000


Started GET "/assets/jquery-ui/spinner.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:54 +0000


Started GET "/assets/jquery-ui/tabs.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:55 +0000


Started GET "/assets/jquery-ui/tooltip.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:56 +0000


Started GET "/assets/jquery-ui.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:56 +0000


Started GET "/assets/jquery.elastic.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:57 +0000


Started GET "/assets/best_in_place.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:58 +0000


Started GET "/assets/cocoon.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:58 +0000


Started GET "/assets/app/pages/how_it_works.js?body=1" for 10.0.2.2 at 2015-10-03 15:40:59 +0000


Started GET "/assets/app/pages/registration.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:00 +0000


Started GET "/assets/app/pages/reset_password.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:01 +0000


Started GET "/assets/app/pages/search.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:01 +0000


Started GET "/assets/redactor-rails/redactor.min.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:02 +0000


Started GET "/assets/redactor-rails/langs/pt_br.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:03 +0000


Started GET "/assets/redactor-rails/video.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:03 +0000


Started GET "/assets/redactor-rails/config.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:04 +0000


Started GET "/assets/redactor.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:05 +0000


Started GET "/pt/users/1-sem-nome/edit" for 10.0.2.2 at 2015-10-03 15:41:06 +0000
Processing by UsersController#edit as HTML
  Parameters: {"id"=>"1-sem-nome", "locale"=>"pt"}
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."deactivated_at" IS NULL AND "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Load (0.8ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mProject Load (2.0ms)[0m  [1mSELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC[0m  [["user_id", 1]]
  [1m[35mBankAccount Load (0.6ms)[0m  SELECT  "bank_accounts".* FROM "bank_accounts"  WHERE "bank_accounts"."user_id" = $1 LIMIT 1  [["user_id", 1]]
  [1m[36mPayment Load (1.8ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mCACHE (0.0ms)[0m  SELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC  [["user_id", 1]]
  [1m[36mProject Load (0.5ms)[0m  [1mSELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/shared/_user_menu.html.slim (9.9ms)
  Rendered catarse_bootstrap/shared/_header.html.slim (53.1ms)
  Rendered catarse_bootstrap/shared/_header_big.html.slim (90.1ms)
  [1m[35mContribution Exists (0.5ms)[0m  SELECT  1 AS one FROM "contributions"  WHERE "contributions"."user_id" = $1 LIMIT 1  [["user_id", 1]]
  Rendered catarse_bootstrap/users/_dashboard_contributions.html.slim (4.2ms)
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (0.6ms)
  [1m[35mUserLink Load (0.5ms)[0m  SELECT "user_links".* FROM "user_links"  WHERE "user_links"."user_id" = $1  [["user_id", 1]]
  Rendered catarse_bootstrap/users/_link_fields.html.slim (27.5ms)
  Rendered catarse_bootstrap/users/_link_fields.html.slim (26.8ms)
  Rendered catarse_bootstrap/users/_dashboard_about_me.html.slim (217.4ms)
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (0.4ms)
  [1m[36mCountry Load (2.0ms)[0m  [1mSELECT "countries".* FROM "countries"[0m
  Rendered catarse_bootstrap/users/_dashboard_settings.html.slim (539.4ms)
  [1m[35m (0.8ms)[0m  SELECT DISTINCT COUNT(DISTINCT "projects"."id") FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  [["user_id", 1]]
  [1m[36mCategoryFollower Load (0.4ms)[0m  [1mSELECT "category_followers".* FROM "category_followers"  WHERE "category_followers"."user_id" = $1[0m  [["user_id", 1]]
  [1m[35mProject Load (0.7ms)[0m  SELECT "projects".* FROM "projects"  WHERE 1=0
  Rendered catarse_bootstrap/users/_dashboard_notifications.html.slim (14.2ms)
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (0.5ms)
  [1m[36mCreditCard Load (0.4ms)[0m  [1mSELECT "credit_cards".* FROM "credit_cards"  WHERE "credit_cards"."user_id" = $1[0m  [["user_id", 1]]
  [1m[35mBank Load (1.6ms)[0m  SELECT banks.code, banks.id, banks.name, count(bank_accounts.bank_id) as total FROM "banks" left join bank_accounts on bank_accounts.bank_id = banks.id GROUP BY banks.id, bank_accounts.bank_id  ORDER BY total DESC
  Rendered catarse_bootstrap/users/_dashboard_billing.html.slim (441.6ms)
  Rendered catarse_bootstrap/users/_dashboard_talents.html.slim (1.1ms)
  Rendered catarse_bootstrap/shared/_footer_welcome.html.slim (9.4ms)
  Rendered catarse_bootstrap/shared/_footer_about.html.slim (6.2ms)
  Rendered catarse_bootstrap/shared/_footer_navigate.html.slim (2.5ms)
  Rendered catarse_bootstrap/shared/_newsletter.html.slim (3.7ms)
  Rendered layouts/_facebook_like.html.slim (0.6ms)
  Rendered catarse_bootstrap/shared/_footer_big.html.slim (172.7ms)
  Rendered catarse_bootstrap/users/edit.html.slim within layouts/catarse_bootstrap (1747.8ms)
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mUserTotal Load (0.5ms)[0m  SELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1  [["user_id", 1]]
  [1m[36m (0.5ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  [1m[35m (0.4ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))  [["user_id", 1]]
  [1m[36mProject Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1[0m  [["user_id", 1]]
  [1m[35mCACHE (0.0ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (0.7ms)
  Rendered layouts/_facebook_sdk.html.slim (0.6ms)
Completed 200 OK in 2143ms (Views: 2114.2ms | ActiveRecord: 15.6ms)


Started GET "/assets/catarse_bootstrap/user.jpg" for 10.0.2.2 at 2015-10-03 15:41:09 +0000


Started GET "/assets/catarse_bootstrap/lupa.png" for 10.0.2.2 at 2015-10-03 15:41:10 +0000


Started GET "/assets/catarse_bootstrap/icon-newsletter.png" for 10.0.2.2 at 2015-10-03 15:41:10 +0000


Started GET "/assets/catarse_bootstrap/loader.gif" for 10.0.2.2 at 2015-10-03 15:41:11 +0000


Started GET "/assets/logo-footer.png" for 10.0.2.2 at 2015-10-03 15:41:12 +0000


Started GET "/pt/start" for 10.0.2.2 at 2015-10-03 15:41:12 +0000
Processing by HighVoltage::PagesController#show as HTML
  Parameters: {"id"=>"start", "locale"=>"pt"}
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPayment Load (1.0ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  [1m[36mProject Load (0.9ms)[0m  [1mSELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC[0m  [["user_id", 1]]
  [1m[35mProject Load (0.5ms)[0m  SELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))  [["user_id", 1]]
  Rendered catarse_bootstrap/shared/_user_menu.html.slim (10.3ms)
  Rendered catarse_bootstrap/shared/_header.html.slim (56.5ms)
  Rendered catarse_bootstrap/shared/_header_big.html.slim (97.6ms)
  [1m[36mStatistics Load (0.8ms)[0m  [1mSELECT  "statistics".* FROM "statistics"   ORDER BY total_users DESC LIMIT 1[0m
  Rendered catarse_bootstrap/shared/_footer_welcome.html.slim (8.3ms)
  Rendered catarse_bootstrap/shared/_footer_about.html.slim (6.1ms)
  Rendered catarse_bootstrap/shared/_footer_navigate.html.slim (1.7ms)
  Rendered catarse_bootstrap/shared/_newsletter.html.slim (3.9ms)
  Rendered layouts/_facebook_like.html.slim (0.6ms)
  Rendered catarse_bootstrap/shared/_footer_big.html.slim (166.6ms)
  Rendered catarse_bootstrap/pages/start.html.slim within layouts/catarse_bootstrap (383.5ms)
  [1m[35mCACHE (0.0ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  [1m[36mUserTotal Load (0.4ms)[0m  [1mSELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1[0m  [["user_id", 1]]
  [1m[35m (0.4ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))  [["user_id", 1]]
  [1m[36m (0.4ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))[0m  [["user_id", 1]]
  [1m[35mProject Exists (0.5ms)[0m  SELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1  [["user_id", 1]]
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (0.6ms)
  Rendered layouts/_facebook_sdk.html.slim (0.5ms)
Completed 200 OK in 742ms (Views: 733.7ms | ActiveRecord: 7.3ms)


Started GET "/assets/catarse_bootstrap/logo_big.png" for 10.0.2.2 at 2015-10-03 15:41:14 +0000


Started GET "/assets/catarse_bootstrap/lupa.png" for 10.0.2.2 at 2015-10-03 15:41:15 +0000


Started GET "/assets/catarse_bootstrap/user.jpg" for 10.0.2.2 at 2015-10-03 15:41:16 +0000


Started GET "/assets/catarse_bootstrap/loader.gif" for 10.0.2.2 at 2015-10-03 15:41:16 +0000


Started GET "/assets/catarse_bootstrap/start/inscreva-seu-projeto.png" for 10.0.2.2 at 2015-10-03 15:41:17 +0000


Started GET "/assets/jquery.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:18 +0000


Started GET "/assets/underscore.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:18 +0000


Started GET "/assets/backbone.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:19 +0000


Started GET "/assets/jquery-ui/core.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:20 +0000


Started GET "/assets/jquery-ui/widget.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:21 +0000


Started GET "/assets/jquery-ui/position.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:21 +0000


Started GET "/assets/jquery-ui/datepicker.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:22 +0000


Started GET "/assets/jquery-ui/mouse.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:23 +0000


Started GET "/assets/catarse_bootstrap/user.jpg" for 10.0.2.2 at 2015-10-03 15:41:23 +0000


Started GET "/assets/catarse_bootstrap/logo_big.png" for 10.0.2.2 at 2015-10-03 15:41:24 +0000


Started GET "/assets/catarse_bootstrap/lupa.png" for 10.0.2.2 at 2015-10-03 15:41:24 +0000


Started GET "/assets/catarse_bootstrap/loader.gif" for 10.0.2.2 at 2015-10-03 15:41:25 +0000


Started GET "/assets/jquery.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:26 +0000


Started GET "/assets/underscore.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:26 +0000


Started GET "/assets/backbone.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:27 +0000


Started GET "/assets/jquery-ui/core.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:28 +0000


Started GET "/assets/jquery-ui/widget.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:28 +0000


Started GET "/assets/jquery-ui/autocomplete.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:29 +0000


Started GET "/assets/jquery-ui/menu.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:30 +0000


Started GET "/assets/jquery-ui/accordion.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:30 +0000


Started GET "/assets/jquery-ui/position.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:31 +0000


Started GET "/assets/jquery-ui/button.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:32 +0000


Started GET "/assets/jquery-ui/datepicker.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:32 +0000


Started GET "/assets/jquery-ui/mouse.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:33 +0000


Started GET "/assets/jquery-ui/resizable.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:34 +0000


Started GET "/assets/jquery-ui/draggable.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:34 +0000


Started GET "/assets/jquery-ui/dialog.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:35 +0000


Started GET "/assets/jquery-ui/effect-blind.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:35 +0000


Started GET "/assets/jquery-ui/effect.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:36 +0000


Started GET "/assets/jquery-ui/droppable.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:37 +0000


Started GET "/assets/jquery-ui/effect-bounce.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:38 +0000


Started GET "/assets/jquery-ui/effect-clip.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:38 +0000


Started GET "/assets/jquery-ui/effect-fade.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:39 +0000


Started GET "/assets/jquery-ui/effect-fold.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:40 +0000


Started GET "/assets/jquery-ui/effect-drop.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:41 +0000


Started GET "/assets/jquery-ui/effect-explode.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:42 +0000


Started GET "/assets/jquery-ui/effect-highlight.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:43 +0000


Started GET "/assets/jquery-ui/effect-size.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:44 +0000


Started GET "/assets/jquery-ui/effect-scale.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:45 +0000


Started GET "/assets/jquery-ui/effect-puff.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:45 +0000


Started GET "/assets/jquery-ui/effect-pulsate.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:46 +0000


Started GET "/assets/jquery-ui/effect-shake.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:47 +0000


Started GET "/assets/jquery-ui/effect-transfer.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:48 +0000


Started GET "/assets/jquery-ui/progressbar.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:48 +0000


Started GET "/assets/jquery-ui/selectable.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:49 +0000


Started GET "/assets/jquery-ui/effect-slide.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:50 +0000


Started GET "/assets/jquery-ui/selectmenu.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:51 +0000


Started GET "/assets/jquery-ui/sortable.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:51 +0000


Started GET "/assets/jquery-ui/spinner.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:52 +0000


Started GET "/assets/jquery-ui/tabs.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:53 +0000


Started GET "/assets/jquery-ui/tooltip.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:53 +0000


Started GET "/assets/jquery-ui/slider.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:54 +0000


Started GET "/assets/jquery-ui.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:55 +0000


Started GET "/assets/jquery.elastic.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:55 +0000


Started GET "/assets/best_in_place.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:56 +0000


Started GET "/assets/cocoon.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:57 +0000


Started GET "/assets/app/pages/how_it_works.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:57 +0000


Started GET "/assets/app/pages/registration.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:58 +0000


Started GET "/assets/app/pages/search.js?body=1" for 10.0.2.2 at 2015-10-03 15:41:59 +0000


Started GET "/assets/app/pages/reset_password.js?body=1" for 10.0.2.2 at 2015-10-03 15:42:00 +0000
  [1m[36mCatarseSettingsDb::Setting Load (0.7ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_uri' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.2ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_test' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.6ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_id' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_secret' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.6ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_key_base' LIMIT 1
  [1m[36mOauthProvider Load (0.7ms)[0m  [1mSELECT "oauth_providers".* FROM "oauth_providers"[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.7ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_api_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_list_id' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_successful_projects_list' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_failed_projects_list' LIMIT 1[0m
  [1m[35mOauthProvider Load (0.5ms)[0m  SELECT "oauth_providers".* FROM "oauth_providers"
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_api_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_encryption_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_slip_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (1.1ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_credit_card_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_interest_rate' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_cents_fee' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'host' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (1.0ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_max_installments' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_minimum_value_for_installment' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'stone_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_diners_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_diners_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_amex_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_amex_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.8ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.7ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_system' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_contact' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'company_name' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (1.9ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1


Started GET "/" for 10.0.2.2 at 2015-10-03 15:46:02 +0000
  [1m[36mActiveRecord::SchemaMigration Load (1.0ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by ProjectsController#index as HTML
  [1m[35mUser Load (1.7ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPayment Load (1.6ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mProject Load (1.0ms)[0m  SELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC  [["user_id", 1]]
  [1m[36mProject Load (0.3ms)[0m  [1mSELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/shared/_user_menu.html.slim (122.5ms)
  Rendered catarse_bootstrap/shared/_header.html.slim (271.2ms)
  Rendered catarse_bootstrap/shared/_header_big.html.slim (328.4ms)
  [1m[35mProject Load (0.9ms)[0m  SELECT  "projects".* FROM "projects"  WHERE ("projects"."state" IN ('online')) AND (EXISTS(SELECT true FROM users u WHERE u.id = projects.user_id AND lower(u.address_state) = lower(NULL)))  ORDER BY random() LIMIT 3
  [1m[36mProjectsForHome Load (2.8ms)[0m  [1mSELECT "projects_for_home".* FROM "projects_for_home"  WHERE "projects_for_home"."origin" = 'recommended'[0m
  Rendered catarse_bootstrap/projects/_card.html.slim (0.1ms)
  [1m[35mProjectsForHome Load (1.9ms)[0m  SELECT "projects_for_home".* FROM "projects_for_home"  WHERE "projects_for_home"."origin" = 'expiring'
  Rendered catarse_bootstrap/projects/_card.html.slim (0.1ms)
  [1m[36mProjectsForHome Load (1.6ms)[0m  [1mSELECT "projects_for_home".* FROM "projects_for_home"  WHERE "projects_for_home"."origin" = 'recents'[0m
  Rendered catarse_bootstrap/projects/_card.html.slim (0.1ms)
  Rendered catarse_bootstrap/shared/_footer_welcome.html.slim (17.7ms)
  Rendered catarse_bootstrap/shared/_footer_about.html.slim (24.6ms)
  Rendered catarse_bootstrap/shared/_footer_navigate.html.slim (90.2ms)
  Rendered catarse_bootstrap/shared/_newsletter.html.slim (14.0ms)
  Rendered layouts/_facebook_like.html.slim (6.2ms)
  Rendered catarse_bootstrap/shared/_footer_big.html.slim (347.8ms)
  Rendered catarse_bootstrap/projects/index.html.slim within layouts/catarse_bootstrap (1314.1ms)
  [1m[35mCACHE (0.0ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  [1m[36mUserTotal Load (0.4ms)[0m  [1mSELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1[0m  [["user_id", 1]]
  [1m[35m (0.4ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))  [["user_id", 1]]
  [1m[36m (0.4ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))[0m  [["user_id", 1]]
  [1m[35mProject Exists (0.4ms)[0m  SELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1  [["user_id", 1]]
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (6.3ms)
  Rendered layouts/_facebook_sdk.html.slim (5.0ms)
Completed 200 OK in 3542ms (Views: 3430.9ms | ActiveRecord: 23.2ms)


Started GET "/assets/icon-blog.png" for 10.0.2.2 at 2015-10-03 15:46:06 +0000


Started GET "/assets/catarse_bootstrap/icon-newsletter.png" for 10.0.2.2 at 2015-10-03 15:46:07 +0000


Started GET "/assets/logo-footer.png" for 10.0.2.2 at 2015-10-03 15:46:08 +0000


Started GET "/assets/hero-new-home.jpg" for 10.0.2.2 at 2015-10-03 15:46:08 +0000


Started GET "/pt/users/1-sem-nome/edit" for 10.0.2.2 at 2015-10-03 15:46:25 +0000
Processing by UsersController#edit as HTML
  Parameters: {"id"=>"1-sem-nome", "locale"=>"pt"}
  [1m[35mUser Load (0.7ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."deactivated_at" IS NULL AND "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mProject Load (1.0ms)[0m  SELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC  [["user_id", 1]]
  [1m[36mBankAccount Load (0.5ms)[0m  [1mSELECT  "bank_accounts".* FROM "bank_accounts"  WHERE "bank_accounts"."user_id" = $1 LIMIT 1[0m  [["user_id", 1]]
  [1m[35mPayment Load (1.0ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  [1m[36mCACHE (0.1ms)[0m  [1mSELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC[0m  [["user_id", 1]]
  [1m[35mProject Load (0.8ms)[0m  SELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))  [["user_id", 1]]
  Rendered catarse_bootstrap/shared/_user_menu.html.slim (14.4ms)
  Rendered catarse_bootstrap/shared/_header.html.slim (53.5ms)
  Rendered catarse_bootstrap/shared/_header_big.html.slim (93.3ms)
  [1m[36mContribution Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "contributions"  WHERE "contributions"."user_id" = $1 LIMIT 1[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/users/_dashboard_contributions.html.slim (14.1ms)
  [1m[35mCACHE (0.1ms)[0m  SELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))  [["user_id", 1]]
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (15.7ms)
  [1m[36mUserLink Load (0.5ms)[0m  [1mSELECT "user_links".* FROM "user_links"  WHERE "user_links"."user_id" = $1[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/users/_link_fields.html.slim (28.0ms)
  Rendered catarse_bootstrap/users/_link_fields.html.slim (31.1ms)
  Rendered catarse_bootstrap/users/_dashboard_about_me.html.slim (370.4ms)
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (0.5ms)
  [1m[35mCountry Load (4.3ms)[0m  SELECT "countries".* FROM "countries"
  [1m[36m (0.6ms)[0m  [1mSELECT "states"."name", "states"."acronym" FROM "states"   ORDER BY "states"."name" ASC[0m
  Rendered catarse_bootstrap/users/_dashboard_settings.html.slim (494.5ms)
  [1m[35m (0.8ms)[0m  SELECT DISTINCT COUNT(DISTINCT "projects"."id") FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  [["user_id", 1]]
  [1m[36mCategoryFollower Load (0.5ms)[0m  [1mSELECT "category_followers".* FROM "category_followers"  WHERE "category_followers"."user_id" = $1[0m  [["user_id", 1]]
  [1m[35mProject Load (1.5ms)[0m  SELECT "projects".* FROM "projects"  WHERE 1=0
  Rendered catarse_bootstrap/users/_dashboard_notifications.html.slim (98.0ms)
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (0.6ms)
  [1m[36mCreditCard Load (0.4ms)[0m  [1mSELECT "credit_cards".* FROM "credit_cards"  WHERE "credit_cards"."user_id" = $1[0m  [["user_id", 1]]
  [1m[35mBank Load (1.9ms)[0m  SELECT banks.code, banks.id, banks.name, count(bank_accounts.bank_id) as total FROM "banks" left join bank_accounts on bank_accounts.bank_id = banks.id GROUP BY banks.id, bank_accounts.bank_id  ORDER BY total DESC
  Rendered catarse_bootstrap/users/_dashboard_billing.html.slim (429.2ms)
  Rendered catarse_bootstrap/users/_dashboard_talents.html.slim (7.5ms)
  Rendered catarse_bootstrap/shared/_footer_welcome.html.slim (9.8ms)
  Rendered catarse_bootstrap/shared/_footer_about.html.slim (7.6ms)
  Rendered catarse_bootstrap/shared/_footer_navigate.html.slim (2.8ms)
  Rendered catarse_bootstrap/shared/_newsletter.html.slim (5.0ms)
  Rendered layouts/_facebook_like.html.slim (0.6ms)
  Rendered catarse_bootstrap/shared/_footer_big.html.slim (209.7ms)
  Rendered catarse_bootstrap/users/edit.html.slim within layouts/catarse_bootstrap (2092.2ms)
  [1m[36mCACHE (0.1ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mUserTotal Load (0.6ms)[0m  SELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1  [["user_id", 1]]
  [1m[36m (0.5ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  [1m[35m (0.5ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))  [["user_id", 1]]
  [1m[36mProject Exists (1.0ms)[0m  [1mSELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1[0m  [["user_id", 1]]
  [1m[35mCACHE (0.1ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (0.6ms)
  Rendered layouts/_facebook_sdk.html.slim (0.8ms)
Completed 200 OK in 2664ms (Views: 2507.2ms | ActiveRecord: 31.8ms)


Started GET "/assets/redactor-rails/css/redactor.css?body=1" for 10.0.2.2 at 2015-10-03 15:46:28 +0000


Started GET "/assets/redactor-rails/index.css?body=1" for 10.0.2.2 at 2015-10-03 15:46:29 +0000


Started GET "/assets/redactor.css?body=1" for 10.0.2.2 at 2015-10-03 15:46:29 +0000


Started GET "/assets/redactor-rails/redactor.min.js?body=1" for 10.0.2.2 at 2015-10-03 15:46:30 +0000


Started GET "/assets/redactor-rails/langs/pt_br.js?body=1" for 10.0.2.2 at 2015-10-03 15:46:31 +0000


Started GET "/assets/redactor-rails/video.js?body=1" for 10.0.2.2 at 2015-10-03 15:46:31 +0000


Started GET "/assets/redactor-rails/config.js?body=1" for 10.0.2.2 at 2015-10-03 15:46:32 +0000


Started GET "/assets/redactor.js?body=1" for 10.0.2.2 at 2015-10-03 15:46:33 +0000


Started GET "/assets/catarse_bootstrap/icon-newsletter.png" for 10.0.2.2 at 2015-10-03 15:46:34 +0000


Started GET "/assets/logo-footer.png" for 10.0.2.2 at 2015-10-03 15:46:35 +0000


Started GET "/pt/users/1-sem-nome/edit" for 10.0.2.2 at 2015-10-03 15:46:36 +0000
Processing by UsersController#edit as HTML
  Parameters: {"id"=>"1-sem-nome", "locale"=>"pt"}
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."deactivated_at" IS NULL AND "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Load (0.8ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mProject Load (0.7ms)[0m  [1mSELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC[0m  [["user_id", 1]]
  [1m[35mBankAccount Load (0.4ms)[0m  SELECT  "bank_accounts".* FROM "bank_accounts"  WHERE "bank_accounts"."user_id" = $1 LIMIT 1  [["user_id", 1]]
  [1m[36mPayment Load (1.2ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mCACHE (0.1ms)[0m  SELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC  [["user_id", 1]]
  [1m[36mProject Load (0.9ms)[0m  [1mSELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/shared/_user_menu.html.slim (10.6ms)
  Rendered catarse_bootstrap/shared/_header.html.slim (49.8ms)
  Rendered catarse_bootstrap/shared/_header_big.html.slim (82.6ms)
  [1m[35mContribution Exists (0.6ms)[0m  SELECT  1 AS one FROM "contributions"  WHERE "contributions"."user_id" = $1 LIMIT 1  [["user_id", 1]]
  Rendered catarse_bootstrap/users/_dashboard_contributions.html.slim (3.5ms)
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (0.6ms)
  [1m[35mUserLink Load (0.7ms)[0m  SELECT "user_links".* FROM "user_links"  WHERE "user_links"."user_id" = $1  [["user_id", 1]]
  Rendered catarse_bootstrap/users/_link_fields.html.slim (33.7ms)
  Rendered catarse_bootstrap/users/_link_fields.html.slim (35.5ms)
  Rendered catarse_bootstrap/users/_dashboard_about_me.html.slim (297.6ms)
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (0.5ms)
  [1m[36mCountry Load (2.7ms)[0m  [1mSELECT "countries".* FROM "countries"[0m
  Rendered catarse_bootstrap/users/_dashboard_settings.html.slim (370.5ms)
  [1m[35m (0.8ms)[0m  SELECT DISTINCT COUNT(DISTINCT "projects"."id") FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  [["user_id", 1]]
  [1m[36mCategoryFollower Load (0.5ms)[0m  [1mSELECT "category_followers".* FROM "category_followers"  WHERE "category_followers"."user_id" = $1[0m  [["user_id", 1]]
  [1m[35mProject Load (0.6ms)[0m  SELECT "projects".* FROM "projects"  WHERE 1=0
  Rendered catarse_bootstrap/users/_dashboard_notifications.html.slim (11.8ms)
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (0.5ms)
  [1m[36mCreditCard Load (0.4ms)[0m  [1mSELECT "credit_cards".* FROM "credit_cards"  WHERE "credit_cards"."user_id" = $1[0m  [["user_id", 1]]
  [1m[35mBank Load (1.5ms)[0m  SELECT banks.code, banks.id, banks.name, count(bank_accounts.bank_id) as total FROM "banks" left join bank_accounts on bank_accounts.bank_id = banks.id GROUP BY banks.id, bank_accounts.bank_id  ORDER BY total DESC
  Rendered catarse_bootstrap/users/_dashboard_billing.html.slim (311.5ms)
  Rendered catarse_bootstrap/users/_dashboard_talents.html.slim (1.0ms)
  Rendered catarse_bootstrap/shared/_footer_welcome.html.slim (10.8ms)
  Rendered catarse_bootstrap/shared/_footer_about.html.slim (7.3ms)
  Rendered catarse_bootstrap/shared/_footer_navigate.html.slim (1.9ms)
  Rendered catarse_bootstrap/shared/_newsletter.html.slim (4.9ms)
  Rendered layouts/_facebook_like.html.slim (0.8ms)
  Rendered catarse_bootstrap/shared/_footer_big.html.slim (195.6ms)
  Rendered catarse_bootstrap/users/edit.html.slim within layouts/catarse_bootstrap (1536.5ms)
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mUserTotal Load (0.5ms)[0m  SELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1  [["user_id", 1]]
  [1m[36m (0.5ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  [1m[35m (0.5ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))  [["user_id", 1]]
  [1m[36mProject Exists (0.5ms)[0m  [1mSELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1[0m  [["user_id", 1]]
  [1m[35mCACHE (0.0ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (0.6ms)
  Rendered layouts/_facebook_sdk.html.slim (0.8ms)
Completed 200 OK in 1991ms (Views: 1964.0ms | ActiveRecord: 14.8ms)


Started GET "/pt/talent" for 10.0.2.2 at 2015-10-03 15:46:44 +0000
Processing by HighVoltage::PagesController#show as HTML
  Parameters: {"id"=>"talent", "locale"=>"pt"}
Completed 404 Not Found in 37ms (ActiveRecord: 0.0ms)

ActionController::RoutingError (No such page: talent):
  /home.rvm/gems/ruby-2.1.2/gems/high_voltage-2.4.0/app/controllers/concerns/high_voltage/static_page.rb:46:in `invalid_page'
  /home.rvm/gems/ruby-2.1.2/gems/high_voltage-2.4.0/app/controllers/concerns/high_voltage/static_page.rb:9:in `block (2 levels) in <module:StaticPage>'
  /home.rvm/gems/ruby-2.1.2/gems/activesupport-4.1.12/lib/active_support/rescuable.rb:114:in `instance_exec'
  /home.rvm/gems/ruby-2.1.2/gems/activesupport-4.1.12/lib/active_support/rescuable.rb:114:in `block in handler_for_rescue'
  /home.rvm/gems/ruby-2.1.2/gems/activesupport-4.1.12/lib/active_support/rescuable.rb:80:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/activesupport-4.1.12/lib/active_support/rescuable.rb:80:in `rescue_with_handler'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_controller/metal/rescue.rb:15:in `rescue_with_handler'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_controller/metal/rescue.rb:32:in `rescue in process_action'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_controller/metal/rescue.rb:29:in `process_action'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_controller/metal/instrumentation.rb:32:in `block in process_action'
  /home.rvm/gems/ruby-2.1.2/gems/activesupport-4.1.12/lib/active_support/notifications.rb:159:in `block in instrument'
  /home.rvm/gems/ruby-2.1.2/gems/activesupport-4.1.12/lib/active_support/notifications/instrumenter.rb:20:in `instrument'
  /home.rvm/gems/ruby-2.1.2/gems/activesupport-4.1.12/lib/active_support/notifications.rb:159:in `instrument'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_controller/metal/instrumentation.rb:30:in `process_action'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_controller/metal/params_wrapper.rb:250:in `process_action'
  /home.rvm/gems/ruby-2.1.2/gems/activerecord-4.1.12/lib/active_record/railties/controller_runtime.rb:18:in `process_action'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/abstract_controller/base.rb:136:in `process'
  /home.rvm/gems/ruby-2.1.2/gems/actionview-4.1.12/lib/action_view/rendering.rb:30:in `process'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_controller/metal.rb:196:in `dispatch'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_controller/metal/rack_delegation.rb:13:in `dispatch'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_controller/metal.rb:232:in `block in action'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/routing/route_set.rb:82:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/routing/route_set.rb:82:in `dispatch'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/routing/route_set.rb:50:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/journey/router.rb:73:in `block in call'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/journey/router.rb:59:in `each'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/journey/router.rb:59:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/routing/route_set.rb:692:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/omniauth-1.2.2/lib/omniauth/strategy.rb:186:in `call!'
  /home.rvm/gems/ruby-2.1.2/gems/omniauth-1.2.2/lib/omniauth/strategy.rb:164:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/rack/agent_hooks.rb:30:in `traced_call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/rack/browser_monitoring.rb:32:in `traced_call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/rack/developer_mode.rb:48:in `traced_call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/http_accept_language-2.0.5/lib/http_accept_language/middleware.rb:14:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/warden-1.2.3/lib/warden/manager.rb:35:in `block in call'
  /home.rvm/gems/ruby-2.1.2/gems/warden-1.2.3/lib/warden/manager.rb:34:in `catch'
  /home.rvm/gems/ruby-2.1.2/gems/warden-1.2.3/lib/warden/manager.rb:34:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/rack-1.5.5/lib/rack/etag.rb:23:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/rack-1.5.5/lib/rack/conditionalget.rb:25:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/rack-1.5.5/lib/rack/head.rb:11:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/params_parser.rb:27:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/flash.rb:254:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/rack-1.5.5/lib/rack/session/abstract/id.rb:225:in `context'
  /home.rvm/gems/ruby-2.1.2/gems/rack-1.5.5/lib/rack/session/abstract/id.rb:220:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/cookies.rb:562:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/activerecord-4.1.12/lib/active_record/query_cache.rb:36:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/activerecord-4.1.12/lib/active_record/connection_adapters/abstract/connection_pool.rb:621:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/activerecord-4.1.12/lib/active_record/migration.rb:380:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/callbacks.rb:29:in `block in call'
  /home.rvm/gems/ruby-2.1.2/gems/activesupport-4.1.12/lib/active_support/callbacks.rb:82:in `run_callbacks'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/callbacks.rb:27:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/reloader.rb:73:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/remote_ip.rb:76:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/better_errors-2.1.1/lib/better_errors/middleware.rb:59:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/debug_exceptions.rb:17:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/show_exceptions.rb:30:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/rack/logger.rb:38:in `call_app'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/rack/logger.rb:20:in `block in call'
  /home.rvm/gems/ruby-2.1.2/gems/activesupport-4.1.12/lib/active_support/tagged_logging.rb:68:in `block in tagged'
  /home.rvm/gems/ruby-2.1.2/gems/activesupport-4.1.12/lib/active_support/tagged_logging.rb:26:in `tagged'
  /home.rvm/gems/ruby-2.1.2/gems/activesupport-4.1.12/lib/active_support/tagged_logging.rb:68:in `tagged'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/rack/logger.rb:20:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/request_store-1.2.0/lib/request_store/middleware.rb:8:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/request_id.rb:21:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/rack-1.5.5/lib/rack/methodoverride.rb:21:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/rack-1.5.5/lib/rack/runtime.rb:17:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/activesupport-4.1.12/lib/active_support/cache/strategy/local_cache_middleware.rb:26:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/rack-1.5.5/lib/rack/lock.rb:17:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/static.rb:84:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/rack-1.5.5/lib/rack/sendfile.rb:112:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/engine.rb:514:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/application.rb:144:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/railtie.rb:194:in `public_send'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/railtie.rb:194:in `method_missing'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/rack/developer_mode.rb:48:in `traced_call'
  /home.rvm/gems/ruby-2.1.2/gems/newrelic_rpm-3.12.1.298/lib/new_relic/agent/instrumentation/middleware_tracing.rb:67:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/rack-1.5.5/lib/rack/content_length.rb:14:in `call'
  /home.rvm/gems/ruby-2.1.2/gems/thin-1.6.3/lib/thin/connection.rb:86:in `block in pre_process'
  /home.rvm/gems/ruby-2.1.2/gems/thin-1.6.3/lib/thin/connection.rb:84:in `catch'
  /home.rvm/gems/ruby-2.1.2/gems/thin-1.6.3/lib/thin/connection.rb:84:in `pre_process'
  /home.rvm/gems/ruby-2.1.2/gems/thin-1.6.3/lib/thin/connection.rb:53:in `process'
  /home.rvm/gems/ruby-2.1.2/gems/thin-1.6.3/lib/thin/connection.rb:39:in `receive_data'
  /home.rvm/gems/ruby-2.1.2/gems/eventmachine-1.0.7/lib/eventmachine.rb:187:in `run_machine'
  /home.rvm/gems/ruby-2.1.2/gems/eventmachine-1.0.7/lib/eventmachine.rb:187:in `run'
  /home.rvm/gems/ruby-2.1.2/gems/thin-1.6.3/lib/thin/backends/base.rb:73:in `start'
  /home.rvm/gems/ruby-2.1.2/gems/thin-1.6.3/lib/thin/server.rb:162:in `start'
  /home.rvm/gems/ruby-2.1.2/gems/rack-1.5.5/lib/rack/handler/thin.rb:16:in `run'
  /home.rvm/gems/ruby-2.1.2/gems/rack-1.5.5/lib/rack/server.rb:264:in `start'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/commands/server.rb:69:in `start'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/commands/commands_tasks.rb:81:in `block in server'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/commands/commands_tasks.rb:76:in `tap'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/commands/commands_tasks.rb:76:in `server'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/commands/commands_tasks.rb:40:in `run_command!'
  /home.rvm/gems/ruby-2.1.2/gems/railties-4.1.12/lib/rails/commands.rb:17:in `<top (required)>'
  bin/rails:4:in `require'
  bin/rails:4:in `<main>'


  Rendered /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.7ms)
  Rendered /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/templates/routes/_route.html.erb (37.5ms)
  Rendered /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/templates/routes/_route.html.erb (1.1ms)
  Rendered /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/templates/routes/_route.html.erb (0.5ms)
  Rendered /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/templates/routes/_route.html.erb (1.4ms)
  Rendered /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/templates/routes/_route.html.erb (1.5ms)
  Rendered /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/templates/routes/_route.html.erb (2.1ms)
  Rendered /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/templates/routes/_route.html.erb (3.6ms)
  Rendered /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/templates/routes/_table.html.erb (8.8ms)
  Rendered /home.rvm/gems/ruby-2.1.2/gems/actionpack-4.1.12/lib/action_dispatch/middleware/templates/rescues/routing_error.html.erb within rescues/layout (280.2ms)
  [1m[36mCatarseSettingsDb::Setting Load (0.7ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_uri' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_test' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_id' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_secret' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_key_base' LIMIT 1
  [1m[36mOauthProvider Load (0.8ms)[0m  [1mSELECT "oauth_providers".* FROM "oauth_providers"[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_api_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_list_id' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_successful_projects_list' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_failed_projects_list' LIMIT 1[0m
  [1m[35mOauthProvider Load (0.4ms)[0m  SELECT "oauth_providers".* FROM "oauth_providers"
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_api_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_encryption_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_slip_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_credit_card_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_interest_rate' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_cents_fee' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.3ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'host' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (1.2ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_max_installments' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_minimum_value_for_installment' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'stone_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_diners_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_diners_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_amex_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_amex_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.6ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.2ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_system' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_contact' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'company_name' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.6ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1


Started GET "/" for 10.0.2.2 at 2015-10-03 15:50:52 +0000
  [1m[36mActiveRecord::SchemaMigration Load (1.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by ProjectsController#index as HTML
  [1m[35mUser Load (1.3ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPayment Load (1.7ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mProject Load (1.6ms)[0m  SELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC  [["user_id", 1]]
  [1m[36mProject Load (0.4ms)[0m  [1mSELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/shared/_user_menu.html.slim (124.7ms)
  Rendered catarse_bootstrap/shared/_header.html.slim (278.7ms)
  Rendered catarse_bootstrap/shared/_header_big.html.slim (334.2ms)
  [1m[35mProject Load (1.0ms)[0m  SELECT  "projects".* FROM "projects"  WHERE ("projects"."state" IN ('online')) AND (EXISTS(SELECT true FROM users u WHERE u.id = projects.user_id AND lower(u.address_state) = lower(NULL)))  ORDER BY random() LIMIT 3
  [1m[36mProjectsForHome Load (3.0ms)[0m  [1mSELECT "projects_for_home".* FROM "projects_for_home"  WHERE "projects_for_home"."origin" = 'recommended'[0m
  Rendered catarse_bootstrap/projects/_card.html.slim (0.1ms)
  [1m[35mProjectsForHome Load (1.7ms)[0m  SELECT "projects_for_home".* FROM "projects_for_home"  WHERE "projects_for_home"."origin" = 'expiring'
  Rendered catarse_bootstrap/projects/_card.html.slim (0.1ms)
  [1m[36mProjectsForHome Load (1.8ms)[0m  [1mSELECT "projects_for_home".* FROM "projects_for_home"  WHERE "projects_for_home"."origin" = 'recents'[0m
  Rendered catarse_bootstrap/projects/_card.html.slim (0.1ms)
  Rendered catarse_bootstrap/shared/_footer_welcome.html.slim (16.6ms)
  Rendered catarse_bootstrap/shared/_footer_about.html.slim (16.4ms)
  Rendered catarse_bootstrap/shared/_footer_navigate.html.slim (11.8ms)
  Rendered catarse_bootstrap/shared/_newsletter.html.slim (17.5ms)
  Rendered layouts/_facebook_like.html.slim (4.9ms)
  Rendered catarse_bootstrap/shared/_footer_big.html.slim (327.7ms)
  Rendered catarse_bootstrap/projects/index.html.slim within layouts/catarse_bootstrap (8045.3ms)
  [1m[35mCACHE (0.0ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  [1m[36mUserTotal Load (0.5ms)[0m  [1mSELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1[0m  [["user_id", 1]]
  [1m[35m (0.9ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))  [["user_id", 1]]
  [1m[36m (0.4ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))[0m  [["user_id", 1]]
  [1m[35mProject Exists (0.4ms)[0m  SELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1  [["user_id", 1]]
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (6.0ms)
  Rendered layouts/_facebook_sdk.html.slim (5.3ms)
Completed 200 OK in 10597ms (Views: 10484.2ms | ActiveRecord: 23.7ms)


Started GET "/assets/catarse_bootstrap/logo_big.png" for 10.0.2.2 at 2015-10-03 15:51:03 +0000


Started GET "/assets/catarse_bootstrap/loader.gif" for 10.0.2.2 at 2015-10-03 15:51:04 +0000


Started GET "/assets/catarse_bootstrap/lupa.png" for 10.0.2.2 at 2015-10-03 15:51:05 +0000


Started GET "/assets/catarse_bootstrap/user.jpg" for 10.0.2.2 at 2015-10-03 15:51:05 +0000


Started GET "/assets/icon-blog.png" for 10.0.2.2 at 2015-10-03 15:51:06 +0000


Started GET "/assets/catarse_bootstrap/icon-newsletter.png" for 10.0.2.2 at 2015-10-03 15:51:07 +0000


Started GET "/assets/jquery.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:08 +0000


Started GET "/assets/underscore.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:09 +0000


Started GET "/assets/backbone.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:09 +0000


Started GET "/assets/jquery-ui/core.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:10 +0000


Started GET "/assets/jquery-ui/widget.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:11 +0000


Started GET "/assets/jquery-ui/accordion.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:12 +0000


Started GET "/assets/jquery-ui/position.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:13 +0000


Started GET "/assets/jquery-ui/menu.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:13 +0000


Started GET "/assets/jquery-ui/autocomplete.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:15 +0000


Started GET "/assets/jquery-ui/button.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:15 +0000


Started GET "/assets/jquery-ui/datepicker.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:16 +0000


Started GET "/assets/jquery-ui/mouse.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:17 +0000


Started GET "/assets/jquery-ui/draggable.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:18 +0000


Started GET "/assets/jquery-ui/resizable.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:19 +0000


Started GET "/assets/jquery-ui/dialog.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:20 +0000


Started GET "/assets/jquery-ui/droppable.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:21 +0000


Started GET "/assets/jquery-ui/effect.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:22 +0000


Started GET "/assets/jquery-ui/effect-blind.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:22 +0000


Started GET "/assets/jquery-ui/effect-bounce.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:23 +0000


Started GET "/assets/jquery-ui/effect-clip.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:24 +0000


Started GET "/assets/jquery-ui/effect-drop.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:25 +0000


Started GET "/assets/jquery-ui/effect-explode.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:26 +0000


Started GET "/assets/jquery-ui/effect-fade.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:27 +0000


Started GET "/assets/jquery-ui/effect-fold.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:27 +0000


Started GET "/assets/jquery-ui/effect-highlight.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:28 +0000


Started GET "/assets/jquery-ui/effect-size.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:29 +0000


Started GET "/assets/jquery-ui/effect-scale.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:29 +0000


Started GET "/assets/jquery-ui/effect-puff.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:30 +0000


Started GET "/assets/jquery-ui/effect-pulsate.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:31 +0000


Started GET "/assets/jquery-ui/effect-shake.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:32 +0000


Started GET "/assets/jquery-ui/effect-slide.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:33 +0000


Started GET "/assets/jquery-ui/effect-transfer.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:33 +0000


Started GET "/assets/jquery-ui/progressbar.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:34 +0000


Started GET "/assets/jquery-ui/selectable.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:35 +0000


Started GET "/assets/jquery-ui/selectmenu.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:35 +0000


Started GET "/assets/jquery-ui/slider.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:36 +0000


Started GET "/assets/jquery-ui/sortable.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:37 +0000


Started GET "/assets/jquery-ui/spinner.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:37 +0000


Started GET "/assets/jquery-ui/tabs.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:38 +0000


Started GET "/assets/jquery-ui/tooltip.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:39 +0000


Started GET "/assets/jquery-ui.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:39 +0000


Started GET "/assets/jquery.elastic.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:40 +0000


Started GET "/assets/best_in_place.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:41 +0000


Started GET "/assets/cocoon.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:41 +0000


Started GET "/assets/app/pages/how_it_works.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:42 +0000


Started GET "/assets/app/pages/registration.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:43 +0000


Started GET "/assets/app/pages/reset_password.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:43 +0000


Started GET "/assets/app/pages/search.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:44 +0000


Started GET "/assets/jquery-ui/droppable.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:45 +0000


Started GET "/assets/hero-new-home.jpg" for 10.0.2.2 at 2015-10-03 15:51:45 +0000


Started GET "/assets/logo-footer.png" for 10.0.2.2 at 2015-10-03 15:51:46 +0000


Started GET "/assets/jquery-ui/effect.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:47 +0000


Started GET "/assets/jquery-ui/effect-blind.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:48 +0000


Started GET "/assets/jquery-ui/effect-drop.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:48 +0000


Started GET "/assets/jquery-ui/effect-explode.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:49 +0000


Started GET "/assets/jquery-ui/effect-fold.js?body=1" for 10.0.2.2 at 2015-10-03 15:51:49 +0000


Started GET "/pt/users/1-sem-nome/edit" for 10.0.2.2 at 2015-10-03 15:51:56 +0000
Processing by UsersController#edit as HTML
  Parameters: {"id"=>"1-sem-nome", "locale"=>"pt"}
  [1m[35mUser Load (0.7ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."deactivated_at" IS NULL AND "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mProject Load (1.8ms)[0m  SELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC  [["user_id", 1]]
  [1m[36mBankAccount Load (0.6ms)[0m  [1mSELECT  "bank_accounts".* FROM "bank_accounts"  WHERE "bank_accounts"."user_id" = $1 LIMIT 1[0m  [["user_id", 1]]
  [1m[35mPayment Load (1.1ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC[0m  [["user_id", 1]]
  [1m[35mProject Load (0.5ms)[0m  SELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))  [["user_id", 1]]
  Rendered catarse_bootstrap/shared/_user_menu.html.slim (10.8ms)
  Rendered catarse_bootstrap/shared/_header.html.slim (56.7ms)
  Rendered catarse_bootstrap/shared/_header_big.html.slim (90.7ms)
  [1m[36mContribution Exists (0.5ms)[0m  [1mSELECT  1 AS one FROM "contributions"  WHERE "contributions"."user_id" = $1 LIMIT 1[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/users/_dashboard_contributions.html.slim (18.6ms)
  [1m[35mCACHE (0.0ms)[0m  SELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))  [["user_id", 1]]
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (13.1ms)
  [1m[36mUserLink Load (0.4ms)[0m  [1mSELECT "user_links".* FROM "user_links"  WHERE "user_links"."user_id" = $1[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/users/_link_fields.html.slim (52.2ms)
  Rendered catarse_bootstrap/users/_link_fields.html.slim (33.6ms)
  Rendered catarse_bootstrap/users/_dashboard_about_me.html.slim (424.2ms)
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (0.7ms)
  [1m[35mCountry Load (2.6ms)[0m  SELECT "countries".* FROM "countries"
  [1m[36m (0.6ms)[0m  [1mSELECT "states"."name", "states"."acronym" FROM "states"   ORDER BY "states"."name" ASC[0m
  Rendered catarse_bootstrap/users/_dashboard_settings.html.slim (480.5ms)
  [1m[35m (1.2ms)[0m  SELECT DISTINCT COUNT(DISTINCT "projects"."id") FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  [["user_id", 1]]
  [1m[36mCategoryFollower Load (0.4ms)[0m  [1mSELECT "category_followers".* FROM "category_followers"  WHERE "category_followers"."user_id" = $1[0m  [["user_id", 1]]
  [1m[35mProject Load (1.2ms)[0m  SELECT "projects".* FROM "projects"  WHERE 1=0
  Rendered catarse_bootstrap/users/_dashboard_notifications.html.slim (84.9ms)
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (0.8ms)
  [1m[36mCreditCard Load (0.5ms)[0m  [1mSELECT "credit_cards".* FROM "credit_cards"  WHERE "credit_cards"."user_id" = $1[0m  [["user_id", 1]]
  [1m[35mBank Load (2.0ms)[0m  SELECT banks.code, banks.id, banks.name, count(bank_accounts.bank_id) as total FROM "banks" left join bank_accounts on bank_accounts.bank_id = banks.id GROUP BY banks.id, bank_accounts.bank_id  ORDER BY total DESC
  Rendered catarse_bootstrap/users/_dashboard_billing.html.slim (582.5ms)
  Rendered catarse_bootstrap/users/_dashboard_talents.html.slim (8.5ms)
  Rendered catarse_bootstrap/shared/_footer_welcome.html.slim (21.0ms)
  Rendered catarse_bootstrap/shared/_footer_about.html.slim (12.0ms)
  Rendered catarse_bootstrap/shared/_footer_navigate.html.slim (2.1ms)
  Rendered catarse_bootstrap/shared/_newsletter.html.slim (6.9ms)
  Rendered layouts/_facebook_like.html.slim (1.7ms)
  Rendered catarse_bootstrap/shared/_footer_big.html.slim (228.3ms)
  Rendered catarse_bootstrap/users/edit.html.slim within layouts/catarse_bootstrap (2329.9ms)
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mUserTotal Load (0.5ms)[0m  SELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1  [["user_id", 1]]
  [1m[36m (0.6ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  [1m[35m (0.6ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))  [["user_id", 1]]
  [1m[36mProject Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1[0m  [["user_id", 1]]
  [1m[35mCACHE (0.0ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (0.7ms)
  Rendered layouts/_facebook_sdk.html.slim (0.8ms)
Completed 200 OK in 2908ms (Views: 2710.5ms | ActiveRecord: 33.1ms)


Started GET "/assets/redactor-rails/css/redactor.css?body=1" for 10.0.2.2 at 2015-10-03 15:52:00 +0000


Started GET "/assets/redactor-rails/index.css?body=1" for 10.0.2.2 at 2015-10-03 15:52:01 +0000


Started GET "/assets/redactor.css?body=1" for 10.0.2.2 at 2015-10-03 15:52:02 +0000


Started GET "/assets/catarse_bootstrap/logo_big.png" for 10.0.2.2 at 2015-10-03 15:52:02 +0000


Started GET "/assets/jquery.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:03 +0000


Started GET "/assets/underscore.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:04 +0000


Started GET "/assets/backbone.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:05 +0000


Started GET "/assets/jquery-ui/core.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:05 +0000


Started GET "/assets/jquery-ui/widget.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:06 +0000


Started GET "/assets/jquery-ui/accordion.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:07 +0000


Started GET "/assets/jquery-ui/position.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:07 +0000


Started GET "/assets/jquery-ui/menu.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:08 +0000


Started GET "/assets/jquery-ui/autocomplete.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:08 +0000


Started GET "/assets/jquery-ui/button.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:09 +0000


Started GET "/assets/jquery-ui/datepicker.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:10 +0000


Started GET "/assets/jquery-ui/mouse.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:10 +0000


Started GET "/assets/jquery-ui/draggable.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:11 +0000


Started GET "/assets/jquery-ui/resizable.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:12 +0000


Started GET "/assets/jquery-ui/dialog.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:12 +0000


Started GET "/assets/jquery-ui/droppable.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:13 +0000


Started GET "/assets/jquery-ui/effect.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:14 +0000


Started GET "/assets/jquery-ui/effect-blind.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:14 +0000


Started GET "/assets/jquery-ui/effect-bounce.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:15 +0000


Started GET "/assets/jquery-ui/effect-clip.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:16 +0000


Started GET "/assets/jquery-ui/effect-drop.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:16 +0000


Started GET "/assets/jquery-ui/effect-explode.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:17 +0000


Started GET "/assets/jquery-ui/effect-fade.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:17 +0000


Started GET "/assets/jquery-ui/effect-fold.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:18 +0000


Started GET "/assets/jquery-ui/effect-highlight.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:19 +0000


Started GET "/assets/jquery-ui/effect-size.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:19 +0000


Started GET "/assets/jquery-ui/effect-scale.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:20 +0000


Started GET "/assets/jquery-ui/effect-puff.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:21 +0000


Started GET "/assets/jquery-ui/effect-pulsate.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:21 +0000


Started GET "/assets/jquery-ui/effect-shake.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:22 +0000


Started GET "/assets/jquery-ui/effect-slide.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:23 +0000


Started GET "/assets/jquery-ui/effect-transfer.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:23 +0000


Started GET "/assets/jquery-ui/progressbar.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:24 +0000


Started GET "/assets/jquery-ui/selectable.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:25 +0000


Started GET "/assets/jquery-ui/selectmenu.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:26 +0000


Started GET "/assets/jquery-ui/slider.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:26 +0000


Started GET "/assets/jquery-ui/sortable.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:27 +0000


Started GET "/assets/jquery-ui/spinner.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:27 +0000


Started GET "/assets/jquery-ui/tabs.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:28 +0000


Started GET "/assets/jquery-ui/tooltip.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:29 +0000


Started GET "/assets/jquery-ui.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:29 +0000


Started GET "/assets/jquery.elastic.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:30 +0000


Started GET "/assets/best_in_place.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:31 +0000


Started GET "/assets/cocoon.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:31 +0000


Started GET "/assets/app/pages/how_it_works.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:32 +0000


Started GET "/assets/app/pages/registration.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:33 +0000


Started GET "/assets/app/pages/reset_password.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:33 +0000


Started GET "/assets/app/pages/search.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:34 +0000


Started GET "/assets/redactor-rails/redactor.min.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:35 +0000


Started GET "/assets/redactor-rails/langs/pt_br.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:35 +0000


Started GET "/assets/redactor-rails/video.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:36 +0000


Started GET "/assets/redactor-rails/config.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:37 +0000


Started GET "/assets/redactor.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:37 +0000


Started GET "/pt/users/1-sem-nome/edit" for 10.0.2.2 at 2015-10-03 15:52:38 +0000
Processing by UsersController#edit as HTML
  Parameters: {"id"=>"1-sem-nome", "locale"=>"pt"}
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."deactivated_at" IS NULL AND "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Load (0.7ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mProject Load (0.9ms)[0m  [1mSELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC[0m  [["user_id", 1]]
  [1m[35mBankAccount Load (0.5ms)[0m  SELECT  "bank_accounts".* FROM "bank_accounts"  WHERE "bank_accounts"."user_id" = $1 LIMIT 1  [["user_id", 1]]
  [1m[36mPayment Load (1.8ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mCACHE (0.0ms)[0m  SELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC  [["user_id", 1]]
  [1m[36mProject Load (0.6ms)[0m  [1mSELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/shared/_user_menu.html.slim (10.2ms)
  Rendered catarse_bootstrap/shared/_header.html.slim (50.5ms)
  Rendered catarse_bootstrap/shared/_header_big.html.slim (81.9ms)
  [1m[35mContribution Exists (0.5ms)[0m  SELECT  1 AS one FROM "contributions"  WHERE "contributions"."user_id" = $1 LIMIT 1  [["user_id", 1]]
  Rendered catarse_bootstrap/users/_dashboard_contributions.html.slim (4.0ms)
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (0.6ms)
  [1m[35mUserLink Load (0.4ms)[0m  SELECT "user_links".* FROM "user_links"  WHERE "user_links"."user_id" = $1  [["user_id", 1]]
  Rendered catarse_bootstrap/users/_link_fields.html.slim (22.7ms)
  Rendered catarse_bootstrap/users/_link_fields.html.slim (23.2ms)
  Rendered catarse_bootstrap/users/_dashboard_about_me.html.slim (205.3ms)
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (0.5ms)
  [1m[36mCountry Load (1.8ms)[0m  [1mSELECT "countries".* FROM "countries"[0m
  Rendered catarse_bootstrap/users/_dashboard_settings.html.slim (520.1ms)
  [1m[35m (0.8ms)[0m  SELECT DISTINCT COUNT(DISTINCT "projects"."id") FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  [["user_id", 1]]
  [1m[36mCategoryFollower Load (0.5ms)[0m  [1mSELECT "category_followers".* FROM "category_followers"  WHERE "category_followers"."user_id" = $1[0m  [["user_id", 1]]
  [1m[35mProject Load (0.6ms)[0m  SELECT "projects".* FROM "projects"  WHERE 1=0
  Rendered catarse_bootstrap/users/_dashboard_notifications.html.slim (11.8ms)
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (0.6ms)
  [1m[36mCreditCard Load (0.4ms)[0m  [1mSELECT "credit_cards".* FROM "credit_cards"  WHERE "credit_cards"."user_id" = $1[0m  [["user_id", 1]]
  [1m[35mBank Load (1.4ms)[0m  SELECT banks.code, banks.id, banks.name, count(bank_accounts.bank_id) as total FROM "banks" left join bank_accounts on bank_accounts.bank_id = banks.id GROUP BY banks.id, bank_accounts.bank_id  ORDER BY total DESC
  Rendered catarse_bootstrap/users/_dashboard_billing.html.slim (342.1ms)
  Rendered catarse_bootstrap/users/_dashboard_talents.html.slim (1.1ms)
  Rendered catarse_bootstrap/shared/_footer_welcome.html.slim (9.0ms)
  Rendered catarse_bootstrap/shared/_footer_about.html.slim (5.9ms)
  Rendered catarse_bootstrap/shared/_footer_navigate.html.slim (2.3ms)
  Rendered catarse_bootstrap/shared/_newsletter.html.slim (4.2ms)
  Rendered layouts/_facebook_like.html.slim (0.6ms)
  Rendered catarse_bootstrap/shared/_footer_big.html.slim (176.7ms)
  Rendered catarse_bootstrap/users/edit.html.slim within layouts/catarse_bootstrap (1592.1ms)
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mUserTotal Load (0.4ms)[0m  SELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1  [["user_id", 1]]
  [1m[36m (0.5ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  [1m[35m (0.4ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))  [["user_id", 1]]
  [1m[36mProject Exists (0.5ms)[0m  [1mSELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1[0m  [["user_id", 1]]
  [1m[35mCACHE (0.0ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (0.6ms)
  Rendered layouts/_facebook_sdk.html.slim (0.6ms)
Completed 200 OK in 1986ms (Views: 1960.1ms | ActiveRecord: 13.7ms)


Started GET "/assets/catarse_bootstrap/user.jpg" for 10.0.2.2 at 2015-10-03 15:52:41 +0000


Started GET "/assets/catarse_bootstrap/lupa.png" for 10.0.2.2 at 2015-10-03 15:52:41 +0000


Started GET "/assets/catarse_bootstrap/icon-newsletter.png" for 10.0.2.2 at 2015-10-03 15:52:42 +0000


Started GET "/assets/catarse_bootstrap/loader.gif" for 10.0.2.2 at 2015-10-03 15:52:43 +0000


Started GET "/assets/logo-footer.png" for 10.0.2.2 at 2015-10-03 15:52:43 +0000


Started GET "/pt/talent" for 10.0.2.2 at 2015-10-03 15:52:51 +0000
Processing by HighVoltage::PagesController#show as HTML
  Parameters: {"id"=>"talent", "locale"=>"pt"}
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPayment Load (1.0ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  [1m[36mProject Load (0.9ms)[0m  [1mSELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC[0m  [["user_id", 1]]
  [1m[35mProject Load (0.5ms)[0m  SELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))  [["user_id", 1]]
  Rendered catarse_bootstrap/shared/_user_menu.html.slim (10.7ms)
  Rendered catarse_bootstrap/shared/_header.html.slim (55.3ms)
  Rendered catarse_bootstrap/shared/_header_big.html.slim (96.1ms)
  [1m[36mStatistics Load (0.9ms)[0m  [1mSELECT  "statistics".* FROM "statistics"   ORDER BY total_users DESC LIMIT 1[0m
  Rendered catarse_bootstrap/shared/_footer_welcome.html.slim (17.6ms)
  Rendered catarse_bootstrap/shared/_footer_about.html.slim (15.9ms)
  Rendered catarse_bootstrap/shared/_footer_navigate.html.slim (4.9ms)
  Rendered catarse_bootstrap/shared/_newsletter.html.slim (8.5ms)
  Rendered layouts/_facebook_like.html.slim (2.3ms)
  Rendered catarse_bootstrap/shared/_footer_big.html.slim (330.1ms)
  Rendered catarse_bootstrap/pages/talent.html.slim within layouts/catarse_bootstrap (596.9ms)
  [1m[35mCACHE (0.1ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  [1m[36mUserTotal Load (2.2ms)[0m  [1mSELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1[0m  [["user_id", 1]]
  [1m[35m (1.2ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))  [["user_id", 1]]
  [1m[36m (0.5ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))[0m  [["user_id", 1]]
  [1m[35mProject Exists (0.2ms)[0m  SELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1  [["user_id", 1]]
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (1.6ms)
  Rendered layouts/_facebook_sdk.html.slim (0.7ms)
Completed 200 OK in 1186ms (Views: 1175.3ms | ActiveRecord: 9.8ms)


Started GET "/assets/catarse_bootstrap/start/inscreva-seu-projeto.png" for 10.0.2.2 at 2015-10-03 15:52:53 +0000


Started GET "/assets/catarse_bootstrap/start/trabalhe-muito.png" for 10.0.2.2 at 2015-10-03 15:52:53 +0000


Started GET "/assets/catarse_bootstrap/logo_big.png" for 10.0.2.2 at 2015-10-03 15:52:54 +0000


Started GET "/assets/catarse_bootstrap/loader.gif" for 10.0.2.2 at 2015-10-03 15:52:55 +0000


Started GET "/assets/catarse_bootstrap/lupa.png" for 10.0.2.2 at 2015-10-03 15:52:55 +0000


Started GET "/assets/jquery.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:56 +0000


Started GET "/assets/underscore.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:57 +0000


Started GET "/assets/backbone.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:57 +0000


Started GET "/assets/jquery-ui/core.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:58 +0000


Started GET "/assets/jquery-ui/widget.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:59 +0000


Started GET "/assets/jquery-ui/accordion.js?body=1" for 10.0.2.2 at 2015-10-03 15:52:59 +0000


Started GET "/assets/jquery-ui/position.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:00 +0000


Started GET "/assets/jquery-ui/menu.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:00 +0000


Started GET "/assets/jquery-ui/autocomplete.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:01 +0000


Started GET "/assets/jquery-ui/button.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:02 +0000


Started GET "/assets/jquery-ui/datepicker.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:02 +0000


Started GET "/assets/jquery-ui/mouse.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:03 +0000


Started GET "/assets/jquery-ui/draggable.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:04 +0000


Started GET "/assets/jquery-ui/resizable.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:04 +0000


Started GET "/assets/jquery-ui/dialog.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:05 +0000


Started GET "/assets/jquery-ui/droppable.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:06 +0000


Started GET "/assets/jquery-ui/effect.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:07 +0000


Started GET "/assets/jquery-ui/effect-blind.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:08 +0000


Started GET "/assets/jquery-ui/effect-bounce.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:09 +0000


Started GET "/assets/jquery-ui/effect-clip.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:10 +0000


Started GET "/assets/jquery-ui/effect-drop.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:10 +0000


Started GET "/assets/jquery-ui/effect-explode.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:11 +0000


Started GET "/assets/jquery-ui/effect-fade.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:12 +0000


Started GET "/assets/jquery-ui/effect-fold.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:12 +0000


Started GET "/assets/jquery-ui/effect-highlight.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:13 +0000


Started GET "/assets/jquery-ui/effect-size.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:14 +0000


Started GET "/assets/jquery-ui/effect-scale.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:14 +0000


Started GET "/assets/jquery-ui/effect-puff.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:15 +0000


Started GET "/assets/jquery-ui/effect-pulsate.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:16 +0000


Started GET "/assets/jquery-ui/effect-shake.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:16 +0000


Started GET "/assets/jquery-ui/effect-slide.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:17 +0000


Started GET "/assets/jquery-ui/effect-transfer.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:18 +0000


Started GET "/assets/jquery-ui/progressbar.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:18 +0000


Started GET "/assets/jquery-ui/selectable.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:19 +0000


Started GET "/assets/jquery-ui/selectmenu.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:20 +0000


Started GET "/assets/jquery-ui/slider.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:20 +0000


Started GET "/assets/jquery-ui/sortable.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:21 +0000


Started GET "/assets/jquery-ui/spinner.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:22 +0000


Started GET "/assets/jquery-ui/tabs.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:22 +0000


Started GET "/assets/jquery-ui/tooltip.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:23 +0000


Started GET "/assets/jquery-ui.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:24 +0000


Started GET "/assets/jquery.elastic.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:25 +0000


Started GET "/assets/best_in_place.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:26 +0000


Started GET "/assets/cocoon.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:26 +0000


Started GET "/assets/app/pages/how_it_works.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:27 +0000


Started GET "/assets/app/pages/registration.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:28 +0000


Started GET "/assets/app/pages/reset_password.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:28 +0000


Started GET "/assets/app/pages/search.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:29 +0000


Started GET "/assets/catarse_bootstrap/user.jpg" for 10.0.2.2 at 2015-10-03 15:53:30 +0000


Started GET "/assets/catarse_bootstrap/start/tudo-ou-nada.png" for 10.0.2.2 at 2015-10-03 15:53:31 +0000


Started GET "/assets/catarse_bootstrap/start/mobilze-interessados.png" for 10.0.2.2 at 2015-10-03 15:53:32 +0000


Started GET "/assets/logo-footer.png" for 10.0.2.2 at 2015-10-03 15:53:32 +0000


Started GET "/assets/app/pages/how_it_works.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:33 +0000


Started GET "/assets/catarse_bootstrap/icon-newsletter.png" for 10.0.2.2 at 2015-10-03 15:53:34 +0000


Started GET "/assets/app/pages/registration.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:34 +0000


Started GET "/assets/app/pages/reset_password.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:35 +0000


Started GET "/assets/app/pages/search.js?body=1" for 10.0.2.2 at 2015-10-03 15:53:36 +0000


Started GET "/pt/projects/new" for 10.0.2.2 at 2015-10-03 15:59:48 +0000
Processing by ProjectsController#new as HTML
  Parameters: {"locale"=>"pt"}
  [1m[35mUser Load (0.7ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPayment Load (1.0ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mProject Load (0.9ms)[0m  SELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC  [["user_id", 1]]
  [1m[36mProject Load (0.4ms)[0m  [1mSELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/shared/_user_menu.html.slim (10.0ms)
  Rendered catarse_bootstrap/shared/_header.html.slim (58.1ms)
  Rendered catarse_bootstrap/devise/shared/_alert.html.slim (0.6ms)
  [1m[35mCategory Load (1.4ms)[0m  SELECT "categories".* FROM "categories"   ORDER BY "categories"."name_pt" ASC
  Rendered catarse_bootstrap/shared/_footer.html.slim (23.6ms)
  Rendered catarse_bootstrap/projects/new.html.slim within layouts/catarse_bootstrap (539.0ms)
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mUserTotal Load (0.6ms)[0m  SELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1  [["user_id", 1]]
  [1m[36m (0.5ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  [1m[35m (0.5ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))  [["user_id", 1]]
  [1m[36mProject Exists (0.4ms)[0m  [1mSELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1[0m  [["user_id", 1]]
  [1m[35mCACHE (0.0ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (0.7ms)
  Rendered layouts/_facebook_sdk.html.slim (0.6ms)
Completed 200 OK in 979ms (Views: 903.5ms | ActiveRecord: 11.2ms)


Started GET "/assets/catarse_bootstrap/logo_big.png" for 10.0.2.2 at 2015-10-03 15:59:50 +0000


Started GET "/assets/catarse_bootstrap/user.jpg" for 10.0.2.2 at 2015-10-03 15:59:50 +0000


Started GET "/assets/jquery.js?body=1" for 10.0.2.2 at 2015-10-03 15:59:51 +0000


Started GET "/assets/backbone.js?body=1" for 10.0.2.2 at 2015-10-03 15:59:52 +0000


Started GET "/assets/underscore.js?body=1" for 10.0.2.2 at 2015-10-03 15:59:53 +0000


Started GET "/assets/jquery-ui/core.js?body=1" for 10.0.2.2 at 2015-10-03 15:59:53 +0000


Started GET "/assets/jquery-ui/widget.js?body=1" for 10.0.2.2 at 2015-10-03 15:59:54 +0000


Started GET "/assets/jquery-ui/accordion.js?body=1" for 10.0.2.2 at 2015-10-03 15:59:55 +0000


Started GET "/assets/jquery-ui/position.js?body=1" for 10.0.2.2 at 2015-10-03 15:59:55 +0000


Started GET "/assets/jquery-ui/menu.js?body=1" for 10.0.2.2 at 2015-10-03 15:59:56 +0000


Started GET "/assets/jquery-ui/autocomplete.js?body=1" for 10.0.2.2 at 2015-10-03 15:59:57 +0000


Started GET "/assets/jquery-ui/button.js?body=1" for 10.0.2.2 at 2015-10-03 15:59:57 +0000


Started GET "/assets/jquery-ui/datepicker.js?body=1" for 10.0.2.2 at 2015-10-03 15:59:58 +0000


Started GET "/assets/jquery-ui/mouse.js?body=1" for 10.0.2.2 at 2015-10-03 15:59:59 +0000


Started GET "/assets/jquery-ui/draggable.js?body=1" for 10.0.2.2 at 2015-10-03 15:59:59 +0000


Started GET "/assets/jquery-ui/resizable.js?body=1" for 10.0.2.2 at 2015-10-03 16:00:00 +0000


Started GET "/assets/jquery-ui/dialog.js?body=1" for 10.0.2.2 at 2015-10-03 16:00:01 +0000


Started GET "/assets/jquery-ui/droppable.js?body=1" for 10.0.2.2 at 2015-10-03 16:00:01 +0000


Started GET "/assets/jquery-ui/effect.js?body=1" for 10.0.2.2 at 2015-10-03 17:48:36 +0000


Started GET "/assets/jquery-ui/effect-blind.js?body=1" for 10.0.2.2 at 2015-10-03 17:48:37 +0000


Started GET "/assets/jquery-ui/effect-bounce.js?body=1" for 10.0.2.2 at 2015-10-03 17:48:37 +0000


Started GET "/assets/jquery-ui/effect-clip.js?body=1" for 10.0.2.2 at 2015-10-03 17:48:38 +0000
  [1m[36mCatarseSettingsDb::Setting Load (0.7ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_uri' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_test' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_id' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_secret' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_key_base' LIMIT 1
  [1m[36mOauthProvider Load (0.7ms)[0m  [1mSELECT "oauth_providers".* FROM "oauth_providers"[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_api_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_list_id' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_successful_projects_list' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_failed_projects_list' LIMIT 1[0m
  [1m[35mOauthProvider Load (0.4ms)[0m  SELECT "oauth_providers".* FROM "oauth_providers"
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_api_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_encryption_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_slip_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_credit_card_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_interest_rate' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_cents_fee' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'host' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_max_installments' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_minimum_value_for_installment' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'stone_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_diners_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_diners_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_amex_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_amex_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.6ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_system' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_contact' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'company_name' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.6ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_uri' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.3ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_test' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_id' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_secret' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_key_base' LIMIT 1
  [1m[36mOauthProvider Load (0.7ms)[0m  [1mSELECT "oauth_providers".* FROM "oauth_providers"[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_api_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_list_id' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_successful_projects_list' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_failed_projects_list' LIMIT 1[0m
  [1m[35mOauthProvider Load (0.5ms)[0m  SELECT "oauth_providers".* FROM "oauth_providers"
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_api_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_encryption_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_slip_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.9ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_credit_card_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_interest_rate' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_cents_fee' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'host' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_max_installments' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_minimum_value_for_installment' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'stone_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_diners_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.6ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_diners_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_amex_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_amex_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.6ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_system' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.6ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_contact' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'company_name' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.7ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_uri' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_test' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_id' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_secret' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_key_base' LIMIT 1
  [1m[36mOauthProvider Load (0.7ms)[0m  [1mSELECT "oauth_providers".* FROM "oauth_providers"[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_api_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_list_id' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_successful_projects_list' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_failed_projects_list' LIMIT 1[0m
  [1m[35mOauthProvider Load (0.4ms)[0m  SELECT "oauth_providers".* FROM "oauth_providers"
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_api_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_encryption_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_slip_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_credit_card_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_interest_rate' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_cents_fee' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'host' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.6ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_max_installments' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_minimum_value_for_installment' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'stone_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_diners_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_diners_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.3ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_amex_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_amex_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_system' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_contact' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'company_name' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1
  [1m[36mActiveRecord::SchemaMigration Load (1.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTalents (20151003180757)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.8ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'talents'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (0.6ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'talents'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36m (32.7ms)[0m  [1mCREATE TABLE "talents" ("id" serial primary key, "name" character varying(255), "description" text, "video_url" character varying(255), "text" character varying(255), "category_id" character varying(255), "integer" character varying(255), "user_id" character varying(255), "uploaded_image" character varying(255), "created_at" timestamp, "updated_at" timestamp, CONSTRAINT fk_talents_category_id FOREIGN KEY ("category_id") REFERENCES "categories" ("id"), CONSTRAINT fk_talents_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id")) [0m
PG::DatatypeMismatch: ERROR:  foreign key constraint "fk_talents_category_id" cannot be implemented
DETAIL:  Key columns "category_id" and "id" are of incompatible types: character varying and integer.
: CREATE TABLE "talents" ("id" serial primary key, "name" character varying(255), "description" text, "video_url" character varying(255), "text" character varying(255), "category_id" character varying(255), "integer" character varying(255), "user_id" character varying(255), "uploaded_image" character varying(255), "created_at" timestamp, "updated_at" timestamp, CONSTRAINT fk_talents_category_id FOREIGN KEY ("category_id") REFERENCES "categories" ("id"), CONSTRAINT fk_talents_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id")) 
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36mCatarseSettingsDb::Setting Load (0.7ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_uri' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_test' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_id' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_secret' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_key_base' LIMIT 1
  [1m[36mOauthProvider Load (0.7ms)[0m  [1mSELECT "oauth_providers".* FROM "oauth_providers"[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_api_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_list_id' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_successful_projects_list' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_failed_projects_list' LIMIT 1[0m
  [1m[35mOauthProvider Load (0.4ms)[0m  SELECT "oauth_providers".* FROM "oauth_providers"
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_api_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_encryption_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_slip_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_credit_card_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_interest_rate' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_cents_fee' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'host' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_max_installments' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.6ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_minimum_value_for_installment' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'stone_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.3ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_diners_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_diners_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_amex_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_amex_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_system' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_contact' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'company_name' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1
  [1m[36mActiveRecord::SchemaMigration Load (0.8ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTalents (20151003180757)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (0.8ms)[0m  [1m        SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'talents'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )
[0m
  [1m[35m (0.7ms)[0m          SELECT f.conname, pg_get_constraintdef(f.oid), t.relname
          FROM pg_class t, pg_constraint f
         WHERE f.conrelid = t.oid
           AND f.contype = 'f'
           AND t.relname = 'talents'
           AND t.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname = ANY (current_schemas(false)) )

  [1m[36m (9.7ms)[0m  [1mCREATE TABLE "talents" ("id" serial primary key, "name" character varying(255), "description" text, "video_url" character varying(255), "text" character varying(255), "category_id" integer, "user_id" integer, "uploaded_image" character varying(255), "created_at" timestamp, "updated_at" timestamp, CONSTRAINT fk_talents_category_id FOREIGN KEY ("category_id") REFERENCES "categories" ("id"), CONSTRAINT fk_talents_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id")) [0m
  [1m[35m (3.2ms)[0m  CREATE INDEX "fk__talents_category_id" ON "talents" ("category_id")
  [1m[36m (2.9ms)[0m  [1mCREATE INDEX "fk__talents_user_id" ON "talents" ("user_id")[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20151003180757"]]
  [1m[36m (3.5ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.9ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"   ORDER BY version
  [1m[36mCatarseSettingsDb::Setting Load (0.7ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_uri' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_test' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_id' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (1.1ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_secret' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_key_base' LIMIT 1
  [1m[36mOauthProvider Load (0.7ms)[0m  [1mSELECT "oauth_providers".* FROM "oauth_providers"[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.3ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_api_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_list_id' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_successful_projects_list' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_failed_projects_list' LIMIT 1[0m
  [1m[35mOauthProvider Load (0.5ms)[0m  SELECT "oauth_providers".* FROM "oauth_providers"
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_api_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_encryption_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_slip_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_credit_card_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_interest_rate' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_cents_fee' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'host' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_max_installments' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_minimum_value_for_installment' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'stone_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.2ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_diners_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_diners_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_amex_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_amex_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.6ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_system' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_contact' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'company_name' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.7ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_uri' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.6ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'moip_test' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_id' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'google_api_secret' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_key_base' LIMIT 1
  [1m[36mOauthProvider Load (0.7ms)[0m  [1mSELECT "oauth_providers".* FROM "oauth_providers"[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.6ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_api_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_list_id' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_successful_projects_list' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'mailchimp_failed_projects_list' LIMIT 1[0m
  [1m[35mOauthProvider Load (0.5ms)[0m  SELECT "oauth_providers".* FROM "oauth_providers"
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_api_key' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_encryption_key' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_slip_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_credit_card_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_interest_rate' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_cents_fee' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'host' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_max_installments' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'pagarme_minimum_value_for_installment' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.6ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'stone_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_diners_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_diners_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_amex_tax' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'cielo_installment_not_amex_tax' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.4ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_system' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'email_contact' LIMIT 1
  [1m[36mCatarseSettingsDb::Setting Load (0.5ms)[0m  [1mSELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'company_name' LIMIT 1[0m
  [1m[35mCatarseSettingsDb::Setting Load (0.5ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'aws_access_key' LIMIT 1


Started GET "/" for 10.0.2.2 at 2015-10-04 04:03:19 +0000
  [1m[36mActiveRecord::SchemaMigration Load (1.7ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by ProjectsController#index as HTML
  [1m[35mUser Load (1.3ms)[0m  SELECT  "users".* FROM "users"  WHERE "users"."id" = 1  ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPayment Load (2.4ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  [1m[35mProject Load (1.0ms)[0m  SELECT DISTINCT "projects".* FROM "projects" INNER JOIN "contributions" ON "projects"."id" = "contributions"."project_id" WHERE (contributions.was_confirmed) AND "contributions"."user_id" = $1  ORDER BY projects.created_at DESC  [["user_id", 1]]
  [1m[36mProject Load (0.4ms)[0m  [1mSELECT "projects".* FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/shared/_user_menu.html.slim (135.9ms)
  Rendered catarse_bootstrap/shared/_header.html.slim (384.3ms)
  Rendered catarse_bootstrap/shared/_header_big.html.slim (452.3ms)
  [1m[35mProject Load (1.0ms)[0m  SELECT  "projects".* FROM "projects"  WHERE ("projects"."state" IN ('online')) AND (EXISTS(SELECT true FROM users u WHERE u.id = projects.user_id AND lower(u.address_state) = lower(NULL)))  ORDER BY random() LIMIT 3
  [1m[36mProjectsForHome Load (2.4ms)[0m  [1mSELECT "projects_for_home".* FROM "projects_for_home"  WHERE "projects_for_home"."origin" = 'recommended'[0m
  Rendered catarse_bootstrap/projects/_card.html.slim (0.1ms)
  [1m[35mProjectsForHome Load (1.9ms)[0m  SELECT "projects_for_home".* FROM "projects_for_home"  WHERE "projects_for_home"."origin" = 'expiring'
  Rendered catarse_bootstrap/projects/_card.html.slim (0.1ms)
  [1m[36mProjectsForHome Load (1.7ms)[0m  [1mSELECT "projects_for_home".* FROM "projects_for_home"  WHERE "projects_for_home"."origin" = 'recents'[0m
  Rendered catarse_bootstrap/projects/_card.html.slim (0.1ms)
  Rendered catarse_bootstrap/shared/_footer_welcome.html.slim (20.3ms)
  Rendered catarse_bootstrap/shared/_footer_about.html.slim (18.6ms)
  Rendered catarse_bootstrap/shared/_footer_navigate.html.slim (11.0ms)
  Rendered catarse_bootstrap/shared/_newsletter.html.slim (19.1ms)
  Rendered layouts/_facebook_like.html.slim (6.1ms)
  Rendered catarse_bootstrap/shared/_footer_big.html.slim (320.6ms)
  Rendered catarse_bootstrap/projects/index.html.slim within layouts/catarse_bootstrap (7352.2ms)
  [1m[35mCACHE (0.0ms)[0m  SELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'  [["user_id", 1]]
  [1m[36mUserTotal Load (0.4ms)[0m  [1mSELECT  "user_totals".* FROM "user_totals"  WHERE "user_totals"."user_id" = $1 LIMIT 1[0m  [["user_id", 1]]
  [1m[35m (0.4ms)[0m  SELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted'))  [["user_id", 1]]
  [1m[36m (0.4ms)[0m  [1mSELECT COUNT(*) FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" IN ('online','waiting_funds','successful','failed'))[0m  [["user_id", 1]]
  [1m[35mProject Exists (0.4ms)[0m  SELECT  1 AS one FROM "projects"  WHERE "projects"."user_id" = $1 AND ("projects"."state" NOT IN ('deleted')) AND ("projects"."state" IN ('online')) LIMIT 1  [["user_id", 1]]
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "payments".* FROM "payments" INNER JOIN "contributions" "contributions_payments" ON "contributions_payments"."id" = "payments"."contribution_id" INNER JOIN "projects" ON "projects"."id" = "contributions_payments"."project_id" INNER JOIN "contributions" ON "payments"."contribution_id" = "contributions"."id" WHERE "contributions"."user_id" = $1 AND "projects"."state" = 'failed' AND "payments"."state" = 'paid' AND "payments"."gateway" = 'Pagarme' AND "payments"."payment_method" = 'BoletoBancario'[0m  [["user_id", 1]]
  Rendered catarse_bootstrap/layouts/_new_zendesk.html.slim (6.2ms)
  Rendered layouts/_facebook_sdk.html.slim (5.0ms)
Completed 200 OK in 9882ms (Views: 9768.7ms | ActiveRecord: 25.4ms)


Started GET "/assets/catarse_bootstrap/fonts.css?body=1" for 10.0.2.2 at 2015-10-04 04:03:30 +0000


Started GET "/assets/catarse_bootstrap/catarse.css?body=1" for 10.0.2.2 at 2015-10-04 04:03:30 +0000


Started GET "/assets/catarse_bootstrap/logo_big.png" for 10.0.2.2 at 2015-10-04 04:03:31 +0000


Started GET "/assets/jquery.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:32 +0000


Started GET "/assets/underscore.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:32 +0000


Started GET "/assets/backbone.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:33 +0000


Started GET "/assets/jquery-ui/core.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:34 +0000


Started GET "/assets/jquery-ui/widget.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:35 +0000


Started GET "/assets/jquery-ui/dialog.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:35 +0000


Started GET "/assets/jquery-ui/droppable.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:36 +0000


Started GET "/assets/jquery-ui/effect.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:37 +0000


Started GET "/assets/jquery-ui/effect-blind.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:37 +0000


Started GET "/assets/jquery-ui/effect-bounce.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:38 +0000


Started GET "/assets/jquery-ui/effect-drop.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:39 +0000


Started GET "/assets/jquery-ui/effect-explode.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:40 +0000


Started GET "/assets/jquery-ui/effect-fold.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:40 +0000


Started GET "/assets/jquery-ui/effect-fade.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:41 +0000


Started GET "/assets/jquery-ui/effect-clip.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:42 +0000


Started GET "/assets/jquery-ui/effect-highlight.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:43 +0000


Started GET "/assets/jquery-ui/effect-size.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:43 +0000


Started GET "/assets/jquery-ui/effect-scale.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:44 +0000


Started GET "/assets/jquery-ui/effect-puff.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:45 +0000


Started GET "/assets/jquery-ui/effect-pulsate.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:45 +0000


Started GET "/assets/jquery-ui/effect-shake.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:46 +0000


Started GET "/assets/jquery-ui/selectmenu.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:47 +0000


Started GET "/assets/jquery-ui/effect-transfer.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:48 +0000


Started GET "/assets/jquery-ui/progressbar.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:48 +0000


Started GET "/assets/jquery-ui/selectable.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:49 +0000


Started GET "/assets/jquery-ui/effect-slide.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:50 +0000


Started GET "/assets/jquery-ui/slider.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:50 +0000


Started GET "/assets/jquery-ui/tooltip.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:51 +0000


Started GET "/assets/jquery-ui/sortable.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:52 +0000


Started GET "/assets/jquery-ui/spinner.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:53 +0000


Started GET "/assets/jquery-ui.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:53 +0000


Started GET "/assets/jquery-ui/tabs.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:54 +0000


Started GET "/assets/jquery.elastic.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:55 +0000


Started GET "/assets/best_in_place.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:55 +0000


Started GET "/assets/app/pages/registration.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:56 +0000


Started GET "/assets/cocoon.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:57 +0000


Started GET "/assets/app/pages/how_it_works.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:58 +0000


Started GET "/assets/app/pages/reset_password.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:59 +0000


Started GET "/assets/app/pages/search.js?body=1" for 10.0.2.2 at 2015-10-04 04:03:59 +0000


Started GET "/assets/jquery-ui/menu.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:00 +0000


Started GET "/assets/jquery-ui/accordion.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:01 +0000


Started GET "/assets/jquery-ui/autocomplete.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:01 +0000


Started GET "/assets/jquery-ui/position.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:02 +0000


Started GET "/assets/jquery-ui/button.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:03 +0000


Started GET "/assets/jquery-ui/draggable.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:03 +0000


Started GET "/assets/jquery-ui/datepicker.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:04 +0000


Started GET "/assets/jquery-ui/mouse.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:05 +0000


Started GET "/assets/jquery-ui/resizable.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:06 +0000


Started GET "/assets/lib/skull.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:06 +0000


Started GET "/assets/lib/form.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:07 +0000


Started GET "/assets/lib/jquery.brbanks.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:08 +0000


Started GET "/assets/lib/jquery.headline.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:09 +0000


Started GET "/assets/lib/jquery.payment.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:09 +0000


Started GET "/assets/lib/modal.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:10 +0000


Started GET "/assets/lib/pagination.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:11 +0000


Started GET "/assets/lib/show_password_input.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:11 +0000


Started GET "/assets/lib/tabs.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:12 +0000


Started GET "/assets/lib/twitter.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:13 +0000


Started GET "/assets/lib/ui_helper.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:13 +0000


Started GET "/assets/app/app.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:14 +0000


Started GET "/assets/app/admin/admin.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:14 +0000


Started GET "/assets/app/admin/admin_sort.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:15 +0000


Started GET "/assets/app/bank_accounts/bank_account_form.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:16 +0000


Started GET "/assets/app/contribution/contribution.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:16 +0000


Started GET "/assets/app/contribution/contribution_payment.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:17 +0000


Started GET "/assets/app/contribution/contribution_review.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:18 +0000


Started GET "/assets/app/pages/explore.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:19 +0000


Started GET "/assets/app/pages/guides.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:20 +0000


Started GET "/assets/app/pages/hello.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:20 +0000


Started GET "/assets/app/pages/home.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:21 +0000


Started GET "/assets/app/project/project.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:22 +0000


Started GET "/assets/app/project/project_comments.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:23 +0000


Started GET "/assets/app/project/project_contributions.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:23 +0000


Started GET "/assets/app/project/project_dashboard_reward.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:24 +0000


Started GET "/assets/app/project/project_dashboard_user.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:25 +0000


Started GET "/assets/app/project/project_edit.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:25 +0000


Started GET "/assets/app/project/project_form.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:26 +0000


Started GET "/assets/app/project/project_metrics.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:27 +0000


Started GET "/assets/app/project/project_nav.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:28 +0000


Started GET "/assets/app/project/project_posts.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:28 +0000


Started GET "/assets/app/project/project_sidebar.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:29 +0000


Started GET "/assets/app/user/user.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:30 +0000


Started GET "/assets/app/user/user_document.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:31 +0000


Started GET "/assets/app/user/user_edit.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:32 +0000


Started GET "/assets/app/user/user_menu.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:32 +0000


Started GET "/assets/app/utils/mix_panel.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:33 +0000


Started GET "/assets/application.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:34 +0000


Started GET "/assets/backbone.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:35 +0000


Started GET "/assets/hero-new-home.jpg" for 10.0.2.2 at 2015-10-04 04:04:36 +0000


Started GET "/assets/catarse_bootstrap/user.jpg" for 10.0.2.2 at 2015-10-04 04:04:37 +0000


Started GET "/assets/catarse_bootstrap/lupa.png" for 10.0.2.2 at 2015-10-04 04:04:37 +0000


Started GET "/assets/catarse_bootstrap/loader.gif" for 10.0.2.2 at 2015-10-04 04:04:38 +0000


Started GET "/assets/icon-blog.png" for 10.0.2.2 at 2015-10-04 04:04:39 +0000


Started GET "/assets/catarse_bootstrap/icon-newsletter.png" for 10.0.2.2 at 2015-10-04 04:04:39 +0000


Started GET "/assets/logo-footer.png" for 10.0.2.2 at 2015-10-04 04:04:40 +0000


Started GET "/assets/jquery-ui/droppable.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:41 +0000


Started GET "/assets/jquery-ui/effect.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:41 +0000


Started GET "/assets/jquery-ui/effect-blind.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:42 +0000


Started GET "/assets/jquery-ui/effect-explode.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:43 +0000


Started GET "/assets/jquery-ui/effect-fold.js?body=1" for 10.0.2.2 at 2015-10-04 04:04:43 +0000
PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

  [1m[36mOauthProvider Load (2.1ms)[0m  [1mSELECT "oauth_providers".* FROM "oauth_providers"[0m
PG::UndefinedTable: ERROR:  relation "oauth_providers" does not exist
LINE 1: SELECT "oauth_providers".* FROM "oauth_providers"
                                        ^
: SELECT "oauth_providers".* FROM "oauth_providers"
PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

  [1m[35mCatarseSettingsDb::Setting Load (1.4ms)[0m  SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 1: SELECT  "settings".* FROM "settings"  WHERE "settings"."name...
                                  ^
: SELECT  "settings".* FROM "settings"  WHERE "settings"."name" = 'secret_token' LIMIT 1
PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

PG::UndefinedTable: ERROR:  relation "settings" does not exist
LINE 5:                WHERE a.attrelid = '"settings"'::regclass
                                          ^
:               SELECT a.attname, format_type(a.atttypid, a.atttypmod),
                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
                FROM pg_attribute a LEFT JOIN pg_attrdef d
                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
               WHERE a.attrelid = '"settings"'::regclass
                 AND a.attnum > 0 AND NOT a.attisdropped
               ORDER BY a.attnum

